import{_ as t,c as o,a as i,o as c}from"./app-Ulsq_P74.js";const r={};function a(d,e){return c(),o("div",null,e[0]||(e[0]=[i("<p><strong>基本类型</strong> 指一个最小化原子类型，无法解构为其他类型(一般意义上)，包括：</p><ul><li>数字类型 有符号整数 (<code>i8</code>, <code>i16</code>, <code>i32</code>, <code>i64</code>, <code>isize</code>)、 无符号整数 (<code>u8</code>, <code>u16</code>, <code>u32</code>, <code>u64</code>, <code>usize</code>)</li><li>字符串 字符串字面量和字符串切片 <code>&amp;str</code></li><li>布尔类型 <code>true</code> 和<code>false</code></li><li>字符类型 表示单个 Unicode 字符，存储为 4 个字节</li><li>单元类型 即 <code>()</code>  ，其唯一的值也是 <code>()</code></li></ul>",2)]))}const s=t(r,[["render",a],["__file","index.html.vue"]]),l=JSON.parse('{"path":"/learn-rust/base-type/","title":"基本类型","lang":"zh-CN","frontmatter":{"title":"基本类型","author":"鹏展博","createTime":"2022/06/03 05:40:54","permalink":"/learn-rust/base-type/","description":"基本类型 指一个最小化原子类型，无法解构为其他类型(一般意义上)，包括： 数字类型 有符号整数 (i8, i16, i32, i64, isize)、 无符号整数 (u8, u16, u32, u64, usize) 字符串 字符串字面量和字符串切片 &str 布尔类型 true 和false 字符类型 表示单个 Unicode 字符，存储为 4 个字...","head":[["meta",{"property":"og:url","content":"https://wlg.us.kg/learn-rust/base-type/"}],["meta",{"property":"og:site_name","content":"WBlog"}],["meta",{"property":"og:title","content":"基本类型"}],["meta",{"property":"og:description","content":"基本类型 指一个最小化原子类型，无法解构为其他类型(一般意义上)，包括： 数字类型 有符号整数 (i8, i16, i32, i64, isize)、 无符号整数 (u8, u16, u32, u64, usize) 字符串 字符串字面量和字符串切片 &str 布尔类型 true 和false 字符类型 表示单个 Unicode 字符，存储为 4 个字..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"鹏展博"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"基本类型\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"鹏展博\\"}]}"]]},"headers":[],"readingTime":{"minutes":0.42,"words":125},"git":{},"autoDesc":true,"filePathRelative":"notes/rust学习简记/基础入门/基本类型.md"}');export{s as comp,l as data};
