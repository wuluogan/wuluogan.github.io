import{_ as s,c as a,a as e,o as t}from"./app-Ulsq_P74.js";const n={};function d(p,i){return t(),a("div",null,i[0]||(i[0]=[e(`<h2 id="vertical-media-queries" tabindex="-1"><a class="header-anchor" href="#vertical-media-queries"><span>Vertical Media Queries</span></a></h2><p>有时候，构建一个组件，并且通过调整浏览器的宽度的大小进行测试，是非常有用的。 但可能会经常的忽略针对 高度 进行测试。</p><p>一种常见的场景是，在一个 main 和 aside 布局的场景中，一些 辅助的导航链接位于 aside 的底部位置。</p><p>请看以下示例，辅助导航链接 通过 <code>position:sticky</code> 粘在 aside 的底部。在高度足够的情况下，看起来 还不错。</p><div class="demo-wrapper"><div class="demo-head"><div class="demo-ctrl"><i></i><i></i><i></i></div></div><div class="demo-container"><div class="flex-box-140"><aside><div class="user-list"><div><span></span><p></p></div><div><span></span><p></p></div><div><span></span><p></p></div><div><span></span><p></p></div></div><div class="aside-nav"><div>Home</div><div>Article</div><div>About</div><div>Contact</div></div></aside><main></main></div></div></div><p>但是，如果浏览器窗口的高度较小，辅助导航链接会被挤压，与其他内容发生重叠。</p><div class="demo-wrapper"><div class="demo-head"><div class="demo-ctrl"><i></i><i></i><i></i></div></div><div class="demo-container"><div class="flex-box-140 min"><aside><div class="user-list"><div><span></span><p></p></div><div><span></span><p></p></div><div><span></span><p></p></div><div><span></span><p></p></div></div><div class="aside-nav"><div>Home</div><div>Article</div><div>About</div><div>Contact</div></div></aside><main></main></div></div></div><p>通过使用 CSS 垂直媒体查询，我们可以避免这个问题。</p><div class="language-css" data-ext="css" data-title="css"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">@</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">media</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">min-height</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 600</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">px</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  .</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">aside__nav</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    position</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> sticky</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    bottom</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 1</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">rem</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  }</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre></div><p>这样，只有当视口高度大于或等于 600px 时，辅助导航才会粘在底部。</p><p>可能有更好的方法来实现该行为（例如使用 margin-auto ），但在此示例中专注于 <code>vertical media queries</code>。</p>`,11)]))}const r=s(n,[["render",d],["__file","index.html.vue"]]),c=JSON.parse('{"path":"/defensive-css/vertical-media-queries/","title":"Vertical Media Queries","lang":"zh-CN","frontmatter":{"title":"Vertical Media Queries","author":"鹏展博","createTime":"2023/08/10 10:23:42","permalink":"/defensive-css/vertical-media-queries/","description":"Vertical Media Queries 有时候，构建一个组件，并且通过调整浏览器的宽度的大小进行测试，是非常有用的。 但可能会经常的忽略针对 高度 进行测试。 一种常见的场景是，在一个 main 和 aside 布局的场景中，一些 辅助的导航链接位于 aside 的底部位置。 请看以下示例，辅助导航链接 通过 position:sticky 粘在...","head":[["meta",{"property":"og:url","content":"https://wlg.us.kg/defensive-css/vertical-media-queries/"}],["meta",{"property":"og:site_name","content":"WBlog"}],["meta",{"property":"og:title","content":"Vertical Media Queries"}],["meta",{"property":"og:description","content":"Vertical Media Queries 有时候，构建一个组件，并且通过调整浏览器的宽度的大小进行测试，是非常有用的。 但可能会经常的忽略针对 高度 进行测试。 一种常见的场景是，在一个 main 和 aside 布局的场景中，一些 辅助的导航链接位于 aside 的底部位置。 请看以下示例，辅助导航链接 通过 position:sticky 粘在..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"鹏展博"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Vertical Media Queries\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"鹏展博\\"}]}"]]},"headers":[],"readingTime":{"minutes":1.79,"words":537},"git":{},"autoDesc":true,"filePathRelative":"notes/防御性CSS/vertical-media-queries.md"}');export{r as comp,c as data};
