import{_ as e,c,a,o}from"./app-Ulsq_P74.js";const i={};function n(l,t){return o(),c("div",null,t[0]||(t[0]=[a('<div class="hint-container tip"><p class="hint-container-title">提问</p><ol><li>watch 是什么？</li><li>watchEffect 是什么？</li><li>watch 和 watchEffect 有什么异同？</li></ol></div><h2 id="分析" tabindex="-1"><a class="header-anchor" href="#分析"><span>分析</span></a></h2><p>本题考查对 vue 中 watch 和 watchEffect 的理解，实现原理等。</p><h3 id="回答策略" tabindex="-1"><a class="header-anchor" href="#回答策略"><span>回答策略</span></a></h3><ol><li>两个的定义</li><li>使用场景的差异</li><li>简述原理</li></ol><h2 id="回答" tabindex="-1"><a class="header-anchor" href="#回答"><span>回答</span></a></h2><ol><li><code>watchEffect</code> 立即运行一个函数，同时响应式地追踪其依赖，并在依赖更改时重新执行。</li><li><code>watch</code> 侦听一个或多个响应式数据源，并在数据源变化时调用所给的回调函数。</li><li><code>watch</code> 和 <code>watchEffect</code> 都能响应式地执行有副作用的回调。它们之间的主要区别是追踪响应式依赖的方式： <ol><li><code>watch</code> 只追踪明确侦听的数据源。它不会追踪任何在回调中访问到的东西。另外，仅在数据源确实改变时才会触发回调。watch 会避免在发生副作用时追踪依赖，因此，我们能更加精确地控制回调函数的触发时机。</li><li><code>watchEffect</code>，则会在副作用发生期间追踪依赖。它会在同步执行过程中，自动追踪所有能访问到的响应式属性。这更方便，而且代码往往更简洁，但有时其响应性依赖关系会不那么明确。</li><li>从实现上看，<code>watchEffect(fn, options)</code> 相当于 <code>watch(fn, null, options)</code></li></ol></li></ol>',7)]))}const r=e(i,[["render",n],["__file","index.html.vue"]]),f=JSON.parse('{"path":"/interview-question/6lud0xnd/","title":"watch-watchEffect","lang":"zh-CN","frontmatter":{"title":"watch-watchEffect","author":"鹏展博","createTime":"2022/04/25 22:19:38","permalink":"/interview-question/6lud0xnd/","description":"提问 watch 是什么？ watchEffect 是什么？ watch 和 watchEffect 有什么异同？ 分析 本题考查对 vue 中 watch 和 watchEffect 的理解，实现原理等。 回答策略 两个的定义 使用场景的差异 简述原理 回答 watchEffect 立即运行一个函数，同时响应式地追踪其依赖，并在依赖更改时重新执行。 ...","head":[["meta",{"property":"og:url","content":"https://wlg.us.kg/interview-question/6lud0xnd/"}],["meta",{"property":"og:site_name","content":"WBlog"}],["meta",{"property":"og:title","content":"watch-watchEffect"}],["meta",{"property":"og:description","content":"提问 watch 是什么？ watchEffect 是什么？ watch 和 watchEffect 有什么异同？ 分析 本题考查对 vue 中 watch 和 watchEffect 的理解，实现原理等。 回答策略 两个的定义 使用场景的差异 简述原理 回答 watchEffect 立即运行一个函数，同时响应式地追踪其依赖，并在依赖更改时重新执行。 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"鹏展博"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"watch-watchEffect\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"鹏展博\\"}]}"]]},"headers":[],"readingTime":{"minutes":1.19,"words":357},"git":{},"autoDesc":true,"filePathRelative":"notes/面试题/Vue/v3/watch-watchEffect.md"}');export{r as comp,f as data};
