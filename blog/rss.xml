<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>WBlog</title>
        <link>https://blog.wlgs.site/blog</link>
        <description>My Blog</description>
        <lastBuildDate>Wed, 18 Jun 2025 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>zh</language>
        <item>
            <title><![CDATA[关于我跟前外包公司劳动纠纷]]></title>
            <link>https://blog.wlgs.site/blog/20250618</link>
            <guid>https://blog.wlgs.site/blog/20250618</guid>
            <pubDate>Wed, 18 Jun 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[转载自 https://linux.do/t/topic/726506]]></description>
            <content:encoded><![CDATA[<p>转载自 <a href="https://linux.do/t/topic/726506" target="_blank" rel="noopener noreferrer">https://linux.do/t/topic/726506</a></p>
<p>我想写一篇关于我跟前外包公司劳动纠纷最后是怎么拿到赔偿的经历帖子，会有人看吗？
想要帮助一下仍然在外包公司水深火热的兄弟们，之前尝试发在小红书上，被秒封了。</p>
<p><em>2025年6月16日23:57:02</em></p>
<h2 class="anchor anchorWithStickyNavbar_jpdk" id="深夜先写一段">深夜先写一段<a href="https://blog.wlgs.site/blog/20250618#%E6%B7%B1%E5%A4%9C%E5%85%88%E5%86%99%E4%B8%80%E6%AE%B5" class="hash-link" aria-label="深夜先写一段的直接链接" title="深夜先写一段的直接链接">​</a></h2>
<p>坐标佛山，外包是 xxxx 软件股份有限公司（佬友自己猜哈，4 个 x 就是对应 4 个字，鄙人怕被告），甲方是仁饱 (懂得都懂)，鄙人在甲方在离项前一个月的月初，外包公司的人事管理找到我，进行第一次面谈，跟我说下个月 1 号就不用来了，叫我可以在这段时间找一下别的工作。</p>
<p>我问她会有赔偿吗，她说是没有的，因为甲方对我表现不满意，所以没有赔偿。(甲方没有离项赔偿，外包自然也不会自己掏腰包给我赔偿)，问我有没有什么想问的想说的，我说没有 (当我傻是吧，难道直接跟你说我不服！我要仲裁！)，就叫我回去了。</p>
<p>回去工位第一件事是什么呢？是开始着手收集证据吗？错！鄙人不是圣人，没这么冷静淡定，第一次被炒鱿鱼，心情难免有点难以平静。非常多的情绪涌进大脑。用香水来比喻的话，前调是害怕：害怕没有工作没有收入带来的迷茫，害怕舒适圈被打破后不可预知的生活；中调是毕业到现在工作了快五年了，终于可以放个长假的喜悦；后调是没有赔偿的烦恼，要跟大公司进行劳动纠纷的恐慌。(这是我当天真实的心情，很乱很杂) 当晚没睡好觉。</p>
<p>过了一晚，来到第二天早上，心情好多了。回去上班后，便开始准备好证据：与甲方对接的工作资料、聊天记录 (聊天记录最好是录屏记录，需要展示双方的身份信息，不然没有身份信息，法官怎么相信你对面的这个人是甲方呢？)、还有每天的打卡记录 (你在甲方与外包公司的考勤记录)，还有其他杂七杂八的，能证明自己在甲方上班的证据。</p>
<p>只要记住一点:** 你离项后被踢出组织就无法再次接触的资料都需要保存。**</p>
<p>当你把所有这些证据资料保存好之后，恭喜你！你可以长呼一口气了，现在这些证据将成为你日后万一对簿公堂最不重要的证据。(没错，这些东西是法官最不看重的，真实性合法性都不如有公章的文件高，因此这些证据只能做补充性的证据，但话又说回来，你不做这些资料的保存，万一以后用到了呢？它可以没用，但不能在我需要的时候没有。)</p>
<p>接着静静等待下个月的 1 号到来，在期间，人事跟两个领导又过来跟我聊，这是第二次谈话，问我对于赔偿有没有主张，他们可以申请（有一说一，那时候感觉外包公司还挺好，主动问我要多少赔偿），我就说至少一个月（干了两年半了，要一个月的赔偿不过分吧兄弟们），领导们便说记下了，会帮我申请。又过了一个星期，距离下个月就剩一周了，人事她一个人约了我进行第三次谈话，她告诉我公司只能给到两周的赔偿，给不了一个月，问我接不接受，那肯定不行，两周赔偿打发谁呢！所以这次谈话也是不欢而散，但我没有表现出任何表情（扑克脸！重点！不能让敌人知道你在想什么！），就这样一直到了这个月的最后一天，外包公司没有再找我聊，但是提醒我，收拾好个人物品，赔偿的事再商量，殊不知我已经为了这一天已经准备了半个月（好在有朋友是当律师的，为我提供了不少专业建议，心安了不少）。</p>
<p>到了下个月的 1 号，开始了我的斗争第一天，我照常去上班了，我至今还记得甲方领导那个诧异的眼神，像是对于我为什么还在这里产生了深深的疑问。但是他没有多问什么，还是像往常那样给我布置任务。开完早会，果不其然，我的外包公司就过来找我了，问我为什么今天还来上班。我说你们解雇通知书都没给我，我为什么不来上班（是的，外包就口头通知我这个月 1 号不用来上班，但是任何书面通知都没有）。她没有继续追问，我也回去工位继续完成今天的任务（鄙人还是非常敬业的），孰相安无事到下班，我掏出了我的手机，打开了准备已久的打卡软件，自拍了一张我与甲方公司的照片，打个照片下班卡。</p>
<p>斗争的第二天，也是最恶心我的一天，今天到达甲方公司大楼门口，像往常一样刷脸进门，但是今天门禁机并没有出现我的牛马入职照与 “验证通过”，而是 “陌生人” 三个红字，我知道，我被禁止进入甲方办公楼了。我承认有那么一刹那我是慌的，我从小没干过什么坏事，是老师同学眼中的好学生，做过最坏的事就是小学时候跟着我那几个猪朋狗友同学偷过便利店一根两毛钱的辣条（那时候辣条是按根散卖的，两毛一条，非常长一条），那时候人非常多，手里捏着两毛钱纸币想给钱，但是被挤着挤着挤到店外面去了，就干过那一次，后面就没偷过东西了，所以我记得很清晰，还记得那天下午的夕阳真美啊。</p>
<p>跑题了，其实今天在上班的路上，我就猜到有这么一招了（这半个月我也在高强度在网上翻查资料，看了很多人的经历，学习了很多经验），所以在看到门禁不通过的时候，我也只是慌了一下，随之拿出手机开始录像，我先询问保安，是不是门禁不通过没办法进去办公，保安被我问蒙了，然后他笑了笑说：肯定啊，门禁不通过只能让领导下来带你进去。我看保安也不是什么穷凶极恶的人，我就跟他说我现在有个劳动纠纷，我就走了流程，一会就走，保安 “噢” 的一声，就没理我了（不得不说，有时候保安也是打个工，你尊重别人，别人也会好好对你，如果一来门口坐地上开始哭爹喊娘，你说保安是赶你还是不赶你）我在门口拍了几段视频后，我就开始在企业微信上找我的甲方领导，问他今天我门禁进不去了，是不是门禁系统坏了，还是说不需要我来上班了（这也是流程，他回不回无所谓，最重要的是要让法官知道你不是故意旷工，而是甲方不提供办公场所），等了一会，领导没回复我，我就继续问了一次，又等了一会，突然我的企业微信被强制退出了，再尝试登录就提示我被移出企业组织关系。</p>
<p>到了这一步，其实打个照片卡就可以回家等电话了。但是我多做了一步，我拨打了派出所电话，理由是公司不让我进去取回我的个人物品，现在有纠纷（这一步的作用是取一份报警回执，证明我确实不是主观因素旷工，为什么需要这个报警回执来证明呢？这就是上面提到的，任何自己取证的聊天记录的合法性真实性都无法与一个公章相提并论，更何况这还是一个国家级公章）。</p>
<h2 class="anchor anchorWithStickyNavbar_jpdk" id="附一张照片证明真不是段子">附一张照片证明真不是段子<a href="https://blog.wlgs.site/blog/20250618#%E9%99%84%E4%B8%80%E5%BC%A0%E7%85%A7%E7%89%87%E8%AF%81%E6%98%8E%E7%9C%9F%E4%B8%8D%E6%98%AF%E6%AE%B5%E5%AD%90" class="hash-link" aria-label="附一张照片证明真不是段子的直接链接" title="附一张照片证明真不是段子的直接链接">​</a></h2>
<p><img decoding="async" loading="lazy" src="https://linux.do/uploads/default/optimized/4X/d/8/a/d8a6acd8900bca184d5f5561dedfe865746403b7_2_281x500.jpeg" alt="" class="img_aT2B"></p>
<p>不知道会不会有前外包公司的人看到，先把时间打个码（不过看到也无所谓了，反正也不会再去外包上班 ）</p>
<h2 class="anchor anchorWithStickyNavbar_jpdk" id="先写到这吧困了累了洗澡睡了明天还要上班-">先写到这吧，困了累了，洗澡睡了，明天还要上班 !<a href="https://blog.wlgs.site/blog/20250618#%E5%85%88%E5%86%99%E5%88%B0%E8%BF%99%E5%90%A7%E5%9B%B0%E4%BA%86%E7%B4%AF%E4%BA%86%E6%B4%97%E6%BE%A1%E7%9D%A1%E4%BA%86%E6%98%8E%E5%A4%A9%E8%BF%98%E8%A6%81%E4%B8%8A%E7%8F%AD-" class="hash-link" aria-label="先写到这吧，困了累了，洗澡睡了，明天还要上班 !的直接链接" title="先写到这吧，困了累了，洗澡睡了，明天还要上班 !的直接链接">​</a></h2>
<p><em>2025年6月17日22:33:51</em></p>
<h2 class="anchor anchorWithStickyNavbar_jpdk" id="来更新一波">来更新一波<a href="https://blog.wlgs.site/blog/20250618#%E6%9D%A5%E6%9B%B4%E6%96%B0%E4%B8%80%E6%B3%A2" class="hash-link" aria-label="来更新一波的直接链接" title="来更新一波的直接链接">​</a></h2>
<p>报警之后，来了个辅警大叔，跟辅警大叔简单说了下情况之后，他表示他也解决不了我的纠纷，甲方不给我进去拿东西他也不能命令别人让我进去，我表示理解，并提出我只需要一个报警回执就行。(其实在上个月最后一天就把所有私人物品拿回家了，留下一些没清理的废纸在工位，所以不论是甲方给不给我进去都无所谓，不给我进去我还少演一场戏)接着辅警大叔表示需要回派出所才能给我开报警回执，我表示没问题(不是第一次去，所以比较淡定)。</p>
<p>在派出所里接到了在外包公司的领导电话，一接通就从语气上感受到了领导怒火(后面知道了甲方给我的外包公司罚款了，怪不得这么生气，我猜可能是我的这个报警行为影响到了甲方的形象之类的吧，所以怪罪到外包公司身上)。领导一上来就对我质三连:为什么要报警？这样做能对我要赔偿有帮助吗？为什么不听公司安排继续回去上班？</p>
<p>我心中冷笑，你不懂就对了，你要是懂了那我还玩什么。</p>
<p>跟领导聊了一会，都是你讲你的我讲我的，最后领导决定下午让我过去广州的公司总部聊聊(有一说一，这领导人挺好的，虽然语气很重，但是也没说过一句脏话)然后挂电话拿了报警回执之后就回家打游戏了(明日方舟，启动！)。</p>
<p>下午过去广州总部（新地点）见到领导，畅聊了三个多小时，大概是问我现在想怎样，我说你出解雇通知书就完事了，他说，公司不会解雇你，现在要求你过来广州总部这边上班打卡，我没说话，因为我的劳动合同里面写的办公地点就是这个广州这边的总部地点，后面也咨询了律师，律师说这个在劳动合同中白纸黑字写好的，所以不构成调岗，并且我也不能拒绝。但是因为我在佛山工作了两年半，已经形成了固定工作地点，所以可以要求公司给我一定的交通补贴或住宿补贴，公司不同意的话我就有权拒绝这个工作地点变更（这是黄埔免费法律援助提供的专业意见）。后面我也是就着这个交通补贴一直在拖着，没有别的办法，后面的聊天内容就是我在这个新的工作地点要做的事情，当然我只是听听，没口头答应。</p>
<p><img decoding="async" loading="lazy" src="https://linux.do/uploads/default/optimized/4X/1/d/f/1df5bffa70df820fdfc79b9420a2879fb705fa2d_2_309x375.jpeg" alt="" class="img_aT2B"></p>
<p>最后我说我还要回去甲方公司打卡才溜掉，不然估计这个b还要留我到他下班。(划重点！记得每天去甲方公司打上下班卡，不让进就去外面打个自拍卡，把自己和公司拍进去，最好再录个视频)，晚上我收到了一封邮件，内容是让我明天去新公司报道。我当然不同意，回复了一封拒绝调岗通知书，要求公司需提供交通补贴。另外还要发一封邮件，主题是要求恢复办公条件，发给你的外包公司领导和甲方领导，他们读不读无所谓，万一以后用到呢。</p>
<p>第二天早上我照常去甲方公司外面打卡，打完卡在回家的路上接到了领导的电话，问我今天为什么没有过去总部，我说我昨天没有答应，为什么要过去，要我过去上班的话必须给予我一定交通补贴。领导没说话，直接挂了。过了一会儿又打给我，叫我今天尽快过去黄埔总部那边，说是有重要事情，既然是领导要我过去，那我自然也要过去。</p>
<p>可能会有人问，你都跟外包这样干了，为什么还要听领导的话，他叫你过去你就过去？那我问你(小明脸 )，我现在是不是外包的员工？我签的是正常的劳动合同吗？如果我不过去，后面他因为这个事情说我违反了什么条例什么法，那我是不是很被动？</p>
<p>扯远了，回到家收拾了下，又踏上了去总部的路上，车程两个小时多，是真的远。过去一坐下，探马的让我等一下，他在忙，嗯是让我坐了一个多小时(有点生气嗷)。终于等待他忙完，还以为是什么事，原来是叫我明天去面试一个新的岗位。(这里也需要划重点，公司叫你去面试的话，员工是不可以拒绝的，因为这是公司的权利)。后面简单的聊了聊就走了。下午照常打了卡之后就回家了。</p>
<p>第三天，我就到了面试的地方去面了个试(笑死，根本没准备，而且是java岗位，我是写python的，根本不搭边)，问就是不知道。十分钟结束了面试回家。(今天是最少事的一天，当然别忘记了打卡。)</p>
<p>第四天，果然收到了领导的电话，质问我昨天是面试的态度吗？问我面试问题就说不知道。（我心里都快笑出声了 )，因为根本不想回答）我说因为我搞Python的，不会Java有问题吗？领导语噎。接着再次问我想要多少赔偿，我说我说了不算，法律说了算。领导又语噎，挂了。</p>
<p>下午，外包公司的法务小姐姐打电话过来，要求我回去甲方公司归还甲方的工牌（之前甲方不给我进公司，工牌还在我身上），然后跟我说了如果不还工牌可能会被起诉，承担不归还工牌的一切后果，给我半个小时的考虑时间，如果不答应归还的话就着手开始走流程了。说实话，我哪见过这种场面啊，确实是慌了，所以就答应了。在去甲方公司的路上，我跟我朋友聊了下，我朋友教育我，说我要是还了这个工牌，以后要是打仲裁，就差这一个工牌做证据，你不就是个小丑？我想了想好像也确实，现在任何有关甲方的东西都需要保留下来，用在曾经工作的证明。但是我已经答应了外包公司归还甲方工牌，怎么办呢？这时候我朋友给我出了个损招，说我在来的路上不小心丢了（太妙了，真的绝了，丢了也不是我愿意的是吧，不是我不想还），到了甲方公司门口，我找了个地方把工牌藏了起来（细节！万一领导不信，搜我身那我岂不是炸了），后面领导出来后我说工牌丢了，不见了。他脸上那个无语的表情真的把我看乐了，没办法，让我写了一封保证书，保证不使用甲方的工牌做其他用途，本人与甲方公司无任何关系。</p>
<p>自今天后，我跟外包公司就是邮件撕逼，外包发邮件让我去总部打卡上班，我就用交通补贴的事情拖，我提出交通补贴一个月要3000块（律师说的，让我用打车的费用去算，佛山去黄埔，一个月的来回车费3000块钱不过分吧兄弟们），也是冲着外包公司不可能答应的条件去提的，毕竟外包公司真答应了，我可就没有任何理由不去上班了。所以就这样持续了几天（具体忘记了几天，懒得找记录看了）</p>
<p>过了几天，领导就打电话过来，跟我谈赔偿的事，提出愿意赔两个月，我也就工作了两年半，这个结果对我来说已经可以接受了，如果不接受真的要去仲裁的话，又要耗费不少精力，而且不知道能不能成功（仲裁还是有风险的），所以下午就去把手续办好了。（签了一大堆协议、文件，各位在签文件的时候一定要看清楚自己签的是什么文件，会有什么后果）</p>
<h1>下面是个人经历得出的经验与建议，大家就当看个乐子，千万别当成专业的法律建议 如果身陷劳动纠纷，还是需要咨询律师寻求专业帮助</h1>
<h2 class="anchor anchorWithStickyNavbar_jpdk" id="以下是鄙人业余的一些小小建议非专业的法律人士建议">以下是鄙人业余的一些小小建议，非专业的法律人士建议！<a href="https://blog.wlgs.site/blog/20250618#%E4%BB%A5%E4%B8%8B%E6%98%AF%E9%84%99%E4%BA%BA%E4%B8%9A%E4%BD%99%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B0%8F%E5%B0%8F%E5%BB%BA%E8%AE%AE%E9%9D%9E%E4%B8%93%E4%B8%9A%E7%9A%84%E6%B3%95%E5%BE%8B%E4%BA%BA%E5%A3%AB%E5%BB%BA%E8%AE%AE" class="hash-link" aria-label="以下是鄙人业余的一些小小建议，非专业的法律人士建议！的直接链接" title="以下是鄙人业余的一些小小建议，非专业的法律人士建议！的直接链接">​</a></h2>
<h2 class="anchor anchorWithStickyNavbar_jpdk" id="以下是鄙人业余的一些小小建议非专业的法律人士建议-1">以下是鄙人业余的一些小小建议，非专业的法律人士建议！<a href="https://blog.wlgs.site/blog/20250618#%E4%BB%A5%E4%B8%8B%E6%98%AF%E9%84%99%E4%BA%BA%E4%B8%9A%E4%BD%99%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B0%8F%E5%B0%8F%E5%BB%BA%E8%AE%AE%E9%9D%9E%E4%B8%93%E4%B8%9A%E7%9A%84%E6%B3%95%E5%BE%8B%E4%BA%BA%E5%A3%AB%E5%BB%BA%E8%AE%AE-1" class="hash-link" aria-label="以下是鄙人业余的一些小小建议，非专业的法律人士建议！的直接链接" title="以下是鄙人业余的一些小小建议，非专业的法律人士建议！的直接链接">​</a></h2>
<h2 class="anchor anchorWithStickyNavbar_jpdk" id="以下是鄙人业余的一些小小建议非专业的法律人士建议-2">以下是鄙人业余的一些小小建议，非专业的法律人士建议！<a href="https://blog.wlgs.site/blog/20250618#%E4%BB%A5%E4%B8%8B%E6%98%AF%E9%84%99%E4%BA%BA%E4%B8%9A%E4%BD%99%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B0%8F%E5%B0%8F%E5%BB%BA%E8%AE%AE%E9%9D%9E%E4%B8%93%E4%B8%9A%E7%9A%84%E6%B3%95%E5%BE%8B%E4%BA%BA%E5%A3%AB%E5%BB%BA%E8%AE%AE-2" class="hash-link" aria-label="以下是鄙人业余的一些小小建议，非专业的法律人士建议！的直接链接" title="以下是鄙人业余的一些小小建议，非专业的法律人士建议！的直接链接">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_jpdk" id="第一步">第一步<a href="https://blog.wlgs.site/blog/20250618#%E7%AC%AC%E4%B8%80%E6%AD%A5" class="hash-link" aria-label="第一步的直接链接" title="第一步的直接链接">​</a></h3>
<p>还在甲方上班的，应该尽量收集在甲方公司上班的证据，一切文件不要签，公司口头让你不要来甲方上班的，一律口头拒绝，照常上班。给你发纸质或邮件的调岗通知书的话，你就邮件回复拒绝，一定要明确拒绝态度。然后照常上班。
• 证据包括但不限于与领导和工作群的聊天记录，组织关系截图，工牌
• 在收集聊天记录时，应尽量使用录屏，在录屏时，可以点开领导或同事的个人信息，用于证明这是甲方公司的内部人员聊天，记录下三个月内的聊天记录即可。如果太多记录可酌情缩短时间，最重要的是可以从记录中看出曾经在甲方工作过。
• 工牌最好自己保管着，也是证明在甲方公司工作的有力证据，如果甲方公司坚持收缴，你可以说工牌不小心丢失了。甲方会跟你说丢失工牌产生的法律后果一切自负，这时候不要被唬住，他只是吓你以后公司丢失了什么东西就赖在你身上，但是也是需要公司举证的，我们清清白白不用怕他。如果当初入职时工牌需要交工本费拿到的，那更不需要交还，因为工牌是我们自己买的。</p>
<h3 class="anchor anchorWithStickyNavbar_jpdk" id="第二步">第二步<a href="https://blog.wlgs.site/blog/20250618#%E7%AC%AC%E4%BA%8C%E6%AD%A5" class="hash-link" aria-label="第二步的直接链接" title="第二步的直接链接">​</a></h3>
<p>到了退项日，甲方大概率会把你移出企业微信或钉钉，取消门禁和打卡权限。不要慌张，按下面步骤操作。
• 先在公司门口拍照打卡，打卡录像与照片各一份，都必须打上时间与地点的水印，可以去应用商店下载一个支持水印的相机。
• 开着手机录像，录下与门口保安沟通过程。大概过程就是询问保安你现在被取消门禁，是不是无法进入公司。
• 从企业微信钉钉上询问甲方领导，"今天被突然取消门禁权限，进不去公司，是不是出了什么问题，还需要回公司办公吗？"如果领导让你进公司那就照常上下班，下班也要记得水印打卡。
• 如果领导五分钟不回复或者明确不让你进公司，报警，理由是公司突然关闭门禁权限，现在有私人物品在公司无法取回，记住不要提自己是劳动纠纷。警察来了后简单叙述一下情况，然后问他拿报警回执(是报警回执，不是立案回执)</p>
<h3 class="anchor anchorWithStickyNavbar_jpdk" id="第三步">第三步<a href="https://blog.wlgs.site/blog/20250618#%E7%AC%AC%E4%B8%89%E6%AD%A5" class="hash-link" aria-label="第三步的直接链接" title="第三步的直接链接">​</a></h3>
<p>处理完这一切就能回家等外包公司联系你了，从现在开始，与外包的持久战正式打响。这时候还要很多事情要做，首先这里分为两种情况:
• 如果现在仍能正常处理工作的，则需要每天要给你的甲方领导与外包公司领导发一封每天的工作日报，阐述你做了什么工作，没有安排工作的就写学习了什么东西。
• 无法正常工作的，则需要每天要给你的甲方领导与外包公司领导发一封《要求提供劳动条件通知书》。不要怕烦人，现在已经撕破脸了，外包更怕你搅黄了他们的生意。
记住！
一定要每天准时去甲方公司门口用水印相机上下班打卡！！
一定要每天准时去甲方公司门口用水印相机上下班打卡！！
一定要每天准时去甲方公司门口用水印相机上下班打卡！！</p>
<h3 class="anchor anchorWithStickyNavbar_jpdk" id="第四步">第四步<a href="https://blog.wlgs.site/blog/20250618#%E7%AC%AC%E5%9B%9B%E6%AD%A5" class="hash-link" aria-label="第四步的直接链接" title="第四步的直接链接">​</a></h3>
<p>到了这一步，就是外包公司与你互相恶心的阶段。很多人维权时倒在了这一步上。各位无产阶级同志请继续加油！胜利已经就在眼前了！
下面是外包公司可能会出的招数，我尽可能给你们列举一下:
• 外包公司会给你发调岗通知书，你收到就写一封《拒绝调岗告知书》(在红薯搜，选一个用)邮件回复拒绝，邮件内需要写上你明确拒绝本次调岗，拒绝调岗的理由，把新工作地的交通成本(可以用打车或自驾的方式计算)算出来并写在邮件上，主张交通补贴与住宿补贴多少钱，同时把拒绝调岗的邮件截图保存。外包公司不同意你就一直拒绝调岗，这个阶段不要担心考勤或者违法，这是一个劳心费神的阶段，熬住就是胜利。如果下个发薪日发到手的工资与你平时正常上班到手的工资数额差距过大(一般差一两百块钱是正常的，有可能是社保与个人所得税那些影响)，就可以打劳动监察电话举报公司少发工资。
• 外包公司会要求你更新简历，接受公司安排的面试。作为劳动者的我们是不能拒绝的，只能去面试。但是面试时的表现我们自己是可以做主的~
• 外包公司会跟我们说不来新工作地上班的行为是旷工，不要担心，继续原工作地打卡，等下一个发薪日，如果工资少了就可以打劳动监察大队电话了。
• 外包公司在与你协商调岗未一致的情况下，催岗数次后可能会给你发旷工辞退通知书，这时候公司已构成违法辞退，已经可以去仲裁了。</p>
<h3 class="anchor anchorWithStickyNavbar_jpdk" id="注意">注意！<a href="https://blog.wlgs.site/blog/20250618#%E6%B3%A8%E6%84%8F" class="hash-link" aria-label="注意！的直接链接" title="注意！的直接链接">​</a></h3>
<p>如果公司给你调岗的新工作地与原工作地相距不远，法官有可能认为你主张交通补贴不合理，不能以此为理由协商不一致拒绝前往新工作地。此时公司可以进行合法辞退且无需支付赔偿金。</p>
<p>鄙人理科生，文笔不佳，感谢花时间看到这里的兄弟，感恩</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[主机内网穿透之旅]]></title>
            <link>https://blog.wlgs.site/blog/journey-of-host-intranet-penetration</link>
            <guid>https://blog.wlgs.site/blog/journey-of-host-intranet-penetration</guid>
            <pubDate>Mon, 16 Jun 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[服务端]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_jpdk" id="服务端">服务端<a href="https://blog.wlgs.site/blog/journey-of-host-intranet-penetration#%E6%9C%8D%E5%8A%A1%E7%AB%AF" class="hash-link" aria-label="服务端的直接链接" title="服务端的直接链接">​</a></h2>
<p>Frp服务端一键配置脚本，脚本默認获取Frp最新版本。</p>
<h4 class="anchor anchorWithStickyNavbar_jpdk" id="国内gitee">国内(Gitee)：<a href="https://blog.wlgs.site/blog/journey-of-host-intranet-penetration#%E5%9B%BD%E5%86%85gitee" class="hash-link" aria-label="国内(Gitee)：的直接链接" title="国内(Gitee)：的直接链接">​</a></h4>
<div class="language-shell codeBlockContainer_rxDN theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_e6Y8"><pre tabindex="0" class="prism-code language-shell codeBlock_eEse thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_Uz_K"><span class="token-line" style="color:#393A34"><span class="token plain">wget https://gitee.com/mvscode/frps-onekey/raw/master/install-frps.sh -O ./install-frps.sh</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">chmod 700 ./install-frps.sh</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">./install-frps.sh install</span><br></span></code></pre><div class="buttonGroup_Aaa5"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rNxk" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_8vl6"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_uXRx"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h4 class="anchor anchorWithStickyNavbar_jpdk" id="国外github">国外(Github)：<a href="https://blog.wlgs.site/blog/journey-of-host-intranet-penetration#%E5%9B%BD%E5%A4%96github" class="hash-link" aria-label="国外(Github)：的直接链接" title="国外(Github)：的直接链接">​</a></h4>
<div class="language-shell codeBlockContainer_rxDN theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_e6Y8"><pre tabindex="0" class="prism-code language-shell codeBlock_eEse thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_Uz_K"><span class="token-line" style="color:#393A34"><span class="token plain">wget https://raw.githubusercontent.com/mvscode/frps-onekey/master/install-frps.sh -O ./install-frps.sh</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">chmod 700 ./install-frps.sh</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">./install-frps.sh install</span><br></span></code></pre><div class="buttonGroup_Aaa5"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rNxk" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_8vl6"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_uXRx"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h4 class="anchor anchorWithStickyNavbar_jpdk" id="卸载">卸载：<a href="https://blog.wlgs.site/blog/journey-of-host-intranet-penetration#%E5%8D%B8%E8%BD%BD" class="hash-link" aria-label="卸载：的直接链接" title="卸载：的直接链接">​</a></h4>
<div class="language-shell codeBlockContainer_rxDN theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_e6Y8"><pre tabindex="0" class="prism-code language-shell codeBlock_eEse thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_Uz_K"><span class="token-line" style="color:#393A34"><span class="token plain">./install-frps.sh uninstall</span><br></span></code></pre><div class="buttonGroup_Aaa5"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rNxk" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_8vl6"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_uXRx"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h4 class="anchor anchorWithStickyNavbar_jpdk" id="更新">更新：<a href="https://blog.wlgs.site/blog/journey-of-host-intranet-penetration#%E6%9B%B4%E6%96%B0" class="hash-link" aria-label="更新：的直接链接" title="更新：的直接链接">​</a></h4>
<div class="language-shell codeBlockContainer_rxDN theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_e6Y8"><pre tabindex="0" class="prism-code language-shell codeBlock_eEse thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_Uz_K"><span class="token-line" style="color:#393A34"><span class="token plain">./install-frps.sh update</span><br></span></code></pre><div class="buttonGroup_Aaa5"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rNxk" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_8vl6"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_uXRx"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h4 class="anchor anchorWithStickyNavbar_jpdk" id="服务管理器">服务管理器:<a href="https://blog.wlgs.site/blog/journey-of-host-intranet-penetration#%E6%9C%8D%E5%8A%A1%E7%AE%A1%E7%90%86%E5%99%A8" class="hash-link" aria-label="服务管理器:的直接链接" title="服务管理器:的直接链接">​</a></h4>
<div class="language-shell codeBlockContainer_rxDN theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_e6Y8"><pre tabindex="0" class="prism-code language-shell codeBlock_eEse thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_Uz_K"><span class="token-line" style="color:#393A34"><span class="token plain">Usage: /etc/init.d/frps {start|stop|restart|status|config|version}</span><br></span></code></pre><div class="buttonGroup_Aaa5"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rNxk" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_8vl6"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_uXRx"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_jpdk" id="客户端">客户端<a href="https://blog.wlgs.site/blog/journey-of-host-intranet-penetration#%E5%AE%A2%E6%88%B7%E7%AB%AF" class="hash-link" aria-label="客户端的直接链接" title="客户端的直接链接">​</a></h2>
<p>基于原版 Frp内网穿透客户端，frpc 的一键安装卸载脚本和 docker 镜像。支持群晖NAS、Linux 服务器和 docker 等多种环境安装部署。</p>
<h4 class="anchor anchorWithStickyNavbar_jpdk" id="安装">安装：<a href="https://blog.wlgs.site/blog/journey-of-host-intranet-penetration#%E5%AE%89%E8%A3%85" class="hash-link" aria-label="安装：的直接链接" title="安装：的直接链接">​</a></h4>
<div class="language-shell codeBlockContainer_rxDN theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_e6Y8"><pre tabindex="0" class="prism-code language-shell codeBlock_eEse thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_Uz_K"><span class="token-line" style="color:#393A34"><span class="token plain">wget https://raw.githubusercontent.com/stilleshan/frpc/master/frpc_linux_install.sh &amp;&amp; chmod +x frpc_linux_install.sh &amp;&amp; ./frpc_linux_install.sh</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 以下为国内镜像</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">wget https://ghp.ci/https://raw.githubusercontent.com/stilleshan/frpc/master/frpc_linux_install.sh &amp;&amp; chmod +x frpc_linux_install.sh &amp;&amp; ./frpc_linux_install.sh</span><br></span></code></pre><div class="buttonGroup_Aaa5"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rNxk" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_8vl6"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_uXRx"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h4 class="anchor anchorWithStickyNavbar_jpdk" id="使用">使用：<a href="https://blog.wlgs.site/blog/journey-of-host-intranet-penetration#%E4%BD%BF%E7%94%A8" class="hash-link" aria-label="使用：的直接链接" title="使用：的直接链接">​</a></h4>
<div class="language-shell codeBlockContainer_rxDN theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_e6Y8"><pre tabindex="0" class="prism-code language-shell codeBlock_eEse thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_Uz_K"><span class="token-line" style="color:#393A34"><span class="token plain">nano /usr/local/frp/frpc.toml</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 修改 frpc.toml 配置</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo systemctl restart frpc</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 重启 frpc 服务即可生效</span><br></span></code></pre><div class="buttonGroup_Aaa5"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rNxk" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_8vl6"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_uXRx"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h4 class="anchor anchorWithStickyNavbar_jpdk" id="卸载-1">卸载：<a href="https://blog.wlgs.site/blog/journey-of-host-intranet-penetration#%E5%8D%B8%E8%BD%BD-1" class="hash-link" aria-label="卸载：的直接链接" title="卸载：的直接链接">​</a></h4>
<div class="language-shell codeBlockContainer_rxDN theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_e6Y8"><pre tabindex="0" class="prism-code language-shell codeBlock_eEse thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_Uz_K"><span class="token-line" style="color:#393A34"><span class="token plain">wget https://raw.githubusercontent.com/stilleshan/frpc/master/frpc_linux_uninstall.sh &amp;&amp; chmod +x frpc_linux_uninstall.sh &amp;&amp; ./frpc_linux_uninstall.sh</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 以下为国内镜像</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">wget https://ghp.ci/https://raw.githubusercontent.com/stilleshan/frpc/master/frpc_linux_uninstall.sh &amp;&amp; chmod +x frpc_linux_uninstall.sh &amp;&amp; ./frpc_linux_uninstall.sh</span><br></span></code></pre><div class="buttonGroup_Aaa5"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rNxk" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_8vl6"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_uXRx"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h4 class="anchor anchorWithStickyNavbar_jpdk" id="docker-安装"><strong>Docker 安装：</strong><a href="https://blog.wlgs.site/blog/journey-of-host-intranet-penetration#docker-%E5%AE%89%E8%A3%85" class="hash-link" aria-label="docker-安装的直接链接" title="docker-安装的直接链接">​</a></h4>
<blockquote>
<p>为避免因 <strong>frpc.toml</strong> 文件的挂载,格式或者配置的错误导致容器无法正常运行并循环重启.请确保先配置好 <strong>frpc.toml</strong> 后在运行启动.</p>
</blockquote>
<div class="language-shell codeBlockContainer_rxDN theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_e6Y8"><pre tabindex="0" class="prism-code language-shell codeBlock_eEse thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_Uz_K"><span class="token-line" style="color:#393A34"><span class="token plain">git clone https://github.com/stilleshan/frpc</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># git clone 本仓库镜像</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">git clone https://ghp.ci/https://github.com/stilleshan/frpc</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 国内镜像</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">nano /root/frpc/frpc.toml</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 配置 frpc.toml 文件</span><br></span></code></pre><div class="buttonGroup_Aaa5"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rNxk" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_8vl6"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_uXRx"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><strong>git clone</strong> 本仓库,并正确配置 <strong>frpc.toml</strong> 文件。</p>
<p>执行以下命令启动服务:</p>
<div class="language-shell codeBlockContainer_rxDN theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_e6Y8"><pre tabindex="0" class="prism-code language-shell codeBlock_eEse thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_Uz_K"><span class="token-line" style="color:#393A34"><span class="token plain">docker run -d --name=frpc --restart=always -v /root/frpc/frpc.toml:/frp/frpc.toml stilleshan/frpc</span><br></span></code></pre><div class="buttonGroup_Aaa5"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rNxk" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_8vl6"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_uXRx"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<blockquote>
<p>以上命令 -v 挂载的目录是以 git clone 本仓库为例,也可以在任意位置手动创建 frpc.toml 文件,并修改命令中的挂载路径。</p>
</blockquote>
<p>服务运行中修改 <strong>frpc.toml</strong> 配置后需重启 <strong>frpc</strong> 服务：</p>
<div class="language-shell codeBlockContainer_rxDN theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_e6Y8"><pre tabindex="0" class="prism-code language-shell codeBlock_eEse thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_Uz_K"><span class="token-line" style="color:#393A34"><span class="token plain">nano /root/frp/frpc.toml</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 修改 frpc.toml 配置</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">docker restart frpc</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 重启 frpc 容器即可生效</span><br></span></code></pre><div class="buttonGroup_Aaa5"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rNxk" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_8vl6"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_uXRx"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[潮流玩具的坑]]></title>
            <link>https://blog.wlgs.site/blog/labubu</link>
            <guid>https://blog.wlgs.site/blog/labubu</guid>
            <pubDate>Fri, 13 Jun 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[hfkxu2.png]]></description>
            <content:encoded><![CDATA[<p><img decoding="async" loading="lazy" src="https://23img.com/i/2025/06/13/hfkxu2.png" alt="hfkxu2.png" class="img_aT2B"></p>
<p>太魔幻了。</p>
<p>最近，一款叫Labubu的潮流玩具，据说火的不行不行：</p>
<p>有人说它比黄金值钱，有明星家属晒出一柜子炫耀，甚至还有银行用它来拉存款，最不可思议的是，居然上拍卖了，还拍出了108万的天价。</p>
<p>还真舍得下本炒作啊。</p>
<p>我肯定是不认同这种潮流玩具的价值的：</p>
<p>一种可以无限量复制而且人为制造稀缺性的东西，怎么可能凭借一点小众共识，就敢说自己比黄金值钱？</p>
<p>有人说，这是孤独经济，主打一个陪伴价值，类似猫狗宠物。</p>
<p>有人说，这是时尚潮流，主打一个社交价值，类似奢侈包包。</p>
<p>还有人说，这就是年轻人的茅台，茅台至少还有点子成本吧，这种玩具让义乌来生产估计十块钱不到，怎么能炒这么高价格？</p>
<p>说白了就是投机品。</p>
<p>而且，你会发现一个背后的规律：</p>
<p>投机炒作往往是伴随着宏观下行而出现的。</p>
<p>为什么这么说？</p>
<p>宏观下行，带来的几个影响：</p>
<p>1、利率低迷</p>
<p>资金没有地方可去，投什么都不挣钱，都有风险，所以需要去一个博傻的地方去割韭菜。</p>
<p>2、赚钱不易</p>
<p>宏观下行，往往微观不振，当居民赚钱不易，投资不好的时候，赌性就上来了，很多人就想靠投机赚钱。</p>
<p>资金的需求和居民的赌性达成了一致，这个时候就需要载体和标的。</p>
<p>于是，各种认为制造的稀缺品就出现了：</p>
<p>从90年代炒作邮票、水仙花，到新千年炒纪念币，炒核桃，这几年开始炒鞋，炒币……</p>
<p>最后泡沫破裂，资金撤退，留下一地鸡毛。</p>
<p>可以说是年年都上当，次次不一样。</p>
<p>一代人有一代人要炒的东西，一代人都有要踩的坑。</p>
<p>对于90后来说，或者加上85后，他们已经成了投机炒作的主力军，主要的原因就是他们的压力太大了。</p>
<p>刚毕业就遭遇房价巅峰，工作没几年就开始降本增效，到了婚育的年龄又面临男女对立盛行…</p>
<p>所以，年轻人不是躺平，就是去投机。</p>
<p>加上这几年，类似的潮玩，不但在二级市场投机炒作，连一级市场都在开盲盒赌博，进一步激发了年轻人的赌性。</p>
<p>这不是什么好现象。</p>
<p>就这样。</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[交通事故时要怎么做]]></title>
            <link>https://blog.wlgs.site/blog/2025/cjtsgygzmz</link>
            <guid>https://blog.wlgs.site/blog/2025/cjtsgygzmz</guid>
            <pubDate>Mon, 19 May 2025 10:00:50 GMT</pubDate>
            <description><![CDATA[五一节前我的车被人追尾了。事故发生后，后车司机诚恳道歉，承认他全责，然后他就不知道该干什么了，整个流程基本都是我教他搞定的。相信大家不少人都这样，车险年年买，一次险都没出过。所以就记录一下这次事故的处理过程，写一篇如果出了交通事故你作为无责一方该如何处理，该注意什么点的教程吧。（不能指望责任方主动维护你的最大权益吧）]]></description>
            <content:encoded><![CDATA[<p>五一节前我的车被人追尾了。事故发生后，后车司机诚恳道歉，承认他全责，然后他就不知道该干什么了，整个流程基本都是我教他搞定的。相信大家不少人都这样，车险年年买，一次险都没出过。所以就记录一下这次事故的处理过程，写一篇如果出了交通事故<strong>你作为无责一方</strong>该如何处理，该注意什么点的教程吧。（不能指望责任方主动维护你的最大权益吧）</p>
<h2 class="anchor anchorWithStickyNavbar_jpdk" id="事故发生">事故发生<a href="https://blog.wlgs.site/blog/2025/cjtsgygzmz#%E4%BA%8B%E6%95%85%E5%8F%91%E7%94%9F" class="hash-link" aria-label="事故发生的直接链接" title="事故发生的直接链接">​</a></h2>
<p>上个月最后一天临近下班，整个天色像有人要渡劫一样，都立夏了，17点半就黑漆漆的，于是决定不在外边吃了，和媳妇赶紧回家。刚从单位车库出来，就开始有稀稀拉拉的雨滴了，整个路上车堵的一塌糊涂，大家都着急回家，路上各种乱插队的机动车，非机动车也在路上乱窜，基本每辆车都跟的很近，生怕别人插进来。在我就要开过一个路口时，路口绿灯了，前车开始往前走，我点了点油跟上，保持和他距离他大约2~3米，前车突然刹车了，我先稍微深踩了一下刹车然后稍微抬一点刹车，看了眼后视镜，后车距离还算远，就逐渐加大刹车力度，最后大约刹停在距离前车半米的地方。然后在我刹停后大约过了不到2秒，伴随着“碰…”的一声，一股强烈的推背感随之而来。我和副驾的媳妇对视一眼，我心里默念一句”卧槽，这是被追尾了？”</p>
<h2 class="anchor anchorWithStickyNavbar_jpdk" id="处理交通事故步骤">处理交通事故步骤<a href="https://blog.wlgs.site/blog/2025/cjtsgygzmz#%E5%A4%84%E7%90%86%E4%BA%A4%E9%80%9A%E4%BA%8B%E6%95%85%E6%AD%A5%E9%AA%A4" class="hash-link" aria-label="处理交通事故步骤的直接链接" title="处理交通事故步骤的直接链接">​</a></h2>
<p>在车里回头看了眼一眼后面，从车里看没啥大问题，我俩也没受伤。趁着两边车都在堵着，下车一看，后面是个吉利的SUV，具体型号没认出来，后车司机大哥也一脸生无可恋。见我我第一句话就是“哎…甭说了，我全责…哎…”
大哥估计第一次出交通事故，完全不知道自己要干什么，他先给他自己朋友打电话。马上雨就要下大了，我可耗不起。</p>
<h3 class="anchor anchorWithStickyNavbar_jpdk" id="快速评估事故确保自身安全">快速评估事故、确保自身安全。<a href="https://blog.wlgs.site/blog/2025/cjtsgygzmz#%E5%BF%AB%E9%80%9F%E8%AF%84%E4%BC%B0%E4%BA%8B%E6%95%85%E7%A1%AE%E4%BF%9D%E8%87%AA%E8%BA%AB%E5%AE%89%E5%85%A8" class="hash-link" aria-label="快速评估事故、确保自身安全。的直接链接" title="快速评估事故、确保自身安全。的直接链接">​</a></h3>
<ol>
<li>
<p>挂P车挡或者摘空挡，拉手刹、熄火。【标准步骤，熄火确保车辆静止】</p>
</li>
<li>
<p>检查自己和乘车人有没有受伤：【我跟媳妇都感觉下自己，目前（有个伏笔）感觉应该没受伤。】</p>
</li>
<li>
<p>赶紧离开车：确认可以安全下车后，赶紧下车到安全区域。【确认堵车中，周围车都没走，下车】</p>
</li>
<li>
<p>开双闪，放三脚架：【因为我是被追尾的那个，我的后备箱肯定是打不开了。让后车先打开双闪，拿三脚架，这会儿路上堵的要死，三脚架也不用放多远。所以我们也就往后放了大约10米吧。正常应该放50米来着】</p>
</li>
<li>
<p>快速评估: 判断下谁的责任，车辆损伤大小。关系到后面先联系谁。【这次后车直接认了自己全责，所以我是事故无责任方，他是事故责任方】</p>
</li>
</ol>
<h3 class="anchor anchorWithStickyNavbar_jpdk" id="打电话和拍照">打电话和拍照<a href="https://blog.wlgs.site/blog/2025/cjtsgygzmz#%E6%89%93%E7%94%B5%E8%AF%9D%E5%92%8C%E6%8B%8D%E7%85%A7" class="hash-link" aria-label="打电话和拍照的直接链接" title="打电话和拍照的直接链接">​</a></h3>
<ol>
<li>因为我们双方对事故责任的划分无争议，后车直接表示自己全责，那么他作为责任方给他的保险公司打电话备案，因为保险公司要派人过来，怎么也需要 20 分钟，或者事故不大时，保险公司也可能不过来。这次保险公司表示这种责任清晰的小事故，不过来了，开始指导后车拍摄他和我的驾驶证行驶证微信上发给他。<strong>你作无责任一方，不需要联系你的保险公司。</strong></li>
<li>媳妇这会儿同步打报警电话，准备报个警，留个报警记录，以免后面扯皮。媳妇一时没想起交通事故报警是 122 ，她直接打了 110 ，是 110 接警中心转接到 122 的。</li>
<li>交警和保险公司就问了下，事故发生地的具体道路名称，以及行驶方向，推荐大家要是如果分不清行驶方向就说，你行驶的上个路口和下个路口叫什么，实在不行就说你是从某地出发的，所去目的地是什么也行。</li>
<li>然后让拍照片：前后左右四个角度双方车辆的照片，其中一定要有拍到双方牌照的照片，双方车牌可以不在同一张里，最后再加上损坏的地方特写，实在不知道怎么拍照片，就录个视频吧。我俩都举着手机，转着拍了一圈，因为对责任划分都没异议，各自拍完后就赶紧把车挪到路旁了，停路中间还是挺危险的。</li>
</ol>
<h3 class="anchor anchorWithStickyNavbar_jpdk" id="交警判定事故责任">交警判定事故责任<a href="https://blog.wlgs.site/blog/2025/cjtsgygzmz#%E4%BA%A4%E8%AD%A6%E5%88%A4%E5%AE%9A%E4%BA%8B%E6%95%85%E8%B4%A3%E4%BB%BB" class="hash-link" aria-label="交警判定事故责任的直接链接" title="交警判定事故责任的直接链接">​</a></h3>
<p>这种责任明确，而且双方都有保险的交通事故，122 推荐我们在 交管 12123 APP 上进行 事故视频快处。
用 交管12123 里的事故视频快处，优点是速度快、省事，整个处理流程5分钟就搞定了，你要是知道处理要点，整个处理流程就很舒服。缺也是速度快，整个流程中视频那头的警察会快速指挥你做这个做那个，你都不知道为什么要这样做就结束了。要是第一次事故处理报警，我建议最好叫交警过来现场处理，不然很多细节会因为处理的太快而被忽略掉。事故视频快处具体步骤：</p>
<ol>
<li>打开交管 12123 APP</li>
<li>左上角第一个图标就是 <strong>事故视频快处</strong>，然后点 <strong>视频报警</strong></li>
<li>接下来等视频通话接通，声音开外放，交警会指导拍摄该拍摄的地方。</li>
<li>交警先问了有人受伤没，受伤了就打120。</li>
<li>先让说自己身份，简述事故，我是前车，名字，车牌号，车型，我被后车追尾了，交警确认我的身份证号和车牌，对方的车牌，车型。</li>
<li>交警让视频拍了一下事故全景，我们表示已经挪车了，现在是在路边，交警说那算了，进行下一步。</li>
<li>然后让我用手机视频抵近拍我的车的车牌，他的车牌，事故损伤位置。</li>
<li>然后让开前置摄像头，我们双方当事人站在一起，同时出现在视频内，交警核对我们双方身份后，宣读初步的责任划分，询问双方诉求，问同意这个责任划分吗，双方都需要口头明确回答同意交警的判罚，然后就准备宣布结束了。</li>
<li>我和媳妇这时候感觉脖子不太舒服，被这样一个猛推背，脖子闪了一下，本来我们这种盯着电脑的职业，脖子就不咋样，这会儿不太舒服，赶紧和视频里的交警提了，交警表示知道了，也没特别说什么。</li>
<li>我和后车互留了手机号之后就各回各家了。一般2小时内事故责任书就可以在“交管12123 APP” 里看到，也不用跑交通队非常方便，（这次的电子事故责任书，大约30分钟后就出来了）</li>
</ol>
<h3 class="anchor anchorWithStickyNavbar_jpdk" id="去4s店修车">去4S店修车<a href="https://blog.wlgs.site/blog/2025/cjtsgygzmz#%E5%8E%BB4s%E5%BA%97%E4%BF%AE%E8%BD%A6" class="hash-link" aria-label="去4S店修车的直接链接" title="去4S店修车的直接链接">​</a></h3>
<ol>
<li>理论上拿到事故责任书的2年内修车都行，我是正赶上后面是个五一假期，假期里需要用车，所以假期后才把车送去修，不然还是早点去吧，后面损伤出现扯皮就不好了。</li>
<li>事故后大概过了半个小时，对方交强险的保险公司给我打了电话，简单问问情况我什么车，哪里坏了，去哪里修，然后就挂了。</li>
<li>修车的理赔现在一般都不用操心，就把车开到4S店，告诉他是因为事故来处理，给4S店留下事故责任书照片或者电子版，然后就不用管了，4S店自己会和保险公司对接，一般不用垫付费用。（如果要拖车，最好让4S店安排拖车，这样不用你自己垫付费用，自己叫拖车的话，需要自己垫付费用然后留好发票让保险公司报销）</li>
<li>我这次还出了一个稍微复杂的情况，后车的交强险和三责险是两家不同的保险公司，这次同时涉及，修车费用，医疗检查费用，附加损伤费用（主要是交通费）。两家保险都都来问我同意他们这个支付比例划分并不，我直接把他们两家理赔员的电话互相告知了，让他们自己谈划分怎么赔去，你俩怎么赔关我啥事，你们只要不缺我的钱就行。</li>
<li>最后结论是，交强险只赔付医疗检查费用，修车和附加损伤费用由三责险管。因为我那个车修起来，交强险是铁定不够的，我诉求也就是做个检查图个放心。</li>
<li>第二天去医院做了个核磁，大家记得挂号时选自费号，不然理赔上会出问题，正好我们本来近期也想查查腰和脖子，这次也算是白嫖一次检查了，最后一共是花了1600元左右。交强险表示，直接给我打 1900 元，算上检查、以及检查的误工、交通费，然后我同意不再索要后续医疗治疗费用赔偿，我和他的事就结束。</li>
<li>4S店是真喜欢这种无责任，对方保险赔的车，我本来感觉就是个后门要修，结果4S直接给我整了7个件更换（尾门，后防撞梁，2个连接件，3个塑料件），4个件要喷漆（尾门,后车身包围，2个塑料件)，最后定损了2W+，真贵啊，这要是没保险修起来真肉疼。</li>
<li>后车身又不是发动机盖这种高温件，基本不会出现补漆部位和原厂漆出现色差的问题，二手残值率我也不考虑，所以换就换呗，反正也不是我掏钱。</li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_jpdk" id="简单说说重点吧">简单说说重点吧<a href="https://blog.wlgs.site/blog/2025/cjtsgygzmz#%E7%AE%80%E5%8D%95%E8%AF%B4%E8%AF%B4%E9%87%8D%E7%82%B9%E5%90%A7" class="hash-link" aria-label="简单说说重点吧的直接链接" title="简单说说重点吧的直接链接">​</a></h2>
<ul>
<li>当时要下雨，大家都着急回家，所以开的都比较激进，当时路口绿灯了，前车和我顺着车流走。后车司机在和车上坐在后座的女儿聊天，没太专心，等他发现我走了的时候，当时我已经距离他都有快2个车的距离了，他害怕被插队（虽然他已经在白色长实线车道里了），油门踩的很猛，他是个纯电车加速相当快的。</li>
<li>然后他犯了一个错误 ：他看到绿灯了，以为我会持续保持前进速度，分心回头和后座的女儿又说了句话。</li>
<li>我的前车有个电动车左拐挡住他了，前车刹车避让，我跟着刹车了，结果后车司机在和女儿说话没注意到我刹车了，从他行车记录仪里看，等他反应过来听到他踩踏板的声音时估计距离我也就1米不到了，基本就是结结实实撞上去了。大家开车还是要专心，尤其是别闲聊，聊天时有时候会潜意识会扭头看对方。得亏他这次加速距离也就不到10米，这要是高速上追尾直接给前车怼报废了都不奇怪。</li>
<li>不得不说，宝马的质量就是好啊，我看着只是后门有个轻微变形凹陷，其他都是擦痕，因为正好马上就是五一嘛，就没第一时间送修，还开了几趟高速，等节后去4S店里检查时才发现，后防撞钢梁都变形了，别看这玩意是个单层冲压的只有1mm多厚，从检查结果和我这几趟高速体验来看，车身主结构没变形，底盘主结构也都没事，后防撞梁牺牲了自己，保全了其他结构件。之前那辆CR-V感觉基本也是这种力度的被追尾。当时直接主结构变形，修完了，一旦开到超过130KM/s，方向就开始明显发飘了（其实超过60km/h就会一直轻微左偏，需要时不时修正方向）。</li>
<li>后车我只认出来是个吉利的纯电SUV，具体是啥型号没认出来，他的损伤看起来比我严重多了，前杠，前脸，机盖都有变形了，不过他修车可比我便宜多了，他全修也才花了不到7k。</li>
<li><strong>除非你确定你100%没受伤。不然在交警处理事故划分责任时，建议你说自己有点不太舒服</strong>，比如有点头晕啊，腰不太舒服啊，要求交警后面写事故责任书时，加上车上人员受伤的记录。这不是讹诈对方，主要是你刚出事故，可能你的身体还在应激状态，肾上腺素激素疯狂释放，大脑正亢奋着呢，受伤了也不会感觉疼，等一放松可能就发觉身体不舒服了，有很多案例，事故发生后伤者认为问题不大自行离开，之后因为交通事故引起的脑溢血、消化道内出血，轻微骨折等等起奇奇怪怪的损伤去世，索赔能是一方面，另一方面是对你自己的生命安全负责，在合理的费用范围内，任何不舒服的地方都去医院检查一下，虽然一般都没事。但反正也是保险公司掏钱，你给保险公司省什么钱嘛。</li>
<li>有什么诉求，一定要在你、对方、交警，三方都在场的时候，第一时间提出，一旦事故责任书出来了，想改责任书，那可就有的折腾了。这个我是有经验的，即使对方配合，修改交通事故责任书在交警那边的流程也会非常折腾。</li>
<li>如果真的之后认为需要补充什么内容进事故责任书里，一定要尽快提出，拖的越久，事情越容易变得复杂。</li>
<li>误工费，交通费，车内物品损失，身体不舒服检查的费用，该要就要。虽然保险公司“理论上”是不赔事故间接损失的（误工费，交通费，车辆装载物的损失，比如后加的行车记录仪，放在后备箱里的东西）。</li>
<li>虽然最高人民法院在2012年发布的司法解释里规定，“因道路交通事故造下列财产损失，当事人请求侵权人赔偿的，人民法院应予支持，这个下列中包含了车辆所载物品的损失和非经营性车辆因无法继续使用,所产生的通常替代性交通工具的合理费用”，司法解释发布后，各家保险公司的三责和交强险条款立马火速加上了“非经营性车辆因无法继续使用，所产生的通常替代性交通工具的合理费用，产生的误工损失，车辆所载物品的损失，都系间接损失，在保险公司免责范围内”的条款。不过嘛，这种免责条款。 如果保险公司对该免责条款没尽到明确的提示和说明义务（我感觉一般都不会尽到提示和说明任务），那么是可以主张保险免责条款系格式条款，且保险公司未就此进行提示说明，因此这些损失应由保险公司承担的。</li>
<li>一般大城市的大保险公司，只要你提的间接损失赔偿费用不太离谱，基本都会直接同意，不会抬出免责条款不给你陪，这次三责是同意赔付交通费，按每天50元交通费，维修10天（他三责是人保的，人保出了名的定损慢）赔给了我500（有可能保险公司会要求按发票报销，所以车辆定损维修期间，打出租或者叫网约车时记得要发票和拉行程单），估计是因为和我那个2W多的车损赔付比起来（实际保险和4S店之间怎么分账那我就不知道了），500的交通费诉求挺小的，答应的十分爽快。</li>
<li>所以保险啊，千万别太图便宜，不然未来都是坑，之前我那个CR-V 图便宜是在老家的的保险公司投保的，结果保费是便宜了，交强加200W三责加车损加车船税，扣除返利和折扣，一共才不到2000，当时是一个我主责的小擦碰，对方主张车损+交通费=1500+200。因为马上当时保险就要续期了，之前2年都没出险过，我一看1700，那我肯定走交强险合适嘛，因为无伤亡主责事故出险，第二年保费不上涨或只有10%上涨，结果我的保险就非不赔交通费的200块，让我自己掏，我投诉到保监会他都咬死不赔这个间接损失。被我擦碰的那个车主也是个明白人，知道发生什么后，直接帮我怼我的保险公司，表示要是这样，那他就要起诉我和我的保险公司，就主张保险公司赔偿他交通费和诉讼费用。保险公司这才松口，最后按对方提供的实际发票赔了220多元的交通费。</li>
</ul>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[《围城》人物分析：知识分子的时代困局]]></title>
            <link>https://blog.wlgs.site/blog/2025/20250515</link>
            <guid>https://blog.wlgs.site/blog/2025/20250515</guid>
            <pubDate>Thu, 15 May 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[很早以前就看过钱钟书的小说《围城》，最近看到B站和喜马拉雅都有《围城》的有声书，于是在上网和打游戏的时候，把《围城》有声书又听了一遍，对小说里的人物颇有一些感想，感觉这部小说最妙的不是情节，而是人物，这里便把小说《围城》里的主要人物进行一些深入的分析。]]></description>
            <content:encoded><![CDATA[<p>很早以前就看过钱钟书的小说《围城》，最近看到B站和喜马拉雅都有《围城》的有声书，于是在上网和打游戏的时候，把《围城》有声书又听了一遍，对小说里的人物颇有一些感想，感觉这部小说最妙的不是情节，而是人物，这里便把小说《围城》里的主要人物进行一些深入的分析。</p>
<p>方鸿渐</p>
<p>方鸿渐是《围城》的主角，也可以说是知识分子困境的缩影。他是从江浙一带的传统旧乡绅家庭出来的知识分子，父亲方遯翁是前清举人、当地乡绅，也算是当地富家大户，他在北京大学里从社会学转哲学（赵辛楣评价：“学哲学跟什么都不学全没两样”），最后学中国文学毕业。之后他留学欧洲，在各国混了几年，没有学位，为应付资助人周厚卿，购买了美国克莱登大学的假博士文凭。</p>
<p>回国后随波逐流，和苏文纨不明不白地纠缠，爱上了唐晓芙，因苏文纨的挑拨而分手，与赵辛楣、孙柔嘉、李梅亭、顾尔谦同赴三闾大学任教，在高松年的安排下成为伦理学的副教授，在大学经历各种纷扰被迫离开，最终与孙柔嘉结婚，婚后生活充满争吵和疲惫。</p>
<p>方鸿渐有点小聪明，眼高手低，耍嘴皮子的功夫了得，但缺乏主见，社交和业务能力低下，面对问题时显得被动和犹豫，被赵辛楣评价为“不讨厌，可是全无用处”。他不谙世事，对于人情世故不很精通，用高松年的话来说，是个“不善办交涉的人”。</p>
<p>方鸿渐虽然随波逐流，但努力保持本心，在人际交往中有时显得善良（如给阿刘小费），也表现出一定的敏感和脆弱（如看到报纸上夸大他学位的新闻后，他感到羞愤，脸红到脚跟），对感情和婚姻有理想化的追求（如大学时对包办婚姻的排斥并壮着胆写信要求解除婚约），但现实中屡屡碰壁。回国船上与鲍小姐的短暂露水鸳鸯；与苏文纨的暧昧纠葛；对唐晓芙的真挚感情最终失败；最后与孙柔嘉结婚，婚后脾气变得暴躁，婚姻关系中充满摩擦和争吵。他的经历（留学、回国、失恋、失业、赴内地任教、结婚）构成了小说的“围城”主题的体现。</p>
<p>赵辛楣</p>
<p>赵辛楣曾留学美国，出身世家，出身好（父亲与苏文纨父亲是同僚），他为人风趣、健谈，尤其擅长用外语演讲，口才好，他对人情世故有深刻的理解，能用幽默的方式化解尴尬或评论他人，外表世故，内心醇厚，是个典型的知识分子精英。</p>
<p>赵辛楣自小偷偷喜欢苏文纨，长年追求苏文纨却未果，恋爱失意后成为方鸿渐的至交好友，帮助方鸿渐在三闾大学谋得职位，与方鸿渐等人一同前往三闾大学，在三闾大学任政治系主任，经历了和汪太太的纠葛，不得不离开三闾大学前往重庆。</p>
<p>赵辛楣比方鸿渐更成熟、干练且实际，是个实干家。他擅长处理各种事务，如旅途中的行程、车票、借款等问题，被高松年视为“红人”，在学校同事中受拜访多。他与方鸿渐的友谊是小说中一条重要的关系线，他常在关键时刻帮助或影响方鸿渐，他能看透方鸿渐的颓丧和在情感上的不足。</p>
<p>苏文纨</p>
<p>苏文纨，妥妥的“白富美知识分子”，法国里昂大学文学博士，出身官宦名门，父亲是政务院参事苏鸿业。她外貌出众，被描述为美人， 穿着时髦，注重打扮，“冷若冰霜，艳若桃李”。</p>
<p>苏文纨与方鸿渐、鲍小姐同船归国，曾是方鸿渐和赵辛楣的追求对象，后来成了大龄剩女。她非常聪明，有社交手腕，善于控制他人，为了争夺方鸿渐或打击情敌，多次进行挑拨和设计 (例如，在船上说鲍小姐坏话、对方鸿渐提“寒暑表”外号、挑拨方鸿渐和赵辛楣争斗，挑拨唐晓芙，导致方唐分手)。</p>
<p>苏文纨虽然批评方鸿渐“油嘴”，说话“最讨厌，全是偏见”，但她也喜欢与他在言语上“斗法比武”。她喜欢方鸿渐在谈话中流露的机智和辩驳，两人在思想上的互动对她来说是一种乐趣。</p>
<p>苏文纨很享受被追求的感觉，并能在追求者之间周旋，她内心带有清高和刻薄，她瞧不起孙太太的小家子气，对董斜川的批评感到不快，在香港见到方鸿渐夫妇时，她的言语和态度流露出傲慢甚至轻蔑，尤其针对孙柔嘉。</p>
<p>苏文纨知识丰富，但心机深沉，老于世故，美貌与学识并存，善于操控他人，好胜心强，不能容忍失败或被忽视，方鸿渐认为她是有头脑有才学但需要“愚笨”的男人来爱慕的女人，赵辛楣认为她手段高明，玩弄了他们两人。</p>
<p>唐晓芙</p>
<p>唐晓芙是苏文纨的表妹，正在北京上大学，聪明活泼、开朗伶俐、颇具自然本色， 是方鸿渐一见倾心并追求的理想对象。</p>
<p>唐晓芙聪明、率真、有个性，善于观察和理解他人的言行，她能一眼看穿方鸿渐试图在她面前卖弄或引起她注意的小心思，唐晓芙对方鸿渐的某些言论（如对浪费的看法）表现出清醒和略带嘲讽的态度，例如她关于女人“傻”的评论（“女人不傻决不因为男人浪费摆阔而对他有好印象——可是，你放心，女人全是傻的，恰好是男人所希望的那样傻，不多不少”），这说明唐晓芙的确善于交际，特别是男女方面的交际。苏小姐曾说她“抓一把男朋友在手里玩弄着”，从侧面反映了她并非不谙世事。</p>
<p>唐晓芙欣赏方鸿渐的谈吐，认为他“说话里都是文章”，她觉得他讲笑话“有趣”，也欣赏他在讨论女性、政治等问题时表现出的机智和独到见解，尽管有时觉得他在“表演口才”。他们之间的谈话可以涉及很多话题，并且是双向的交流。</p>
<p>唐晓芙对苏文纨的心机有所察觉，但不如苏文纨那样工于算计。她不是一个被动的角色，而是积极参与互动，表达自己的想法。在苏小姐试图控制她不与方鸿渐见面时，她反而故意打破约定去与方鸿渐见面，她认为苏小姐“太欺负人了”，这种独立和叛逆的态度使她反而更愿意接近方鸿渐。</p>
<p>方鸿渐对唐晓芙展开了认真的追求，他写了充满深情的信，将自己的未来与她的决定紧密联系，然而，尽管方鸿渐付出了努力，唐晓芙最终还是拒绝了他，她认为爱情不该是轻易产生的，并且认为方鸿渐对她的感情来得太容易，不相信那是真正的爱，这解释了她为何拒绝方鸿渐突如其来的强烈感情。</p>
<p>孙柔嘉</p>
<p>孙柔嘉是个刚毕业的上海女大学生，与方鸿渐和赵辛楣同赴三闾大学，任外文系英语助教。孙柔嘉在旅途中经历了惊吓和委屈，而方鸿渐在危难时救助了她，让她非常感动，并对方鸿渐产生了依赖，这种依赖行为本身就反映了她对方鸿渐的信任，并把他视为可以依靠的对象。</p>
<p>孙柔嘉外表柔顺，内心却很有心机，有自己的主张和打算，尤其是在婚姻问题上，善于观察（如偷听方鸿渐和赵辛楣在船上的对话）和利用机会，遇到问题时会哭泣或显得柔弱，以获得同情或帮助。</p>
<p>孙柔嘉比较善于心计，在她的认知圈里，方鸿渐算是综合条件最好的婚姻对象，因此孙柔嘉便展开“女追男”，她在方鸿渐面前装成一种无知可怜的弱小女孩形象，激发方鸿渐的保护欲和某种优越感，她的“天真”提问也让方鸿渐觉得她单纯可爱，最终通过父亲来信这样的计谋“一举拿下”了方鸿渐。</p>
<p>孙柔嘉可以说是方鸿渐婚姻的“终极Boss”，她没有唐晓芙的高冷，也没有苏文纨的才情，但她有一股“实用主义”的狠劲，她想嫁人，就抓住方鸿渐不放，嫁了之后，她也不温柔贤惠，而是不断消耗方鸿渐的情绪。</p>
<p>董斜川</p>
<p>赵辛楣的朋友圈中的诗人，曾为驻外军事参赞，出身传统书香名门，家传谙熟古旧体诗律。</p>
<p>他有老派知识分子中的清高、自负。言谈风趣，但有时也很刻薄和带有偏见，喜欢用典故，对旧体诗有自己的品味标准。</p>
<p>褚慎明</p>
<p>赵辛楣的朋友圈中的哲学家，身体虚弱，体弱多病，擅长投机取巧、故弄玄虚、自我标榜，属于虚伪和投机的知识分子。</p>
<p>他是那种专注于抽象思维，与现实生活有隔阂的知识分子，他在社交场合显得有些笨拙，尤其在面对感兴趣的对象时容易失态。</p>
<p>李梅亭</p>
<p>李梅亭是与方鸿渐、顾尔谦、孙柔嘉一行前往三闾大学的旅伴，被高松年聘为中国文学教授，原定系主任后被汪处厚取代。</p>
<p>李梅亭为人吝啬、势利、贪小便宜，为人阴险，喜欢搬弄是非。他旅途中不舍得用雨衣，关心自己的行李箱，为“打茶围那几块钱”怕方鸿渐挑眼而对方殷勤，任官职后显露出官僚和刻板的一面。</p>
<p>李梅亭可以算是知识分子中的败类，典型的小人形象，在权力和利益面前会暴露其丑陋和卑鄙的嘴脸。</p>
<p>高松年</p>
<p>高松年是三闾大学校长兼教务长，他务实且极具社会适应性。</p>
<p>他在抗战时期创办三闾大学，在师资聘任上有自己独特的实用主义原则，办学理念带有功利色彩，倾向于聘用没有名望、易于控制的人才。</p>
<p>在实际操作中，他善于应酬，圆滑世故，在社交场合如鱼得水，精通社交手腕，知道对不同的人说什么话，他能对各学科说些“门面话”，也能在不同场合表现得体（如与教官说粗话，与女性同席谑浪笑傲）。</p>
<p>高松年代表了高校行政管理层中机会主义和官僚主义的管理者形象。</p>
<p>汪处厚</p>
<p>汪处厚早年是当官的，官场失意后退身学界，任三闾大学中国文学系主任，由教育部的汪次长推荐，他取代了原定的李梅亭。</p>
<p>汪处厚年纪很大，娶了年轻美貌的汪太太，性格不如汪太太强势，被汪太太精准拿捏。</p>
<p>汪太太</p>
<p>汪太太是汪处厚的妻子，用现在的话来说，她就是一个“社牛”（社交牛逼）。</p>
<p>汪太太热衷于打听和议论他人隐私，对于方鸿渐和赵辛楣的婚事表现出极大的兴趣和主动性，她对别人的情感状态充满好奇，喜欢谈论八卦和是非，尤其是私密性的八卦，她公开议论孙小姐和赵辛楣的关系，甚至提出“猜是赵先生的情人”的说法。</p>
<p>汪太太性格直率，甚至显得粗鲁和具有攻击性，说话非常直接，缺乏顾忌，她在丈夫面前毫不留情地打趣他“不相信你年轻过”，在与高校长和李梅亭的冲突中，她用词尖锐，称高校长被李梅亭“摆布”，并嘲讽自己是否被雇佣当“老妈子”，她公开挑战高校长，表示要继续打牌，甚至邀请赵辛楣和方鸿渐是否有“胆量”加入。</p>
<p>汪太太富有戏剧性，一些言行极具表演性，在与赵辛楣的纠缠中，她当众暗示赵辛楣和自己“有染”，在赵辛楣试图否认时，她表现出“哈哈狂笑”，并且嘲讽赵辛楣“胆只有芥菜子这么大”，最后甚至发出“神经失常的尖笑”。</p>
<p>汪太太言语泼辣、犀利、有洞察力，热情好客但同时喜欢评头论足，对学校的八卦和人际关系了如指掌，有幽默感，但有时显得刻薄，热衷于制造和传播八卦，喜欢在他人的情感关系上兴风作浪，甚至能拿捏老辣世故的高校长，是一个生动且令人印象深刻的“社牛”。</p>
<p>尾声</p>
<p>这些人物共同构成了《围城》群体形象，通过他们各自的经历和相互关系，以及对方鸿渐等人物的细致刻画，展现了特定历史时期下，中国社会和知识分子的生存状态和精神世界，以及人性的复杂和荒诞。</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[程序员工作七年，我踩过的那七个坑]]></title>
            <link>https://blog.wlgs.site/blog/2025/7</link>
            <guid>https://blog.wlgs.site/blog/2025/7</guid>
            <pubDate>Sun, 11 May 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[今天想聊聊，自己在 7 年工作中踩过坑的 7 件事情。]]></description>
            <content:encoded><![CDATA[<p>今天想聊聊，自己在 7 年工作中踩过坑的 7 件事情。</p>
<p><strong>一、不会问问题</strong></p>
<p>一杯茶一包烟，一个 bug 改一天。</p>
<p>程序员面对技术难题是非常正常的事情，谁还没有碰见问题束手无策的时候呢。</p>
<p>记得刚工作的时候，我对于碰见的业务异常，宁愿自己一行一行地看代码，一行一行地 debug，也不愿意去问那些有很多业务经验的前辈，更不用说问自己的领导了。</p>
<p>因为那时候我觉着问别人，就会显得自己技术很菜，毕竟什么功能你把代码看一遍，理论上也能知道什么问题了。</p>
<p>于是自己花大量的时间钻研一些代码，哪怕这些代码在系统中并不是这么重要。 我一直觉着我自己有能力解决问题，所以不去问别人，显得自己技术强。</p>
<p>事实上，我是不知道如何提问，因为如果你的问题问的比较低级，再好脾气的人也会失去耐心。提问的能力，是我们在职场中必备技能。</p>
<p>就拿工作中一个很常见的系统报错场景举例，无论什么系统，都会有些业务性质的校验，比如参数异常、状态异常、库存异常、购物失败等，再就是系统 bug。工作这几年，我遇见了集中不同程序员的提问方式。</p>
<p>第一种程序员：东哥， 功能报错了，你看页面上提示的 xxxxx，怎么办？ 第二种程序员：查询一下报错相关的日志，看看有没有更详细的信息，拿着信息开始去找哪一行或者哪一个服务报的错，然后喊：东哥，代码这个服务/代码怎么抛异常了，怎么办？ 第三种程序员：先查看日志，然后核对数据，核对基本的商品配置、用户资格，尝试了解涉及到的业务细节，再过来问：秒杀失败了，涉及到的基本配置核对完了，帮我看看还有什么地方是我遗漏的吗？</p>
<p>其实这就是我工作过程中提问的成长路径：从遇见报错就去问别人，到学会用技术方式排查问题，再到后面的业务驱动去梳理问题。</p>
<p>反求诸己，如果你是被问的那个人，你会更倾向于帮谁解决问题？不同的提问方式，谁的成长速度会更快呢？</p>
<p>其实，技术问题绝大部分人都能解决，但在开发过程中面临的业务难题才是我们需要解决的，或者说更常见的。有些业务如果没有人告诉你，你永远也不知道这个功能为什么要这么写，或者说这么写的逻辑是什么。</p>
<p>千万不要羞于提问，相反，问别人是解决问题最快的方式。你要做的是，学会做好前期调研，尽量提出有价值的问题。</p>
<p><strong>二、不善于展示自己</strong></p>
<p>代码写好了，就足够了吗？</p>
<p>工作之后，另一个非常重要的误区就是，我只需要把活儿干好，那么像升职加薪自然就会轮到我。我想大家一定听过 Linux 开发之父说过的一句话：“Talk is cheap, show me your code.”</p>
<p>曾经我也是被这句话影响很深，作为程序员就应该写好自己的代码，做好手头的事情，就一定可以把自己的能力展现出来。</p>
<p>但工作后发现，如果你不说，你的代码只会存在于 git 里，只有下一个接手你工作的人，才会看到你的代码。</p>
<p>程序员需要避免的一个误区是：工作中不要认为技术才是最重要的，不要认为技术做好了，领导就一定能够看见你的功劳。</p>
<p>事实上，如果你不去把你所做的工作提炼出来，更好地汇报或者展示自己，其实没有人会知道你的工作具体有多困难，或者你写的代码具体有多好。</p>
<p>也许你认为你的代码逻辑清晰，扩展性强，用了各种设计模式，性能较好，你觉得自己很厉害。这没错，但是做出成绩，让别人知道，比完成更重要。</p>
<p>你这么做并不是说要邀功，而是在让上司、让同事更了解你的作用，也是在帮你的团队争取应有的认可、应有的资源。</p>
<p><strong>三、缺乏冒险精神</strong></p>
<p>按部就班，不再适用于当下的年轻人了。</p>
<p>我们父母年轻的时代，工作时可以从 20 岁一直干到 55 岁的。但在现在这个社会，几乎没有程序员会认为自己可以一辈子在一线写代码。或许有这样的人，但我肯定不是。</p>
<p>在现在这个社会，唯一不变的就是变化本身。从 2017 年毕业到现在 2024 年，整整七年的时间里，热门技术从 Java 的 Spring MVC 到 Spring Boot，再到微服务架构。热门的技术赛道也从大数据、区块链到 AI。热门技术是学不完的。对于普通的程序员来说，按部就班已经不再适用了。曾经的 “三年 P7，五年 P8” 在现在已经完全不可能了。</p>
<p>自从 ChatGPT 问世到现在，其实已经有一年的时间了。我已经见过很多人用 AI 改善自己的工作流程，比如 AI 写作、AI 绘画，甚至用 AI 生成代码。但如果你还只会遇到问题去百度搜索，那么我想你已经跟不上这个时代了。</p>
<p>程序员现在考虑的是什么？或许是在程序员这一行还能干几年。</p>
<p>技术变革这么快，自己的技术在后面会不会被淘汰，公司会不会裁员，裁员之后还能不能找到工作。</p>
<p>可如果我们所做的工作，学习的内容，只是为了让自己在这一行多待几年，甚至是不被裁员，我想这个目标是不是从一开始就有问题？</p>
<p>你学会的第一个开发语言，并不意味着你要一直从事这个语言相关的岗位，技术更迭，换一个语言也未尝不可。 你并不一定要一直写代码，走向管理、转向产品或许可以让你看见更大的可能。 你或许不一定非得要做一个程序员，或许你的兴趣并不是写代码，只是你自己还没有发现。 既然一份工作无法持续地干下去，那我们应该怎么办呢？终身学习，找到自己在哪一行能够更擅长、更喜欢的，把这份喜欢变成自己的事业。并不是说今天你是一个程序员，10 年、20 年之后你还是要做一个程序员。</p>
<p>愿你也能够不断的拥抱变化，有着足够的冒险精神。</p>
<p><strong>四、缺少锋芒</strong></p>
<p>不知为何，我的盖洛普优势中排名第二的是和谐。这意味着在冲突情境下，我会极力避免争论，希望和别人达成共识。</p>
<p>譬如，当我与同事探讨技术方案时，同事可能会对自己的方案极为执着，即便我的方案在性能、难易程度上更优。倘若同事始终坚持己见，那么我极有可能会选择妥协，采用那个看似并非最优的方案。</p>
<p>我发现自己在工作中，会不自觉的想要获得别人的好感，甚至变成了一种执着，因此我更愿意在职场中展现自己的亲和力。 比如：</p>
<p>怕冒犯别人，不敢提出自己正当的需求和想法 有时会暴露自己的弱点、缺点，以便拉近社交距离 总是担心别人不喜欢自己 但是这样会产生一个副作用，那就是，别人可能会觉得你能力不足。</p>
<p>或许你会说，这样似乎也不错啊，职场中我就喜欢这样的同事，如果我不这么做，那别人会不会不喜欢我啊？</p>
<p>《权力进化论》书中给出了一项长期研究的统计结果。研究的是亲和性（也叫宜人性）对于一个人事业成功的影响。结果发现，亲和性对所有人的薪酬都会产生负面影响，男性受到的影响比女性更严重。这是因为，那些在意自己亲和性的人，可能会把这个放在自己的事业目标之上，所以更容易错失一些推进事业发展的好机会。</p>
<p>而亲和性的反面是独断性。也就是一个人我行我素、以自己为中心的程度。加州大学伯克利分校的研究发现，独断性对权力的提升没有帮助，但也没有害处。这是因为，独断性能够引起两种相互抵消的作用：一方面，独断的人会做出更多支配性、攻击性行为，这能帮他们提升权力和地位；另一方面，独断的人做出的慷慨和群体行为比较少，这又对获得权力有负面的影响。</p>
<p>按照研究中的定义，独断性恰恰代表了一个人根本不关心自己会怎么影响别人。《权力进化论》书中的作者说，如果这对权力都不会产生影响，那么就更可以说明，其实我们没有必要过于担心，其他人喜不喜欢自己，会对事业造成多大影响。社会关系虽然重要，但我们不应该让那种想被人喜欢的念头压过了真正想做的事情，牺牲了自己的利益和规划。</p>
<p>研究表明，刻意去博得他人好感在职场中往往会起到反作用。相反，表现得更加强势虽不一定对自己的职业生涯有益，但也并无坏处。</p>
<p>工作中善于表达自己的观点，做你认为对的事情。</p>
<p><strong>五、你配得上你所拥有的</strong></p>
<p>我和许多加过来的粉丝朋友聊天，粉丝朋友们普遍会觉着：“嗯，你的履历不错啊。” 他们认为履历对我的自媒体或许会有很大的帮助。我总是回答：“哎，这其实没有什么。我能进去，很大程度上也是运气，并不代表当时我的技术有多好。”</p>
<p>所以我从来没有把大厂的经历当做自己的一个优势去面对它。反而我会尽量避免和别人谈起过去的工作经历。</p>
<p>日常的表现就是自己更愿意去弱化自己的优势，却喜欢强调自己的不足。</p>
<p>其实我这种情况叫做冒充者综合症。</p>
<p>什么是冒充者综合症呢？就是有些人其实已经很优秀了，但他们总是觉得自己并没有像别人说的那么优秀，生怕某一天别人会发现他是冒充的。</p>
<p>这就是一种会严重削弱你自身权力的行为。因为你看待自己的方式，必然会影响你展现给别人的形象。如果连你自己都不觉得自己有能力，值得更好的结果，那这种消极信号就会在不经意间传递给别人，让别人也看低你，最终会影响到你的事业。</p>
<p>首先，想一想你会怎么向别人描述自己。然后看看这里面有多少是消极描述，哪些可以摒弃掉；看看你有没有刻意掩饰自己的成绩和优势，能不能把它们加上去。</p>
<p>比如我看到的一个例子：一位女性学员，跟作者说公司里竞争很激烈，竞争对手总是想方设法地压她一头，或者抢占她的功劳。作者在跟这位学员交流的时候，发现她总是提到，自己是团队里唯一的女性，而且最年轻，资历也最浅。作者就提醒她说：“我知道这些是事实，但是我还可以再用三种完全不同的视角来描述你，那就是，你们团队里，只有你是顶尖商学院的 MBA，只有你精通数理分析，也只有你曾经独立带过有很大经济影响的项目。所以呢，现在我们就有六个不同的视角了。至于今后你要一直想着哪三个，全看你自己。”</p>
<p>顺便吆喝一下，技术大厂，前后端测试<a href="https://jsj.top/f/o38ijj" target="_blank" rel="noopener noreferrer">捞人</a>，待遇还不错~</p>
<p><strong>六、没有建立自己的品牌</strong></p>
<p>上面说到，不善于展示自己。那么想要展示自己的话，如何展示才是最好的？ 建立个人品牌，也就是 IP，即 Intellectual Property，也就是我现在在做的一件事情。</p>
<p>一句话，让人们第一时间想到你。具体应该怎么做呢？</p>
<p>第一步，和声名显赫的事情或人联系起来。 职场初期，我们大概率会去做一些边边角角的业务或者功能，核心功能或者业务的机会就这么多，只是做这些并不是很重要的业务，即使你很有能力，也很难被人发现。</p>
<p>遇见这种情况，那就主动去沟通联系，试着让自己接触更加底层与核心的逻辑，并深度参与其中。</p>
<p>比如虽然你只是开发人员，但你主动承担起跨部门的协作沟通，而不是把沟通的事情让别人去做，主动承担起计划的制定与发展规划。</p>
<p>即使不能负责，也要展现出你对这件事情的兴趣，持续积累核心业务的背景，这样你也能够建立起负责人对你的兴趣，建立沟通渠道。</p>
<p>第二步，准备好自我介绍，并反复打磨自己的故事。</p>
<p>比如你擅长哪些技能，熟悉哪些业务，你曾经负责过什么东西，做出过哪些成绩。</p>
<p>人人都需要自己的品牌声明。你要做的，就是想一想如何用两三句话向别人介绍自己，说明自己的专长和取得的成就，再想办法把这些内容和自己的某些心路历程结合起来。</p>
<p>第三步，让你的品牌广为人知。</p>
<p>有很多人不愿意做一些感觉像 “自我推销” 的事情，尤其是程序员。并且在我们社会的成长背景下，在崇尚谦卑品格的文化环境中，这种现象会尤其突出。</p>
<p>这样就会产生一个问题：如果你自己不讲出自己的故事，会有别人替你讲吗？别人还会看到你的成就吗？这些你都没法确定。</p>
<p><strong>七、忽视社交网络</strong></p>
<p>广结人脉，和埋头苦干，你会选择哪一种？</p>
<p>职场初期，我选择的是埋头苦干。先讲一个我自己的故事吧。</p>
<p>在之前一家公司，因为负责一个新的系统，主要是把 App 上面的功能，从公众号层面再实现一遍。</p>
<p>在做这件事情的时候，App 上面的核心功能代码量比较大，但因为涉及到风控因此必须迁移，我花费了很多精力去进行迁移和重构工作，最终完成了小程序系统的上线。</p>
<p>半年之后，由于业务迭代，领导也发现 APP 的这部分功能比较核心，准备着手把核心功能统一迁移成为一个新的微服务，以便后续使用，便把这件事情交给了我的一个同事去做。</p>
<p>最后这件事情做完，领导认为这个工作量很大也很有价值，于是我的这个同事收获了很好的评价和非常好的绩效。但其实这部分工作，我早在之前的系统开发中，就已经完成这件事情了，然而这件事情我不说，领导也不得而知。</p>
<p>相同的工作，但是达成的效果完全不同。</p>
<p>互联网一直流行一个词叫做 “向上管理”，我一直觉着这是一件听着有道理，但是总感觉哪里怪怪的事情。因为即使我看过这么多所谓的方法、技巧，如果不做最重要的一步，那么所有的方法都无从下手。</p>
<p>最重要的就是，要建立你的社交关系，不要仅仅限于同级的同事，也要包含你的上级、跨部门的上级。</p>
<p>其次就是要重视你的 “弱连接”。弱，就是强弱的弱。“弱连接” 指的是我们生活中的那些偶然认识的泛泛之交。社会经济学家做过一项研究，考察了二百多名求职者的经历，结果发现，大多数工作都不是通过投简历这种正式渠道获得的，而是靠社会关系提供的非正式信息取得的，而且很多是来自一些他们偶然认识的人，也就是 “弱连接”。</p>
<p>跟亲朋好友同事这些强连接相比，那些弱连接的人脉，往往有着跟我们更不同的背景、经历、圈子，所以，利用好这些弱连接，我们就更可能接触到更广阔的视角、信息和机会，甚至可能实现圈层跃迁。</p>
<p>建立关系，重视弱连接，建立沟通渠道，才能让你的能力，得到杠杆效应。</p>
<p><strong>说在最后</strong></p>
<p>以上，是我想分享的工作七年来，在职场中踩过的几个坑，给出的建议或许有失偏颇，也和自身的工作环境有很大关系，并不适合所有人。</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[弹珠游戏]]></title>
            <link>https://blog.wlgs.site/blog/pinball-game</link>
            <guid>https://blog.wlgs.site/blog/pinball-game</guid>
            <pubDate>Sun, 13 Apr 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[家遭变故，只有一个人可以继续念书，最终的抉择，由弹珠游戏胜负决定。]]></description>
            <content:encoded><![CDATA[<p>家遭变故，只有一个人可以继续念书，最终的抉择，由弹珠游戏胜负决定。</p>
<p>一</p>
<p>柳清和柳安从未见过母亲如此严肃的样子。她端坐在餐桌对面，摩挲着肿胀的指关节，来回端量姐弟二人。几个孩子叫嚷着穿过巷子，一只大黄狗在门口逗留，朝屋内探了探，吐着舌头离开了。“凭良心讲，”母亲终于开口，“我对你俩一向公平。”柳清皱起眉头，说：“妈，别绕弯子，赶快讲。”柳安环视客厅，想找出反驳母亲的证据。窗台上趴着两只铁皮青蛙，发条都坏了；鞋架上两双回力鞋是同一天买的，款式和颜色相同，唯独尺码不同。柳清有的，自己也有。母亲说得没错，她端平了这两碗水。</p>
<p>“不对。”柳安站起身，从柳清的椅背上摘下挎包，撂在桌上，说：“柳清的包上绣着朵花呢，我的没有。”柳清夺回包，说：“你的又没有磨破，到时候叫咱妈给你补一朵就是了。”柳安说：“我不要花，我要孙悟空。”</p>
<p>“说正事，”母亲用手肘捶了下桌面，“我没法去厂子干活了。”</p>
<p>二人同时发愣，掂量着这句话的分量。母亲说：“要不是老柳走得早，咱们现在也不至于考虑往后的问题。”</p>
<p>“什么问题？”柳清和柳安同时开口。母亲说：“柳安，那段时间你总是没把心思放在学习上，我正担心着，没想到你竟和柳清考了一样的分数。”她看向柳清，“如果老柳还在，他无论如何都会支持你继续跳舞······”母亲停住话头，双手摊放在桌上，说：“哎，我该怎么向他交代啊。”</p>
<p>三人面面相觑了一会儿，母亲起身去厨房倒水。柳安趴在桌沿，支支吾吾地说：“她是不是要把咱俩送走一个？像二班刘辉的家里那样。”柳清说：“傻帽，咱俩有一个没书念了。”</p>
<p>上个月，两人都拿到录取通知书，是城里同一所重点高中。这张纸还没在枕头底下捂热，今天就得进垃圾桶了。母亲的身体每况愈下，前些天一连打了三个盘子，她说自己只是不小心。常言体内有疾，手指先知，柳清早已察觉到问题，却没想到母亲下岗得如此突然。</p>
<p>母亲找来姐弟历年的奖状，铺在桌子两旁，来回清点，生怕有疏漏。结果是柳清占上风，二十三张，比柳安多一张。柳安弓身拿起柳清的一张奖状，说：“进步之星？分明是凑数的，三张加起来都不如我一张优秀班干部奖。”母亲说：“哪能这样算？好歹都是荣誉。”</p>
<p>柳安跑上楼，取来一张纸。“既然如此，这张也算荣誉。”他在母亲面前摊开。这是以前父亲为柳安颁发的奖状，父亲剪下春联的一片边角料，用漂亮的楷体毛笔字写着：当代诗圣。“要是咱爸没走，我还能得好几张。”柳安撅起嘴望向窗外。“你还有脸讲这个？”柳清说，“要不是你，咱爸今天就能带我去文化宫看表演了。”</p>
<p>“不许提这件事。”母亲再次用手肘撞响桌子，“今天必须商量出结果，不然谁也别吃饭。”柳安说：“那我先提一嘴，听说舞蹈艺考的培训费很贵的，至少五位数，咱妈就算能分身也赚不来这笔钱。”柳清说：“我将来要跳上春晚的，等赚了大钱，加倍还给咱妈。你呢？写那些狗屁不通的烂诗，一斤顶多卖两毛。”</p>
<p>“你能跳上春晚，我就不能写进作协啦？”柳安抬高声音，“做梦也得讲求公平的，妈你说是不是？”母亲说：“你俩闹了这么多年闹够没有？这件事必须和和气气地解决。”她端起杯子嘬一口水，喉咙发出清晰的吞咽声，“算了算了，今天先这样。”</p>
<p>二</p>
<p>柳清回到卧室锁上门，对着床前的落地镜发呆。镜子是以前父亲买的，柳清每天放学回家都要对镜练舞：立定，旋转，起跳，足尖点地，重现奶奶当年的舞姿，跳完《天鹅湖》跳《红色娘子军》。她眼神自信，姿态灵动，颇有奶奶在文工团时的风姿。每每这样舞起来便目空一切了，直到饥饿时才停下。父亲离世前一直尽力支持她的爱好，带她找老师，买各式舞裙。父亲从不奢求柳清跳出什么名堂，只为了看她在台上傻笑的样子。柳清却满怀理想，一心站上大舞台，给父亲争光。可是柳清觉得母亲刚才分明偏向柳安，自己的舞蹈梦岌岌可危了。她想起床底那双沾着血渍的足尖鞋。倘若不能继续念书，这些年的血都白流了。</p>
<p>这时门被敲响。母亲在外面小声说：“柳清，我进来一下。”柳清说：“我没心情，你找柳安去吧。”母亲叹了口气，走去了柳安的房间。不一会儿，柳清听见他们争执起来。她朝门外探出头看了看。柳安的房间在过道对面，门上贴了一幅海明威伏案写作的海报画，左下角是一张便签，用透明胶封住，写着：柳清禁止入内。母亲的声音从门后传来：“不管结果怎样，我都希望你俩好好相处，别总是闹别扭。”柳安说：“我和她冤家路窄，你就别费这心了。”</p>
<p>柳清和柳安的关系早在四年以前就破裂了。起初母亲并没在意，以为他们之间的冷漠只是父亲过世的余波。对于柳安耽误父亲上晚班一事，柳清一直怀恨在心。</p>
<p>四年前的冬至那天，柳清拿到了少年舞蹈竞赛的奖金。她邀上柳安，来到北街服装批发市场，买下了父亲相中已久的一件深棕色飞行夹克。以前父亲路过时总要拿起它放在身上比对一番，露出满意的神色，对自己说：“啊，这颜色好，料子也好。”可他从不舍得为自己花钱，永远都是比对一下就满足了。姐弟两人到店里时，那件夹克已经断码，只剩一件，卡其色。柳安觉得颜色太浅，工作时容易蹭脏，柳清说父亲才不舍得穿去干活。两人在店里争论很久，终于决定买下。</p>
<p>父亲傍晚从工地回家，看见挂历的钉子上挂着一件夹克，幸福地笑了，额头的泥灰都藏进了波浪般的皱纹里。穿上身发现码数偏小，袖口够不到手腕，衬衫的下摆长长地露在外面。父亲说：“不用退，过些年我的骨头一缩水，正好合身。”</p>
<p>柳安趁着父亲的高兴劲，说：“玩一局弹珠吧，你都多久没陪咱们了。”以前父亲清闲的时候，打弹珠是三人必不可少的娱乐项目，但自从他跟了刘工头之后，夜里加班成了家常便饭，弹珠局总是二缺一。若是少了父亲的参与，这场游戏就变了味，两人胡乱地弹球，为争输赢不择手段，最后总要闹得不愉快。</p>
<p>柳安揪住父亲的衣袖不放。柳清一脸不悦，说父亲累了一天，应该好好休息，不然没力气上晚班。父亲看了看钟，说不碍事，把两人推出了屋。</p>
<p>父亲的准头一向很好，与其说是比赛，倒不如说是父亲的个人才艺表演。他用结实的大拇指打出弹珠，一枚接一枚地命中目标，姐弟两人都输到只剩一枚时，父亲就会故意打歪，找借口说：“路灯太暗，没看准。”</p>
<p>这天父亲发挥照常，一连吃下了柳安的十九枚弹珠。他又找理由道：“起风了，下一个肯定得打歪。”柳安说：“回回都让着我们，多没意思？最后一颗了，痛快地赢我一局吧。”父亲说：“赢了又能怎样？你俩开心最重要。”只见他拇指一弹，弹珠慢悠悠地往前滚，停在了柳安那枚弹珠半寸远的地方。父亲站起时犯头晕，捶了捶脑袋，笑着说：“给你们留点翻盘的希望不好吗？”父亲把弹珠袋抛向柳安。两人看着他走进屋里换衣服。</p>
<p>那天夜里十点半，父亲被工友架着肩膀送回家中。他额头上一颗颗汗粒就像是撒了一地的玻璃弹珠。母亲问他是怎么了，他摇摇头，说只是有些累。父亲躺在沙发上睡了，再也没有醒来。</p>
<p>四年后的今天，柳清依然能清晰地回想起父亲打出的每一道轨迹，每一次撞击都是那样清脆；父亲蹲下时，夹克被他的脊背绷得很紧；她还记得父亲临走前把夹克衫脱下，轻轻地掸灰，支好衣架挂回了挂历的钉子上。这一挂就是四年，背面的日历停留在1991年12月。</p>
<p>对母亲和柳安来说，这件夹克衫是个念想。柳清则不同，这是她钉在墙上的恨，对柳安的恨。要不是他那晚消耗了父亲的精力，家中的一切都会顺顺当当。母亲不至于积劳成疾，自己也不用面临辍学的窘境。</p>
<p><strong>三</strong></p>
<p>会议连续开了三天依然没有结果。母亲让两人列举各自的优势，制定今后的学习计划，设想未来的收入。讨论结果是柳安长大了要脚踩徐志摩，柳清要单挑杨丽萍。直到母亲的法槌敲响桌子，两人才从虚妄的幻想回到现实。</p>
<p>柳安知道自己毫无优势，在柳清面前只能靠语气稍稍占些上风。他早已厌倦这样的吹牛游戏。柳清多次参加校内外表演，屡获褒奖。而自己呢？自诩有文采，却从未被刊物录用稿件，甚至拿不出一篇高分作文。文学这种东西是超越时代的，今天写的垃圾，说不定会在将来被人奉为瑰宝呢。母亲和柳清哪懂得这个道理？唯独父亲愿意陪他写作，逐字逐句地推敲，给予中肯的评价。可是父亲已不在，抽屉中的几叠稿纸失去了最好的读者。这能怪谁？还不是自己犯下的罪过。</p>
<p>有一天吃完早饭，母亲还想继续开会，柳清当即找借口出门，柳安也找理由推辞，躲回卧室。柳安决心做最后的挣扎，他整理出近一年的诗稿，分成五份，每份五组短诗，塞进五枚信封。只要其中一首诗被出版社印成铅字，便能在母亲面前挺直腰杆。但想到等待的漫长，希望的渺茫，又将诗稿取出。也许柳清说得对，这些烂诗只适合挂上秤杆，按斤两衡量价值。</p>
<p>他记得第一次投稿是同父亲去的邮局。父亲为信封贴上邮票，两人各攥住信封的一角，对准邮筒。父亲说：“一，二，三。好了，未来的大作家很快要诞生咯。”四个月后，柳安收到了退回的稿件，父亲的预言没有成真。那天柳安久久地蹲在巷口的树下，生着闷气。父亲走来，说：“我刚刚又想了一遍，知道原因了。”柳安抬起头，看见父亲将两手背在身后，深情地朗诵道：</p>
<p>“秋日的寂静中，枫树轻轻摇曳。红色的舞裙，一片片坠落。枯枝划破北风，我听见天空的呜咽。”</p>
<p>父亲意犹未尽地品味了一会儿，捡起一片叶子，说：“我觉得这一节太伤感，看不见希望。”柳安说：“枯枝败叶的季节里哪有什么希望。”父亲说：“这就不对了，日子都是苦中带甜的，绝望和希望也能并存嘛。”</p>
<p>柳安把这首诗改写了无数遍，蚂蚁般的字爬一张张稿纸，始终解不开“希望”的奥秘。父亲离世以后，柳安更是觉得世上充满遗憾和感伤，所谓的“希望”都随着父亲埋进了土堆。</p>
<p>柳安终于将诗稿塞进信封。如果石沉大海，自己也认命了。他拿着信走到楼梯拐角，听见客厅里多了个人，是秦老师的声音。她在母亲面前称赞柳清的天赋，细数她获得的奖项。母亲陪着笑，不时说一句：“我知道，我知道。”秦老师撂下狠话：“柳清要是跳不进北京舞蹈学院的大门，我这辈子的老师算白当，你不能这么糊涂呀。”母亲说：“那我家柳安怎么办？让他辍学也是糊涂呀。”</p>
<p>柳安小心地退后两步。他没想到柳清居然这么快请来了救兵，有些懊丧。楼下传来玻璃的碎裂声。柳安手中的信没拿稳，掉落在台阶，滑到了客厅。这时柳清大声道：“将来谁更有出息，明摆着的。”楼下安静了好一阵。</p>
<p>“柳安，”秦老师说，“我知道你在上面，过来一下。”柳安下楼拾起信，塞进衣袋，绕开地面的碎渣，慢慢地挪到秦老师身边。秦老师捧起柳安的手，露出慈祥的表情。“你和柳清都是好孩子，将来一样有出息。”秦老师慢吞吞地说，“可你妈妈现在老啦，总得有人把这个家支起来不是吗？理想固然重要，但要先吃饱饭，经济基础决定上层建筑嘛。”柳安避开了她的眼睛，说：“为什么非得是我？”</p>
<p>柳清两手叉腰，不言不语。母亲把地面的碎渣铲进簸箕，也没再开口。午间的阳光把巷子的地面照得发亮，屋里却凉飕飕的。一阵风吹进窗子，墙壁上父亲的夹克摇摆起来，似乎想表达什么。母亲正要走上前将夹克重新挂稳当，那颗钉子突然挣脱墙壁，夹克连同挂历掉落在地。一枚淡绿色的玻璃珠从夹克的衣袋里滚出来，跑到了柳安脚边。</p>
<p>母亲“哎呀”一声，瞪大眼睛，露出惶恐的神情。柳清说：“咱爸显灵了。”</p>
<p>母亲对秦老师客气地笑了笑，请她改日再来。临走时秦老师对柳清叮嘱道：“千万要记得，你是舞的奴仆，这双脚走到哪就要跳到哪。”柳清点头说知道了。等秦老师走远，母亲关上大门，赶忙拾起弹珠，说：“你们觉得，这老家伙想表达什么？”柳清说：“他选了柳安呗。”母亲说：“我这就去请孙婆婆来看看。”</p>
<p>“没必要，”柳清说，“我去厂里踩缝纫机就是了。”</p>
<p><strong>四</strong></p>
<p>父亲显灵这件事在柳清看来纯粹是偶然，但她恰好借此了结母亲的优柔寡断。母亲的天平再这样摇摆下去，父亲真得从坟里蹦出来。家里失去了经济来源，没理由继续拖延。柳清本打算去制衣厂接替母亲的岗位，但想到自己还有一技之长，说不定能走出别的路子，就像秦老师说的，走到哪跳到哪。柳清找了家职业介绍所，求中介为她安排一份与跳舞沾边的工作。中介说：“在商场扮玩偶算不算？”柳清摇头，说自己愿意等。她每天一早守在介绍所的卷闸门前，失望之后就在附近闲逛，找一片树荫练舞。第五天，工作有了着落。“西二街那边有个戏班子招人，”中介说，“只要二十五岁以下的，说是跳什么……”他不怀好意地笑了笑，“法国风情舞。”</p>
<p>柳清很快迎来了第一场商业演出，那是在肉菜市场前的空地上开展的洗发水促销活动。柳清接过主办方准备的演出服时，心凉了半截。一件露脐小背心，舞裙很短，只能勉强遮住臀部，而且红得艳俗。这要是被熟人看见，传到秦老师耳朵里可怎么办？往后都没脸见她了。</p>
<p>化妆师说：“又不是搞艺术，别挑剔了，老百姓爱看什么就穿什么。”柳清要求化妆师给她画得浓一些，要让人认不出自己。化妆师为她戴上一顶假发，说：“你都变身法国女郎了，谁还认得出来？”柳清觉得镜中的自己简直是个瓷娃娃，有些瘆人，头上的金色假发让她想起了母亲厂里的缝纫线。</p>
<p>柳清在演出开始前一分钟才走出化妆棚。舞台布置得很寒碜，远不如学校里的。背景墙是一位外国姑娘撩拨头发的广告图，旁边配文：法国洗发香波，专注受损发质修复。</p>
<p>与另外四位舞者登台后，柳清紧张地盯着地面，感觉这松松垮垮的舞台板随时会崩塌。身旁的姐姐说：“今晚最年轻漂亮的就是你了，自信点呀。”柳清冷笑一声。与其自信，她更应该自怜。主持人用中气十足的嗓门宣布表演开始，音响播放起《路灯下的小姑娘》，台下的两百来位观众纷纷吹响口哨。柳清不好意思将舞裙甩起来，主持人不停朝她使眼色，她这才加大了动作幅度。舞蹈表演结束后，主持人搬来五个箱子，让柳清她们到观众席售卖洗发水。观众一窝蜂地拥上来，似乎只对这五位金发女郎感兴趣。有人趁机捏一下她们的胳膊，碰一下手背。柳清慌了，忘记主办方要求她们不能说话的规定，她尖叫道：“把你们的臭手拿开。”观众立刻拉下脸来，说：“原来你们是假洋人，卖的肯定也是假洋货。”</p>
<p>促销活动在一阵嘘声中收场，主办方很是不满。多亏领舞的姐姐说了些好话，帮柳清保住了酬劳。散场后，柳清问领舞：“跳这种舞有什么意义？分明是为了满足男人的眼珠子。”领舞说：“我当年在省团跳舞的时候就想开了。你以为观众看的是水袖？是云步？他们鼓掌只是因为我长得漂亮。所以跳什么舞都一样。”柳清这时想起了秦老师的那番话，冷笑了一声。舞的奴仆？我今天是马戏团的奴仆，是一只猴子。</p>
<p>回到家里时柳清感觉有些尴尬。“法国舞女”的新身份在这清贫简朴的家中显得极不相称。柳安快步下到楼梯口，看见柳清后停住了脚步，惊慌地说：“还以为咱妈回来了。”他正要上楼，柳清从口袋里取出几张二十元递向柳安，冷冷地说：“等下，把这个交给咱妈，攒着当你的学费。”柳安站着不动。柳清说：“再跟她说一声，我去制衣厂干活了。”说罢将钱压在桌面的杯子下，回卧室了。</p>
<p>五</p>
<p>柳清身上的廉价香水味没能逃过柳安的鼻子。他知道柳清在撒谎，却怎么也猜不出那笔钱的真实来路。次日一早，他等柳清出门就偷偷尾随着。柳清走去西二街，拐进一条逼仄的小巷，敲开了发廊隔壁一扇玻璃门。柳安小心翼翼地躲在一辆三轮车后面，观察着屋内的动静。玻璃门贴着“漫舞文化”的字样，隐约听见里面播放着迪斯科舞曲，几位二十来岁的姑娘挤在一张大沙发上，抽烟闲聊。柳清坐在她们一旁，似乎有些拘谨。不时有人经过，隔着玻璃打量。待到下午，她们几人终于离开沙发，排成一列，在一位高个子女士的指导下练舞。柳清的身体显得僵硬，放不开，每跳一段就被领舞训斥。</p>
<p>她们在傍晚时分走了出来。柳安躲进拐角，看见柳清跟在队伍末尾。她们没有散伙，而是往北街的方向前进。服装批发市场对面的广场上临时搭建了一座舞台，前面挤满人群。柳清她们走进一个红色棚屋，在里面待了很久，出来时变成了相貌相仿的金发女郎，柳安只能依靠个头辨认柳清。她妆容惨白，表情狰狞，似乎在抵抗着身体的不适。</p>
<p>天色完全暗下来后，舞台上的音响装置震动了整座广场。柳安挤进嘈杂的人堆里，踮起脚凝视舞台。当柳清跟着节奏舞动裙摆，柳安立即低下了头，感觉脸在发烫。他不敢想象父亲看见这一幕会有何感受。</p>
<p>柳安被拍了拍肩膀，回过头发现是同班的陈斌和阿飞。陈斌嘲弄道：“没想到你爱看这个。”柳安说：“只是碰巧路过。”阿飞说：“得了吧，别不承认。”柳安岔开话头：“我听说你俩进轴承厂了，干得咋样？还要人不？”陈斌说：“有书不念，来干苦活，疯啦？你不是说将来想考什么文学系吗？”柳安说：“屁个文学，再这样下去我真得疯。”陈斌和阿飞不解其意地打量他。“我是认真的，”柳安对陈斌说，“叫你爸也带我进厂子吧。”</p>
<p>这时柳清她们跳完了开场舞，换了一身更惹眼的装扮重新登台，主持人不停地活跃气氛，观众拍手叫好。柳安感到一阵眩晕，找借口说自己得回家吃饭，赶忙告辞了。他今天的确没吃一口饭。跑回家的路上，柳安拼了命地想忘掉柳清在台上的样子，却怎么也挥之不去。</p>
<p>柳清回家已是晚上九点。柳安听见她推开卧室门的声音，立马走出去，扶着柳清的门框。“不许进来，”柳清大声道。</p>
<p>“我就站在这，”柳安说：“我和陈斌商量了，叫他爸带我进厂。”柳清说：“没必要，上你的学去吧。”</p>
<p>“不要，”柳安说，“咱爸以前总说你跳芭蕾的时候笑得最好看，我也这么觉得。”柳清吃惊地看着柳安，说：“刚刚你都看见了？”柳安说：“我不会和咱妈讲的。”柳清抬起手，铆足力气打了他一耳光。柳安摸着脸，委屈地说：“咱爸显灵那天，咱们都理解错他的意思了。”柳清说：“你爱怎么想就怎么想，我不信这些。就这么着吧。”</p>
<p>“不行，我不想看你那样。”柳安说，“老规矩，每人二十颗珠子，明天一局定胜负。”</p>
<p>“幼稚。”柳清推开柳安，把门锁上。消气之后，她觉得刚刚出手有些重，想和柳安赔个不是。她走到柳安的门前站了一会儿，没有敲。海报左下角的便签不见了，换成了一张稿纸，写着一首短诗——</p>
<p>秋日的寂静中，枫树轻轻摇曳/红色的舞裙，一片片坠落/泥土深处，藏着来年的梦。</p>
<p>六</p>
<p>小卖部的六爷被一阵哄闹声打断午睡。透过一排八角糖果罐，看见十几个崽子在树荫下围成圈。六爷扯起嗓门说：“别老鹰捉小鸡了，等下你们都要被烤成烧鸡。”</p>
<p>“捉什么小鸡啊，”一个孩子喊道，“这是生死局。”六爷急忙跨出店门，发现人群的焦点是柳家两位小状元。他们面对面站立，怒目而视，各自手持一袋弹珠。一只装满空气的塑料袋在人群外面随风打转。</p>
<p>“赌什么？”六爷走到母亲身旁问。母亲含糊地解释了一番，六爷还是摸不着头脑，说：“不应该是谁赢了就去念书吗？怎么是输了去念书？”母亲说：“一言难尽呐。”六爷思索一阵，似乎明白了。他挤到人圈里，看着柳清，急忙用草扇给她扇风。“柳清，你糊涂呀，为什么和他比这个？我那枚‘神枪手’在他手里呢。”柳清瞥一眼六爷，继续死盯着柳安，说：“我不怕，开战吧。”</p>
<p>大家检查两人布袋里的弹珠，都是二十枚，随后宣布比赛开始。他们按照以往的规矩在地上摆放各自的弹珠，用石头剪刀布决定先手。柳清赢了。她单膝跪地，用拇指对准弹珠蓄力，“啪”一声，正中柳安的弹珠。柳清拾起战利品，开始下一轮射击。她接连命中目标，觉得索然无味，突然后悔答应与柳安对局。即便分出胜负也毫无意义，无非是闹了一出笑话。她站起身说：“算了吧，我想回去。”柳安说：“不行，要是不决出胜负来，咱妈又要为难了。”柳清说：“可我早就决定好了。”柳安说：“我也决定好了。大不了谁也别去念书。”母亲紧张起来，那种置身事外的轻松表情消失了。柳安说：“你要是看得起我，那就堂堂正正地赢我。”</p>
<p>柳清“切”一声，继续展开攻势。在打出第十枚的时候，弹珠被地面的碎石干扰了路线，跑歪了。柳安迫不及待地反攻，也在打出第十枚的时候失手。两人就这样展开了焦灼的拉锯战。柳安不断地挑选凹凸不平的路面放置弹珠，没想到柳清照中无误。战场的范围不断扩大，他们从小卖部打到了公路旁。“急死我了，”六爷走回小卖部，从糖罐里掏来一把水果糖，举在半空，“我今天阔一回，看谁能赢到这糖。”大伙儿兴奋起来，将地面拍打出节奏。</p>
<p>“我不稀罕，”柳安取出鲜红色的“神枪手”，像只猫科动物似的趴在地上，使劲瞄着三米远的淡绿色猎物。“神枪手”的准头从未让柳安失望，他习惯用它打出决定胜负的一击。可今天柳安求胜心切，试图用“神枪手”吃下柳清的最后三枚弹珠。</p>
<p>柳清又连输两枚，把布袋里最后一枚弹珠放在地上。她站起后觉得身体失去了重量，地面的热浪似乎能把她抬上天去。六爷说：“你输了也好。等你将来成了舞蹈家，可别忘了咱们。”</p>
<p>柳安的脑袋被晒得发晕。当他瞄准最后一枚弹珠时，一种奇妙的感觉冒了出来，自己仿佛在拙劣地模仿着父亲某年某天的击球动作。地面上暖乎乎的热气似乎是父亲的气息，这种感觉让柳安痴迷。他保持着姿势，细细地体会与父亲融为一体的感觉。</p>
<p>众人屏气凝神，看着“神枪手”以缓慢的速度前进，停在了目标前面一寸远的地方。这个结果让所有人始料未及。</p>
<p>“柳安你搞什么？”六爷说，“这次不算，再打一次。”柳清拍了拍裤子上的灰，说：“算了，我认输。”扭头推开人堆往回走。柳安拳头捶地，吼道：“你回来。”柳清继续走着，后脑勺突然一阵刺痛。“神枪手”落在地上弹跳了几下。是柳安扔来的。柳安说：“给你留点翻盘的希望不好吗？”柳清拾起弹珠，瞄准柳安脑门，却犹豫了，将手放下。“你们闪开。”她蹲下身子，愤怒地打出弹珠，拉开了新一轮的角逐。</p>
<p>比赛结束时太阳已经西斜，巷子里家家户户都起了炉灶。柳清、柳安和母亲一起往回走着。十三粒水果糖被他们分成了三份，母亲一粒，柳清和柳安各六粒。“就知道逞英雄，”柳清嚼着糖说，“你的技术比咱爸差远了。这样让来让去的，哪能有结果？”柳安说：“你还不是一样？”柳清“切”了一声，拍了下柳安的脑袋。</p>
<p>“我有办法，”柳安说，“你去学校上一周课，我再替你上一周，回来交换学到的东西。”柳清翻了个白眼，说：“幼稚。”柳安说：“那就再比一场”柳清说：“随你。”</p>
<p>“比谁先回到家，谁输了就去念书。”柳安说罢撒腿往巷子深处跑去。“耍赖皮！”柳清追着喊道，“再不停下，我就把你的烂诗念给整条街的人听！”柳安说：“当心我把你的事情告诉咱妈。”两人追跑打闹起来，柳清用灵活的舞步躲闪柳安，在巷子里画出了优美的蛇形曲线。</p>
<p>望着跑远的姐弟二人，母亲十指相扣，小声道：“老柳啊，他们都长大了，你在那头就放心吧。”</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[浅谈个人学习方式]]></title>
            <link>https://blog.wlgs.site/blog/learning-style</link>
            <guid>https://blog.wlgs.site/blog/learning-style</guid>
            <pubDate>Mon, 10 Mar 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[临近考试周，又要开始准备复习，顺带总结下自己平常的学习方式与一些感慨。]]></description>
            <content:encoded><![CDATA[<p>临近考试周，又要开始准备复习，顺带总结下自己平常的学习方式与一些感慨。</p>
<p>我个人主要的两种学习方式，<strong>主动学习</strong>与<strong>被动学习</strong></p>
<h2 class="anchor anchorWithStickyNavbar_jpdk" id="主动学习">主动学习<a href="https://blog.wlgs.site/blog/learning-style#%E4%B8%BB%E5%8A%A8%E5%AD%A6%E4%B9%A0" class="hash-link" aria-label="主动学习的直接链接" title="主动学习的直接链接">​</a></h2>
<p>通常来说，主动学习往往是一件痛苦的事情。就如考试周，平常的课该去在课堂上睡觉，该不去的在宿舍睡觉，到考试周，一学期的课没听，但一想到不复习就有可能面临挂科，或多或少都会复习。考试摆烂，挂科惨淡。</p>
<p>除了上面是会导致坏结果而去学习，那么还有一种则是与之相反，也就是所需，所感兴趣的去学习。</p>
<p>例如我想要实现一个酷炫功能，或者是一个需求时，而其中需要的知识点便会去了解与学习。</p>
<p>对于前者而言，其过程并不舒服，甚至可以说是逼自己学习不喜欢的东西，通常我是不如不学的，即便学了在以后也难以记起，除非不学的结果比较严重（如挂科）。而后者情况便不同，兴趣是最好的老师，甚至都不需要借助外界因素去激励，便能有一个很好的学习成果。</p>
<p>如果没有兴趣或需求的情况下，那么主动学习一定要定制一系列的目标，如果没有明确的目标，学习将会显得十分迷茫。我有很多时候便是这样，想去主动去学习诸多技术栈，不知从何下手。</p>
<h2 class="anchor anchorWithStickyNavbar_jpdk" id="被动学习">被动学习<a href="https://blog.wlgs.site/blog/learning-style#%E8%A2%AB%E5%8A%A8%E5%AD%A6%E4%B9%A0" class="hash-link" aria-label="被动学习的直接链接" title="被动学习的直接链接">​</a></h2>
<p>其实可以说是利用业余时间学习的一个方式，首先我会想我一天主要做的事情（通常是与学习无关），比如刷各个平台（b 站，抖音）的视频，刷知乎，qq 群闲聊等等，这里只是以我一天的大部分日常举例。</p>
<p>此事不妨关注一些与学习类的账号，包括但不限于加入一些技术交流群， up 主，公众号，博主等等，当你每次刷这类平台时，系统很自然就会给你推送相关内容，比方说 b 站，我日常会在上面刷一些鬼畜视频，生活娱乐视频，但也会关注一些技术类的账号，在娱乐的同时，还能不经意间刷到一些编程知识（知乎，微信公众号同理），这送上门的知识不香吗？</p>
<p>再比如 watch 一些开源项目，订阅一些博客文章，定时推送 Hacker News 周刊等等，在他们发布一些重要内容的时候能及时通知到你。虽然这样每天邮箱时常处于未读状态，但如果打开某一条邮箱查看其中的内容，说不定又是一次不错的收获。</p>
<p>当然，这样学习肯定有一定弊端。首先所摄取的知识过于笼统，一般都是由别人推荐的，甚至有可能会浪费你人生中的几分钟，因为这些知识点可能你已经掌握了，或者这些知识确实没什么干货。其次所获取到的知识往往是整个知识面的冰上一角，或者是某些新型技术，但想要深入去学习还是得按上面的主动学习。</p>
<p>被动学习主要的作用能让你在不学习的状态下，还能获取相对应的知识。听起来可能觉得很卷，无时无刻的在学习，但我认为在娱乐中学习往往不会显得像主动学习那般有种疲惫感。</p>
<p>我在被动学习中就间接了解到许多的前沿的技术栈，以及了解到许多之前没使用过的语言、框架特性，而这些都是直接送上门的知识点，而我要做的只是关注一些账号，订阅一些文章或站点，而不用自己去茫茫知识海洋中去寻求。</p>
<h2 class="anchor anchorWithStickyNavbar_jpdk" id="两者的权衡">两者的权衡<a href="https://blog.wlgs.site/blog/learning-style#%E4%B8%A4%E8%80%85%E7%9A%84%E6%9D%83%E8%A1%A1" class="hash-link" aria-label="两者的权衡的直接链接" title="两者的权衡的直接链接">​</a></h2>
<p>我时常处于这类被动学习状态，因为我对很多技术点都很感兴趣，但又不知道从何下手，而当我刷到我所感兴趣的东西时，我才会开始转为主动学习。之所以会出现这样的学习状态转型，有很大一部分是因为<strong>兴趣感已经没有一开始所学的那么强烈，甚至可以说有些许乏味</strong>。</p>
<p>在一开始接触时，我是抱着强烈的兴趣感去学的，处于一种非常积极的主动学习状态，当时所获取的知识是无法用现在同等时间所堪比。然而在兴趣感消散，这种状态都为浮云。主动学习的频率减弱，每天都在做着与学习无关的事情，这期间与知识没有任何的往来。</p>
<p>直到将每天所要做的事情，间接的转为被动学习的方式，至少有在学习，而不是在停步，即便是行走 1 厘米，那也是米。</p>
<h2 class="anchor anchorWithStickyNavbar_jpdk" id="总结">总结<a href="https://blog.wlgs.site/blog/learning-style#%E6%80%BB%E7%BB%93" class="hash-link" aria-label="总结的直接链接" title="总结的直接链接">​</a></h2>
<p>最好是对感兴趣的方面学习，这样即有动力去学习，有不会感到厌烦，并且兴趣是能陪伴很久的，也往往能坚持下去。</p>
<p>无论是任何事情在任何时候下都应该保持的是一种不断坚持的状态，打游戏也好，学习也好。</p>
<p>一段时间不打游戏，手感生疏，再次接触就没状态。一段时间不学知识，容易忘记，再次使用就没印象。</p>
<p>大部分人都是如此，可谁又不希望保持一种不断坚持的状态。毕竟不是每个人都有充裕的个人资源与时间资源，很多时候这些资源并不是由自己分配的，有可能是亲朋好友，也有可能是上司老板，最有可能是生活所迫。。。</p>
<p><strong>唯愿此生，岁月静好</strong></p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[深谈个人对新技术的看法]]></title>
            <link>https://blog.wlgs.site/blog/talk-new-technologies-opinion</link>
            <guid>https://blog.wlgs.site/blog/talk-new-technologies-opinion</guid>
            <pubDate>Sat, 15 Feb 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[目前技术圈的发展速度可谓是有目共睹，尤其是前端，每隔一段时间就出新的技术，可以说让很多初学者非常畏惧，没有一个明确的方向不知道从何学起。]]></description>
            <content:encoded><![CDATA[<p>目前技术圈的发展速度可谓是有目共睹，尤其是前端，每隔一段时间就出新的技术，可以说让很多初学者非常畏惧，没有一个明确的方向不知道从何学起。</p>
<p>同时也有很多人，只局限于使用手头已掌握的技术，而不愿去尝试新技术。举个例子，如今 vue3 都已经正式发布，但仍还有停留在 vue2 不愿尝试 vue3 的开发者。而 java 都发布 18 版本了，可还有很多人都还使用着 java8，这种现象可以说是非常常见了。</p>
<p>这里说说我个人编码经验与看法，<strong>仅作为个人观点，没别的意思</strong>。</p>
<p>熟悉我的人应该都知道，我对很多新鲜的技术有一种难以用言语表达的情感，又哭又笑。属于是那种看到感兴趣的就会开始尝试，在之前也许更强烈。</p>
<p>驱使我去接触的原因无非就以下几点：</p>
<ul>
<li>开发体验、性能提升</li>
<li>对已有技术的厌倦感和对新鲜事物的好奇心</li>
<li>更多机会与方向</li>
<li>对未来技术趋势有更好的了解</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_jpdk" id="写不完的代码">写不完的代码<a href="https://blog.wlgs.site/blog/talk-new-technologies-opinion#%E5%86%99%E4%B8%8D%E5%AE%8C%E7%9A%84%E4%BB%A3%E7%A0%81" class="hash-link" aria-label="写不完的代码的直接链接" title="写不完的代码的直接链接">​</a></h2>
<p>首先要知道一点，在任何的软件开发迭代中都没有最终形态的代码。说白话就是代码都是不断更新的，永远写不出最好的代码。</p>
<p>你能看到如今很多开源项目或者商业项目都在不断新增代码或者功能，除非作者不维护了，不然这份代码可以说写到世界末日。</p>
<p>究其原因还是因为社会不断在发展，硬件升级，性能提升，不断的业务需求。毕竟人都在进步，社会难道还不能进步。所以必然会有新的技术出现，只是出现的时间快慢，与技术难点突破。</p>
<h2 class="anchor anchorWithStickyNavbar_jpdk" id="开发体验性能提升">开发体验、性能提升<a href="https://blog.wlgs.site/blog/talk-new-technologies-opinion#%E5%BC%80%E5%8F%91%E4%BD%93%E9%AA%8C%E6%80%A7%E8%83%BD%E6%8F%90%E5%8D%87" class="hash-link" aria-label="开发体验、性能提升的直接链接" title="开发体验、性能提升的直接链接">​</a></h2>
<p>毋庸置疑，在购买方面，肯定是买新不买旧，同样的在技术（软件更新）方面也是则从用新不用旧。驱使软件和框架更新的原因也就是新增了某些功能（特性），对用户（开发者）的体验有所提升。一般而言比较少的会存在反向更新的操作，这里除了某些国产软件~~（如某信，某 Q 等等）~~</p>
<p>就我对此的看法也是如此，假设一个开发工具启动花费了 5s 钟启动，而在它的最新版只需要 1s 钟就能够启动，你会选择更新尝试吗？。再比如一个框架原先的代码需要 10 行代码才能实现的功能，由于新版本提供一个语言级别的语法糖，使该功能只需一行。</p>
<p>并且我对开发体验非常在意，尤其是不好用，或者不好配置的东西，我基本秉持能不用就不用的原则，像 vue2 与 webpack 就是这样，我跟愿意使用 vue3 或 vite。诸如此类的替换有非常多，便不一一列举。</p>
<p>要我肯定毫不犹豫的更新去使用，但有些人可能对此提升不是很在意，又或者是升级的成本相对较高，也可能是因为这个开发工具（框架）他用的比较少，更新的意义自然就不大。</p>
<h2 class="anchor anchorWithStickyNavbar_jpdk" id="对代码厌倦和对新事物的好奇心">对代码厌倦和对新事物的好奇心<a href="https://blog.wlgs.site/blog/talk-new-technologies-opinion#%E5%AF%B9%E4%BB%A3%E7%A0%81%E5%8E%8C%E5%80%A6%E5%92%8C%E5%AF%B9%E6%96%B0%E4%BA%8B%E7%89%A9%E7%9A%84%E5%A5%BD%E5%A5%87%E5%BF%83" class="hash-link" aria-label="对代码厌倦和对新事物的好奇心的直接链接" title="对代码厌倦和对新事物的好奇心的直接链接">​</a></h2>
<p>我写代码时常处于三分钟热度的状态，有些东西可能也就一开始的时候感觉比较新奇，然后就不了了之了。我对此的看法主要还是容易对代码产生厌倦感，不想写代码，不愿意学习。当厌倦感产生了，自然而然就放弃编写，也就是三分钟热度的状态。不过也能侧重体验一点，那就是肯定我对此不是那么感兴趣，既然不是那么感兴趣的东西，又何必在写下去呢？</p>
<p>接着过段时间又遇到了一个新的技术，冲击了我的好奇心，开始尝试。 如此重复，就会发现啥都学了一点，但实际是啥都没学到。但至少，让我肯去学习，而不是在原地踏步。而从心底里就想接触的新鲜事物，每次接触到就能满足自己内心的好奇心，就这一点我便知足了。</p>
<h3 class="anchor anchorWithStickyNavbar_jpdk" id="重构的艺术">重构的艺术<a href="https://blog.wlgs.site/blog/talk-new-technologies-opinion#%E9%87%8D%E6%9E%84%E7%9A%84%E8%89%BA%E6%9C%AF" class="hash-link" aria-label="重构的艺术的直接链接" title="重构的艺术的直接链接">​</a></h3>
<p>如果回头看看自己 1，2 年前写的代码，会发现原来自己也曾写过丑陋不堪的代码，也成为过自己所讨厌的样子。如果这份代码我将来还会用到，那么我就尝试去重构，也许在当时还不支持某种特性，代码就无法简化。基于现有的水平，便会发现很多代码都有可改善的地方，可以化繁为简。代码重构属于将杂乱摆放的东西，收拾的整整齐齐的样子。重构是在提升观赏度和舒适度的同时，还减少 bug 的诱发概率。</p>
<blockquote>
<p>在编程语言级别水平上，也就是我为什么会想去使用最新的版本（ES2022，TypeScript 4.9），即便是兼容性的问题，我也会去使用，就是因为能够满足我对代码的舒适度，这便足以。</p>
</blockquote>
<h3 class="anchor anchorWithStickyNavbar_jpdk" id="生态与解决问题方面">生态与解决问题方面<a href="https://blog.wlgs.site/blog/talk-new-technologies-opinion#%E7%94%9F%E6%80%81%E4%B8%8E%E8%A7%A3%E5%86%B3%E9%97%AE%E9%A2%98%E6%96%B9%E9%9D%A2" class="hash-link" aria-label="生态与解决问题方面的直接链接" title="生态与解决问题方面的直接链接">​</a></h3>
<p>我是很感谢新技术的出现，他实实在在的解决了一些我已有的痛点，提升了我的开发体验。当然它也让我踩了无数的坑，也折磨过我。但不可否认的是，我的自我解决问题的能力也在不断提升，如果我学的是一门比较流行的技术，那么我所遇到的问题，很有可能别人也遇到过，并将他的解决方案分享出来。而我就很容易根据报错描述找他的解决方案来解决我的问题。但在新技术下，用的人自然而然就少了，所分享的问题解决方案也就少了，所以在这种环境下，我就需要自行翻看源码，查阅文档，提出 issues 才能够解决问题。自然而然解决问题的能力也就有所提升。</p>
<p>像流行框架能有这么有问题解决方案，就是因为强大的生态，同时这也是生态好处之一。</p>
<blockquote>
<p>因此也有很多人顾忌使用新技术，就是因为遇到问题不知如何解决。包括我也是，但通常我会观察一段时间，等成熟了我才去尝试，而不是直接上手，避免踩一些不必要且耗时的坑。</p>
</blockquote>
<h3 class="anchor anchorWithStickyNavbar_jpdk" id="总是活在舒适圈">总是活在舒适圈<a href="https://blog.wlgs.site/blog/talk-new-technologies-opinion#%E6%80%BB%E6%98%AF%E6%B4%BB%E5%9C%A8%E8%88%92%E9%80%82%E5%9C%88" class="hash-link" aria-label="总是活在舒适圈的直接链接" title="总是活在舒适圈的直接链接">​</a></h3>
<p>在圈内有着熟悉的环境，与认识的人相处，做自己会做的事，所以会感到很轻松、很自在。但是当踏出这个圈子的界限的时候，就马上会面对不熟悉的变化与挑战，因而感到不舒适，很自然的想要退回到舒适圈内。</p>
<p>我在阅读英文博客的时候，我也时常感到不舒适，阅读不下去。我也很想回到舒适圈，使用翻译软件来翻译但是这样就会导致我非常依赖翻译软件，就间接失去了一次英文环境与英语能力的提升。</p>
<p>长时间待在舒适圈，会让自己过得很舒服，但是却很难提升自己。不过想想也是，<strong>提升的过程不就是苦尽甘来</strong>。</p>
<p>以目前来看有一种这样的学习趋势，别人学什么，当下什么技术火，就去学什么。我其实特别反感这种现象，也不推崇这种学习理念。我会做出我的解释：</p>
<p>首先，什么技术会火就学什么，这固然没什么问题，如果一门技术没有热度，没有生态，那么学了的意义不大，一是难有长久稳定的技术发展，二是不能将技术变现。而绝大多数人之所以选择火的技术，有很大一点是因为有前人给他铺了很多“路”，如学习指南，思维导图，视频教程仿佛跟着学就能成为编程大牛似的。可一旦没有这些，就不知道该如何下手。始终都是跟着别人步伐学习，思维很难扩散出去。</p>
<p>并且这种现象必然会导致内卷，首先看看国内的技术，Vue 和 Spring boot 的可以说 10 个 web 开发程序员中有 8 个技术栈是这套，比麻花还是卷了，可薪资呢？</p>
<p>这里我并不想贴相关的薪资图片，你完全可以自行去了解，但是我可以肯定且直接告诉你，React 的薪资普遍会比 Vue 高上一截，而 Java 后端开发，如果技术只停留在 CRUD 的层面，工资普遍也高不了多少。</p>
<p><strong>如果你不去拓展自身的技术栈，不多去了解一些未来的可能会火的技术，还停留在当下，活在舒适圈。那么薪资大概率不变，并且自身会有很大被劝退的概率。</strong></p>
<p>与时俱进，这是我认为不断学习新技术，提升自身技术栈，非常重要的一点。<strong>过得舒服，反而过得难受</strong></p>
<h2 class="anchor anchorWithStickyNavbar_jpdk" id="更多的机会与方向">更多的机会与方向<a href="https://blog.wlgs.site/blog/talk-new-technologies-opinion#%E6%9B%B4%E5%A4%9A%E7%9A%84%E6%9C%BA%E4%BC%9A%E4%B8%8E%E6%96%B9%E5%90%91" class="hash-link" aria-label="更多的机会与方向的直接链接" title="更多的机会与方向的直接链接">​</a></h2>
<p>技术更新迭代越来，也带来越多的机会，这对于接触前端的我感到尤为明显。假设当下又出了某某技术，那么必然会引起软件开发者的关注，于此同时就带来了维护者，贡献者，甚至是一些金主投资商。像 <a href="https://tailwindcss.com/" target="_blank" rel="noopener noreferrer">Tailwind CSS</a> 与 <a href="https://vercel.com/" target="_blank" rel="noopener noreferrer">Vercel</a> 就是一个很好的例子，两个前端明星项目，有兴趣可以了解它们的故事。</p>
<p><strong>不过这种机会在国内不太多见，反而在国外特别普遍。</strong></p>
<p>但必须要承认的一个事实，如今技术发展过于迅猛，加上目前就业行情不容乐观，当别人了解过的东西，你却不了解，那么别人所能遇到的机会自然就比你多。说的难听点也就是没有对技术提升的想法，今后项目迭代的过程中使用到一些前沿技术就难以胜任。</p>
<h3 class="anchor anchorWithStickyNavbar_jpdk" id="没有目标的学习等同于乱学">没有目标的学习，等同于乱学<a href="https://blog.wlgs.site/blog/talk-new-technologies-opinion#%E6%B2%A1%E6%9C%89%E7%9B%AE%E6%A0%87%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AD%89%E5%90%8C%E4%BA%8E%E4%B9%B1%E5%AD%A6" class="hash-link" aria-label="没有目标的学习，等同于乱学的直接链接" title="没有目标的学习，等同于乱学的直接链接">​</a></h3>
<p><strong>没有一个明确的目标，学任何（新）技术都是乱学，充其量也就只比不学好一点。</strong></p>
<p>我相信很多初学者也会遇到类似的问题，不知道学什么，想学好找工作的但是薪资不高，想学感兴趣的但又不知如何下手。说实话，要我回到当初，我也难以抉择。也有可能处于摆烂状态或是乱学一同，到头来啥都会一点点，但是又好像啥也不会的样子。</p>
<p>这里我是奉劝先定一个短期的目标，为了这个目标我要去学习哪些技术知识。这里就说我未来一年的目标为例：我未来一年想写开源项目，为开源社区做一份微薄贡献，乃至从事开源行业。那么我就需要了解写开源我需要那些预备知识，例如 Github 的使用，项目规范，英文交流等对应开源项目的技能知识，这才是我所该学的，并且能够实实在在用到的，且对我未来有用的。</p>
<h2 class="anchor anchorWithStickyNavbar_jpdk" id="对未来技术趋势有更好的了解">对未来技术趋势有更好的了解<a href="https://blog.wlgs.site/blog/talk-new-technologies-opinion#%E5%AF%B9%E6%9C%AA%E6%9D%A5%E6%8A%80%E6%9C%AF%E8%B6%8B%E5%8A%BF%E6%9C%89%E6%9B%B4%E5%A5%BD%E7%9A%84%E4%BA%86%E8%A7%A3" class="hash-link" aria-label="对未来技术趋势有更好的了解的直接链接" title="对未来技术趋势有更好的了解的直接链接">​</a></h2>
<p>**当你了解的技术越多，你就越能知道自己适合哪些技术。**并且当你去尝试过后，更能加深你对某个技术的信仰。</p>
<p>在未来技术只会越来越多，因为当下要解决太多问题，有太多的业务需求开发。只要不断有需求，就不断会有技术更新。但技术更新必然是朝着好的方向去发展，即技术趋势方向。而了解的越多，能看到技术趋势也就更远，方向就更难偏移。</p>
<p>像我目前就比较看好未来 js/ts 的发展，这也是使我从逆向和爬虫转到 Web 开发行业上，并且将会长期发展下去。</p>
<p>但很多程序员就缺乏这种对<strong>技术的认可</strong>，甚至眼光比较浅薄，认为自己当下所学的就足以，可没却从未到真正的”外面”去看过。</p>
<p>当有了对未来技术趋势的了解，自身就有相对明确的目标学习，而不是漫无目的学习，跟风学习。</p>
<h2 class="anchor anchorWithStickyNavbar_jpdk" id="我是如何了解到这些技术的">我是如何了解到这些技术的？<a href="https://blog.wlgs.site/blog/talk-new-technologies-opinion#%E6%88%91%E6%98%AF%E5%A6%82%E4%BD%95%E4%BA%86%E8%A7%A3%E5%88%B0%E8%BF%99%E4%BA%9B%E6%8A%80%E6%9C%AF%E7%9A%84" class="hash-link" aria-label="我是如何了解到这些技术的？的直接链接" title="我是如何了解到这些技术的？的直接链接">​</a></h2>
<p>也许有些人并不在意新技术是否学习，而是好奇我是如何知道这些技术的。这个问题非常好，我自己简单总结通过那些途径来获取到这些相关技术的新闻。</p>
<p>主要有以下几种来源：</p>
<ul>
<li>多加技术群，不定时看群聊</li>
<li><strong>多刷技术大佬文章（推特），或者是技术公众号和掘金（最多的也是最有效的）</strong></li>
<li>订阅一些技术周刊，或订阅某个项目</li>
</ul>
<p>没啥技巧，就靠刷技术文章，自然而然的了解也就越来越多了。</p>
<p>尤其是第二点，也是我了解这些新技术的最直接途径。与其自己去主动了解新的技术，将刷抖音的时间改成刷技术文章，了解新技术就是分分钟的事情。可以说我写博客是因为这个契机，记录自己用到的技术的开发过程，并分享个人的开发体验，让更多人了解到这些新技术。</p>
<h2 class="anchor anchorWithStickyNavbar_jpdk" id="面对新技术该怎么学">面对新技术该怎么学？<a href="https://blog.wlgs.site/blog/talk-new-technologies-opinion#%E9%9D%A2%E5%AF%B9%E6%96%B0%E6%8A%80%E6%9C%AF%E8%AF%A5%E6%80%8E%E4%B9%88%E5%AD%A6" class="hash-link" aria-label="面对新技术该怎么学？的直接链接" title="面对新技术该怎么学？的直接链接">​</a></h2>
<p>其实更多时候是比较在意如何去学一门新技术，而不是找一门新技术，当阅历多了，技术自然就了解的多。这里我分享下我对于新技术是如何起步与学习的。</p>
<p>首先我会列举出我近期感兴趣的技术，这一步很关键，我当然不可能每个技术都去尝试一遍，时间精力根本不够。通常在我了解到这个技术的时候，比如文章与视频中，都会介绍到这个的优点与用法，这就足以了。</p>
<p>但想要进一步的学习，还是得依靠实战项目（至少我都是通过实战项目来学习的），这时候我会看看手头的项目，看看有没有能够基于上面所列举出的新技术升级的想法，如果有的话，那正好就当重构与新技术的学习，这是最好的，也是相对比较节省时间的。</p>
<p>但如果没有的话，我通常是会考虑另写一个项目，而这个项目可能是某个灵感的实现，也可能是久违想写的项目，或者是复刻某个感兴趣的站点，总之从上面所列举出来的技术中去选择一个来进行实践。在项目实践中去尝试使用这些新技术，哪怕只是实现一个简单的 demo，也总比单纯的刷文档，看代码来的有效。</p>
<p><strong>在项目实践中学习，永远是最直接也是最有效的</strong>。回想你编写课设或者工作的项目，是不是在项目开发中进步的最快？如果这时候还有点时间紧迫感，进步反而会更快。（当然焦虑和压力也会随之提升）</p>
<h2 class="anchor anchorWithStickyNavbar_jpdk" id="最后感悟">最后感悟<a href="https://blog.wlgs.site/blog/talk-new-technologies-opinion#%E6%9C%80%E5%90%8E%E6%84%9F%E6%82%9F" class="hash-link" aria-label="最后感悟的直接链接" title="最后感悟的直接链接">​</a></h2>
<p>关于本文，必然有引来一些不同看法与见解，每个人都有对不同事物的理解，我只是将我对新技术的看法，以文章的方式输出出来。本文并未带有任何的技术的偏见，我对任何技术都保持一视同仁，并且愿意去尝试学习。</p>
<p>不必抱怨新技术发展的过快，自己来不及学，学不完。或者担心自己学的东西在未来将会淘汰，等同于白学。学习过程就是一个非常好的经验总结，当你回顾整个学习过程，其实都没有白学。反而多一次的学习过程，在未来学习新的东西时，学习的成效也会显著提升。保持不断学习，就永远来的及学习。</p>
<p>更多时候，不应该只学如何使用，而是该想想这东西是在什么样的契机下如何被创造出来的，解决了什么问题。而这个问题在未来有没有什么更好的解决方案可替代，如果有更好的解决方案，那么必将又将发展出新的技术来更好的解决这个问题。这在我曾经的学习中，我是从未考虑到的，只专注于学习，而没去了解为什么。</p>
<p>我是希望越来越多的新技术出现，无论它是为了解决什么，必然能解决某些人的一些需求，那么它的出现就很有意义。至于未来该技术和相关生态发展如何，不得而知。也没人敢笃定未来这个技术必定会火，就去学这门技术。绝大大多情况下都是比较看好这门技术，认为未来可期，同时又感兴趣，就开始学习并使用。</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[卖米]]></title>
            <link>https://blog.wlgs.site/blog/maimi</link>
            <guid>https://blog.wlgs.site/blog/maimi</guid>
            <pubDate>Sat, 01 Feb 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[天刚蒙蒙亮，母亲就把我叫起来了：“琼宝，今天是这里的场，我们担点米到场上卖了，好弄点钱给你爹买药。”]]></description>
            <content:encoded><![CDATA[<p>天刚蒙蒙亮，母亲就把我叫起来了：“琼宝，今天是这里的场，我们担点米到场上卖了，好弄点钱给你爹买药。”</p>
<p>我迷迷糊糊睁开双眼，看看窗外，日头还没出来呢。我实在太困，又在床上赖了一会儿。</p>
<p>隔壁传来父亲的咳嗽声，母亲在厨房忙活着，饭菜的香气混合着淡淡的油烟味飘过来，慢慢驱散了我的睡意。我坐起来，穿好衣服，开始铺床。</p>
<p>“姐，我也跟你们一起去赶场好不好？你买冰棍给我吃！”</p>
<p>弟弟顶着一头睡得乱蓬蓬的头发跑到我房里来。</p>
<p>“毅宝，你不能去，你留在家里放水。”隔壁传来父亲的声音，夹杂着几声咳嗽。</p>
<p>弟弟有些不情愿地冲隔壁说：“爹，天气这么热，你自己昨天才中了暑，今天又叫我去，就不怕我也中暑！”</p>
<p>“人怕热，庄稼不怕？都不去放水，地都干了，禾苗都死了，一家人喝西北风去？”父亲一动气，咳嗽得越发厉害了。</p>
<p>弟弟冲我吐吐舌头，扮了个鬼脸，就到父亲房里去了。</p>
<p>只听见父亲开始叮嘱他怎么放水，去哪个塘里引水，先放哪丘田，哪几个地方要格外留神别人来截水，等等。</p>
<p>吃过饭，弟弟就找着父亲常用的那把锄头出去了。我和母亲开始往谷箩里装米，装完后先称了一下，一担八十多斤，一担六十多斤。</p>
<p>我说：“妈，我挑重的那担吧。”</p>
<p>“你学生妹子，肩膀嫩，还是我来。”</p>
<p>母亲说着，一弯腰，把那担重的挑起来了。</p>
<p>我挑起那担轻的，跟着母亲出了门。</p>
<p>“路上小心点！咱们家的米好，别便宜卖了！”父亲披着衣服站在门口嘱咐道。</p>
<p>“知道了，你快回床上躺着吧。”母亲艰难地把头从扁担旁边扭过来，吩咐道，“饭菜在锅里，中午你叫毅宝热一下吃！”</p>
<p>赶场的地方离我家大约有四里路，我和母亲挑着米，在窄窄的田间小路上走走停停，足足走了一个钟头才到。</p>
<p>场上的人已经不少了，我们赶紧找了一块空地，把担子放下来，把扁担放在地上，两个人坐在扁担上，拿草帽扇着。</p>
<p>一大早就这么热，中午就更不得了，我不由得替弟弟担心起来。</p>
<p>他去放水，是要在外头晒上一整天的。</p>
<p>我往四周看了看，发现场上有许多人卖米，莫非他们都等着用钱？</p>
<p>场上的人大都眼熟，都是附近十里八里的乡亲，人家也是种田的，谁会来买米呢？</p>
<p>我问母亲，母亲说：“有专门的米贩子会来收米的。他们开了车到乡下来赶场，收了米，拉到城里去卖，能挣好些哩。”</p>
<p>我说：“凭什么都给他们挣？我们也拉到城里去卖好了！”其实自己也知道不过是气话。</p>
<p>果然，母亲说：“咱们这么一点米，又没车，真弄到城里去卖，挣的钱还不够路费呢！早先你爹身体好的时候，自己挑着一百来斤米进城去卖，隔几天去一趟，倒比较划算一点。”</p>
<p>我不由心里一紧，心疼起父亲来。</p>
<p>从家里到城里足足有三十多里山路呢，他挑着那么重的担子走着去，该多么辛苦！就为了多挣那几个钱，把人累成这样，多不值啊！</p>
<p>但又有什么办法呢？家里除了种地，也没别的收入，不卖米，拿什么钱供我和弟弟上学？
我想着这些，心里一阵阵难过起来。</p>
<p>看看旁边的母亲，头发有些斑白了，黑黝黝的脸上爬上了好多皱纹，脑门上密密麻麻都是汗珠，眼睛有些红肿。</p>
<p>“妈，你喝点水。”</p>
<p>我把水壶递过去，拿草帽替她扇着。</p>
<p>米贩子们终于开着车来了。他们四处看着卖米的人，走过去仔细看米的成色，还把手插进米里，抓上一把米细看。</p>
<p>“一块零五。”</p>
<p>米贩子开价了。</p>
<p>卖米的似乎嫌太低，想讨价还价。</p>
<p>“不还价，一口价，爱卖不卖！”</p>
<p>米贩子态度很强硬，毕竟，满场都是卖米的人，只有他们是买家，不趁机压价，更待何时？</p>
<p>母亲注意着那边的情形说：“一块零五？也太便宜了，上场还卖到一块一呢。”</p>
<p>正说着，有个米贩子朝我们这边走过来了。</p>
<p>他把手插进大米里，抓了一把出来，迎着阳光细看着。</p>
<p>“这米好咧！又白又匀净，又筛得干净，一点沙子也没有！”母亲堆着笑，语气里有几分自豪。
的确，我家的米比场上哪个人卖的米都要好。</p>
<p>那人点了点头，说：“米是好米，不过这几天城里跌价，再好的米也卖不出好价钱来。一块零五，卖不卖？”</p>
<p>母亲摇摇头：“这也太便宜了吧？上场还卖一块一呢。再说，你是识货的，一分钱一分货，我这米肯定好过别家的！”</p>
<p>那人又看了看米，犹豫了一下，说：“本来都是一口价，不许还的，看你们家米好，我加点，一块零八，怎么样？”</p>
<p>母亲还是摇头：“不行，我们家这米，少说也要卖到一块一。你再加点？”</p>
<p>那人冷笑一声，说：“今天肯定卖不出一块一的行情，我出一块零八你不卖，等会散场的时候你一块零五都卖不出去！”</p>
<p>“卖不出去，我们再担回家！”那人的态度激恼了母亲。</p>
<p>“那你就等着担回家吧。”那人冷笑着，丢下这句话走了。</p>
<p>我在旁边听着，心里算着：一块零八到一块一，每斤才差两分钱。</p>
<p>这里一共150斤米，总共也就三块钱的事情，路这么远，何必再挑回去呢？我的肩膀还在痛呢。
我轻轻对母亲说：“妈，一块零八就一块零八吧，反正也就三块钱的事。再说，还等着钱给爹买药呢。”</p>
<p>“那哪行？”母亲似乎有些生气了，“三块钱不是钱？再说了，也不光是几块钱的事，做生意也得讲点良心，咱们辛辛苦苦种出来的米，质量也好，哪能这么贱卖了？”</p>
<p>我不敢再说话，我知道种田有多么累。</p>
<p>光说夏天放水，不就把爹累得病倒了？</p>
<p>弟弟也才十一二岁的毛孩子，还不得找着锄头去放水！</p>
<p>毕竟，这是一家人的生计啊！</p>
<p>又有几个米贩子过来了，他们也都只出一块零五。有一两个出到一块零八，也不肯再加。
母亲仍然不肯卖。</p>
<p>看看人渐渐少了，我有些着急了。</p>
<p>母亲一定也很心急吧，我想。</p>
<p>“妈，你去那边树下凉快一下吧！”我说。</p>
<p>母亲一边擦汗，一边摇头：“不行，我走开了，来人买米怎么办？你又不会还价！”
我有些惭愧。</p>
<p>“百无一用是书生”，虽然在学校里功课好，但这些事情上就比母亲差远了。</p>
<p>又有好些人来买米，因为我家的米实在是好，大家都过来看，但谁也不肯出到一块一。
看看日头到头顶上了，我觉得肚子饿了，便拿出带来的饭菜和母亲一起吃起来。
母亲吃了两口就不吃了，我知道她是担心米卖不出去，心里着急。</p>
<p>母亲叹了口气：“还不知道卖得掉卖不掉呢。”
我趁机说：“不然就便宜点卖好了。”
母亲说：“我心里有数。”
下午人更少了，日头又毒，谁愿意在场上晒着呢。
看看母亲，衣服都粘在背上了，黝黑的脸上也透出晒红的印迹来。
“妈，我替你看着，你去溪里泡泡去。”
母亲还是摇头：“不行，我有风湿，不能在凉水里泡。你怕热，去那边树底下躲躲好了。”
“不用，我不怕晒。”
“那你去买根冰棍吃好了。”</p>
<p>母亲说着，从兜里掏出两毛钱零钱来。
我最喜欢吃冰棍了，尤其是那种叫“葡萄冰”的最好吃，也不贵，两毛钱一根。
但我今天突然不想吃了：“妈，我不吃，喝水就行。”
最热的时候也过去了，转眼快散场了。
卖杂货的小贩开始降价甩卖，卖菜，卖西瓜的也都吆喝着：“散场了，便宜卖了！”
我四处看看，场上已经没有几个卖米的了，大部分人已经卖完回去了。
母亲也着急起来，一着急，汗就出得越多了。</p>
<p>终于有个米贩子过来了：“这米卖不卖？一块零五，不讲价！”
母亲说：“你看我这米，多好！上场还卖一块一呢……”
不等母亲说完，那人就不耐烦地说：“行情不同了！想卖一块一，你就等着往回担吧！”
奇怪的是，母亲没有生气，反而堆着笑说：“那，一块零八，你要不要？”
那人从鼻子里哼了一声，说：“你这个价钱，不是开场的时候也难得卖出去，现在都散场了，谁买？做梦吧！”
母亲的脸一下子白了，动着嘴唇，但什么也没说。</p>
<p>一旁的我忍不住插嘴了：“不买就不买，谁稀罕？不买你就别站在这里挡道！”
“哟，大妹子，你别这么大火气。”
那人冷笑着说，“留着点气力等会把米担回去吧！”
等那人走了，我忍不住埋怨母亲：“开场的时候人家出一块零八你不卖，这会好了，人家还不愿意买了！”
母亲似乎有些惭愧，但并不肯认错：“本来嘛，一分钱一分货，米是好米，哪能贱卖了？出门的时候你爹不还叮嘱叫卖个好价钱？”</p>
<p>“你还说爹呢！他病在家里，指着这米换钱买药治病！人要紧还是钱要紧？”
母亲似乎没有话说了，等了一会儿，低声说：“一会儿人家出一块零五也卖了吧。”
可是再没有人来买米了，米贩子把买来的米装上车，开走了。
散场了，我和母亲晒了一天，一粒米也没卖出去。
“妈，走吧，回去吧，别愣在那儿了。”
我收拾好毛巾、水壶、饭盒，催促道。
母亲迟疑着，终于起了身。
“妈，我来挑重的。”
“你学生妹子，肩膀嫩……”
不等母亲说完，我已经把那担重的挑起来了。</p>
<p>母亲也没有再说什么，挑起那担轻的跟在我后面，踏上了回家的路。
肩上的担子好沉，我只觉得压着一座山似的。
突然脚下一滑，我差点摔倒。
我赶紧把剩下的力气都用到腿上，好不容易站稳了，但肩上的担子还是倾斜了一下，洒了好多米出来。
“啊，怎么搞的？”母亲也放下担子走过来，嘴里说，“我叫你不要挑这么重的，你偏不听，这不是洒了。多可惜！真是败家精！”</p>
<p>败家精是母亲的口头禅，我和弟弟干了什么坏事她总是这么数落我们。
但今天我觉得格外委屈，也不知道为什么。
“你在这等会儿，我回家去拿个簸箕来把地上的米扫进去。浪费了多可惜！拿回去可以喂鸡呢！”母亲也不问我扭伤没有，只顾心疼洒了的米。
我知道母亲的脾气，她向来是“刀子嘴，豆腐心”的，虽然也心疼我，嘴里却非要骂我几句。
想到这些，我也不委屈了。
“妈，你回去还要来回走个六七里路呢，时候也不早了。”我说。
“那地上的米怎么办？”
我灵机一动，把头上的草帽摘下来：“装在这里面好了。”
母亲笑了：“还是你脑子活，学生妹子，机灵。”</p>
<p>说着，我们便蹲下身子，用手把洒落在地上的米捧起来，放在草帽里，然后把草帽顶朝下放在谷箩里，便挑着米继续往家赶。
回到家里，弟弟已经回来了，母亲便忙着做晚饭，我跟父亲报告卖米的经过。
父亲听了，也没抱怨母亲，只说：“那些米贩子也太黑了，城里都卖一块五呢，把价压这么低！这么挣庄稼人的血汗钱，太没良心了！”</p>
<p>我说：“爹，也没给你买药，怎么办？”
父亲说：“我本来就说不必买药的嘛，过两天就好了，花那个冤枉钱做什么！”
晚上，父亲咳嗽得更厉害了。
母亲对我说：“琼宝，明天是转步的场，咱们辛苦一点，把米挑到那边场上去卖了，好给你爹买药。”
“转步？那多远，十几里路呢！”我想到那漫长的山路，不由有些发怵。
“明天你们少担点米去。每人担50斤就够了。”父亲说。</p>
<p>“那明天可不要再卖不掉担回来哦！”我说，“十几里山路走个来回，还挑着担子，可不是说着玩的！”
“不会了不会了。”母亲说，“明天一块零八也好，一块零五也好，总之都卖了！”
母亲的话里有许多辛酸和无奈的意思，我听得出来，但不知道怎么安慰她。</p>
<p>我自己心里也很难过，有点想哭。
我想，别让母亲看见了，要哭就躲到被子里哭去吧。
可我实在太累啦，头刚刚挨到枕头就睡着了，睡得又香又甜。</p>
<blockquote>
<p>-- 张培祥</p>
<p>1979年生于湖南醴陵一个山区农户，1997年考入北京大学法学院，是北大有名的才女，2003年非典期间患白血病，三个月后，年仅24岁的张培祥去世。</p>
</blockquote>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Git的故事：这一次没这么好玩]]></title>
            <link>https://blog.wlgs.site/blog/git-story</link>
            <guid>https://blog.wlgs.site/blog/git-story</guid>
            <pubDate>Wed, 01 Jan 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[Linus Torvalds 曾写了一本书提到，当初创造 Linux 只是因为好玩，却意外掀起一场革命。Git 是 Linus 的第二代表作，同样也是意外的革命，是现在软体工程师的标配，但至少对 Linus 本人来说，它的起源可就没这么好玩了。]]></description>
            <content:encoded><![CDATA[<p>Linus Torvalds 曾写了一本书提到，当初创造 Linux 只是因为好玩，却意外掀起一场革命。Git 是 Linus 的第二代表作，同样也是意外的革命，是现在软体工程师的标配，但至少对 Linus 本人来说，它的起源可就没这么好玩了。</p>
<h2 class="anchor anchorWithStickyNavbar_jpdk" id="linus-扩展不了">Linus 扩展不了<a href="https://blog.wlgs.site/blog/git-story#linus-%E6%89%A9%E5%B1%95%E4%B8%8D%E4%BA%86" class="hash-link" aria-label="Linus 扩展不了的直接链接" title="Linus 扩展不了的直接链接">​</a></h2>
<p>1998 年是 Linux 风光的一年，许多大公司，如昇阳、IBM 和甲骨文，都纷纷投入 Linux 的业务。那年春天，Linus 的二女儿出生，他们一家从芬兰搬到美国加州也差不多一年，生活步入正轨。虽然 Linux 还尚未给 Linus 带来什么收益，但 Linus 也可算是事业家庭两得意。</p>
<p>反观 Linux Kernel 的开发者社群，随著愈来愈多人加入开发，既有的合作方式开始力不从心。Linus 开始显得没办法跟上开发者们修改程式码的速度，逐渐成为瓶颈。</p>
<p>1998 年 9 月 28 日，Linus 和往常一样，读著 Linux Kernel 邮件列表上的信。</p>
<blockquote>
<p>请不要浪费时间送修补了，这些在 vger 上早就修好了。</p>
</blockquote>
<p>Linus 看到这句话不太高兴。一直以来，Linux 程式码的修改重度仰赖 Linus 本人，Linus 本人就是版本控管。如果你要修改程式码，寄封信到邮件列表上，Linus 看到了并认可，就会将你的修补送进他自己的版本，然后不时在 FTP 上释出新版本。Linus 喜欢这样的合作方式，因为他可以掌控一切变更，大家也信任 Linus，觉得 Linux 本来就该由 Linus 掌控。</p>
<p>但自从 David Miller，一位 Linux Kernel 的资深开发者，架设了一个名为 vger 的 CVS 伺服器，有些人就以为可以绕过 Linus 本人，将变更送到 vger 就没事了。这不是 Linus 第一次遇到同样的问题，他在邮件列表上不悦的回应：</p>
<blockquote>
<p>“在 vger 上就不要浪费时间”这个说法完全是愚蠢的，因为 vger 上很多东西可能永远都不会进 2.2。</p>
</blockquote>
<p>于是几个开发者与 Linus 展开一场激烈的笔战，他们开始陈情，说 Linus 回信太慢，甚至有时候要寄三次才会得到这个“仁慈独裁者”的亲回。</p>
<p>“这些家伙也不照照镜子，”Linus 心想：“我一天要看多少信，如果连寄三次信都嫌麻烦，那这个修补我宁可不要。” Linus 在讨论串留下这个讯息随即怒离：</p>
<blockquote>
<p>这次的讨论只是让我烦燥，增加我的压力。走开吧，不要再 CC 我了，我要度假去了，我不要再听到任何有关它的事。总之，滚出我的信箱就对了。</p>
</blockquote>
<p>Linus 情绪性的发言反而让一些人开始提出正面的帮助。</p>
<p>开源运动代表人物之一 Eric S. Raymond，著名文章《大教堂和市集》就是他写的。看到 Linus 的怒离文，他冷静地呼吁：</p>
<blockquote>
<p>各位，这些是职业倦怠的早期征兆。Linus 一直以来的毅心确实令人敬佩，但他也是有极限的。我们所有人（是的，也包括你 Linus）要一起想办法帮这个重要人物<strong>减少</strong>压力，而不是增加压力。</p>
</blockquote>
<p>另一位伸出援手的是 Larry McVoy，在一篇标题为“成长痛的解决方案”的邮件，他这么写：</p>
<blockquote>
<p>问题症结在于 Linus 扩展不了（“Linus doesn’t scale”）。我们不能期待 Linus 一个人能跟上 Kernel 变化的速度，我们也不想看到 Linus 失去对 Kernel 的掌控，他已一再证明自己非常适任此职。</p>
<p>（解决方案基本上是）将工作分担给 Linus 身边的几个人，要做到分担，我们要导入新工具。</p>
<p>（这个新工具是）一个分散式版本控管系统⋯⋯</p>
</blockquote>
<p>Larry 当时正好在开发一套新的版控软体，叫做 BitKeeper。</p>
<h2 class="anchor anchorWithStickyNavbar_jpdk" id="bitkeeper-的起源">BitKeeper 的起源<a href="https://blog.wlgs.site/blog/git-story#bitkeeper-%E7%9A%84%E8%B5%B7%E6%BA%90" class="hash-link" aria-label="BitKeeper 的起源的直接链接" title="BitKeeper 的起源的直接链接">​</a></h2>
<p>在 1990 年代早期，昇阳导入了一套名为 Network Software Environment (NSE) 的内部工具来管理程式码，但 NSE 太慢了，使用体验极差，有些工程师甚至为此愤而离职。</p>
<p>Larry McVoy 不仅是个资深的作业系统开发者，过去也做过许多效能相关的工作，所以昇阳的主管就找上了 Larry 来调教一下 NSE 的效能。</p>
<p>Larry 一看 NSE 的程式码吓了一跳，“这东西很多地方当初设计时都没有考量到效能。”他还发现 NSE 的底层其实是 SCCS，SCCS 是 1970 年代的版本控管软体，出现比 CVS 和 Subversion 还早。与其修改体质不良 NSE，Larry 选了另一条路：他用 Perl 写了 NSElite，在 SCCS 之上实作了 resync/resolve 指令，基本上类似现今 Git 的 clone/pull/push 指令。</p>
<p>NSElite 比 NSE 快多了，所以昇阳的工程师一个一个背弃 NSE，改用 NSElite。昇阳某 VP 见状，觉得有商机，就组了一个八人团队，想要用 C++ 重写 Larry 写的 Perl 脚本，将其产品化为 <a href="https://en.wikipedia.org/wiki/Sun_WorkShop_TeamWare" target="_blank" rel="noopener noreferrer">TeamWare</a>。</p>
<p>TeamWare 大概是最早的分散式版控系统，后来昇阳 Solaris 作业系统的开发全是借助于它。工程师们用过 TeamWare 都表示回不去了：不同于 CVS 和 Subversion，TeamWare 让你将整个专案复制到你自己的机器，你可以尽情地在本地端提交变更，等到准备好再将你自己本地的版本合并回远端版本。</p>
<p>这八人团队的成员本来是写 C 语言的，当时 C++ 是新的火热语言，他们边学 C++ 边开发 TeamWare。在 TeamWare 还未完成前，Larry 曾尝试继续开发 NSElite，但这无疑是给 TeamWare 团队难堪：一个人用 Perl 竟然比八个人用 C++ 还来得快，VP 见状便告诉 Larry：“这件事已经上报给 Scooter（即 Scott McNealy，昇阳的执行长），如果你再发布一次，你就被解雇了。”</p>
<p>为此，1991 年，Larry 停止 NSElite 的开发，但建造一个分散式版控软体的念头始终在他心中挥之不去。他本来以为会有其他商用软体会跟进 TeamWare 的脚步，但并没有。1997 年 Larry 开始著手开发一款名为 BitKeeper 的分散式版控软体。然而，直到 1998 年 9 月，当他看到邮件列表上 Linus 处于崩溃边缘，这才真正激励他开始认真看待 BitKeeper 这个专案。</p>
<h2 class="anchor anchorWithStickyNavbar_jpdk" id="linux-kernel-采用-bitkeeper">Linux Kernel 采用 BitKeeper<a href="https://blog.wlgs.site/blog/git-story#linux-kernel-%E9%87%87%E7%94%A8-bitkeeper" class="hash-link" aria-label="Linux Kernel 采用 BitKeeper的直接链接" title="Linux Kernel 采用 BitKeeper的直接链接">​</a></h2>
<p>1998 年秋天某日，Larry 邀请了 Linus Torvalds、David Miller、Richard Henderson 来家中，吃完晚餐后，他们席地而坐，开始协商对策要如何减少 Linus 的工作量。他们在地板画了三、四个小时的图，这些图大致上就是 TeamWare 在昇阳内部行之有年的运作方式，Larry 对此十分熟悉。</p>
<p>在这个框架中，开发者们可利用 BitKeeper 各自开发，不互相干扰，而且在 Linus 这边做最后整合时，能够不失去修改的历史记录，让 Linus 能看出一个变更的来龙去脉，审查程式码时更容易。</p>
<p>“好吧，如果你做出来，而且跑起来跟你说的一样，我就会用它。”Linus 说道。<br>
<!-- -->“没问题，这我以前做过，大概需要六个月。”Larry 回答。</p>
<p>Larry 马上就意识到他低估了问题的复杂度，所以他成立了一间名为 BitMover 公司，找了几个熟悉版控系统的好手，一起打造 BitKeeper。19 个月后，2000 年 5 月，BitKeeper 公开释出第一版，此时 BitMover 是一个七人团队。</p>
<p>第一版的 BitKeeper 有一个命令列工具 <code>bk</code>，也有一些图形介面的工具。其中 <code>bk clone/pull/push</code> 命令作用有犹如 <code>git clone/pull/push</code>。</p>
<p>当时昇阳的 TeamWare 已是有口皆碑，而 BitKeeper 更是 TeamWare 的强化版。例如，TeamWare 只允许在 NFS 档案系统间传递资料，而 BitKeeper 可以走 HTTP 来传输档案，实现了真正的分散。因此不久后，BitKeeper 就为 BitMover 带来充沛的现金流，到了 2002 年，BitMover 团队成长到了 25 人，完全自给自足，没靠外部资金。</p>
<p><img decoding="async" loading="lazy" src="https://blog.brachiosoft.com/posts/git//mcvoy.jpg" alt="Larry McVoy, Linux Expo, 1999" class="img_aT2B"></p>
<p>Larry McVoy, Linux Expo, 1999</p>
<p>2002 年 1 月，Linus 工作量太大的问题又再度浮现，开发者送出的修补不是等很久才迟迟回应，不然就是被忽略。有人写了一篇“<a href="https://lkml.iu.edu/hypermail/linux/kernel/0201.3/1000.html" target="_blank" rel="noopener noreferrer">小小的提议</a>”尝试改善这个问题。讨论串中，有人随口<a href="https://lkml.iu.edu/hypermail/linux/kernel/0201.3/1427.html" target="_blank" rel="noopener noreferrer">提到</a>“bitkeeper 真是个好工具”，唤醒了三年前，Larry 家中的那顿晚餐，在 Linus 脑中种下的那颗种子。Linus <a href="https://lkml.iu.edu/hypermail/linux/kernel/0201.3/1513.html" target="_blank" rel="noopener noreferrer">问道</a>：“有多少人在用 bitkeeper 做 kernel 开发？”</p>
<p>果不其然，当时已经有些 Kernel 开发者早就在使用 BitKeeper。Linux PowerPC (PPC) 团队早在 1999 年 12 月就开始试用 BitKeeper，BitMover 为了帮助他们，架设了 bkbits.net 伺服器。</p>
<p>过没几天，2002 年 2 月 5 日，邮件列表上就看到 Linus 开始在<a href="https://lkml.iu.edu/hypermail/linux/kernel/0202.0/0989.html" target="_blank" rel="noopener noreferrer">测试 BitKeeper</a>。此后，Linux Kernel 主要开发者们也跟进开始采用 BitKeeper。你不一定要用 BitKeeper 才能参与开发，但如果你是 BitKeeper 的使用者，流程大概是：</p>
<div class="codeBlockContainer_rxDN theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_e6Y8"><pre tabindex="0" class="prism-code language-text codeBlock_eEse thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_Uz_K"><span class="token-line" style="color:#393A34"><span class="token plain">&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;# 下载仓储（repository）&lt;/span&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;bk clone bk://linux.bkbits.net/linux-2.5 linux-2.5</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;bk clone linux-2.5 alpha-2.5</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;# 从另一个地方下载变更&lt;/span&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;cd alpha-2.5</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;bk pull bk://gkernel.bkbits.net/alpha-2.5</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;# 编辑档案并将变更上传回远端&lt;/span&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;bk vi fs/inode.c </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;bk push bk://gkernel@bkbits.net/alpha-2.5 </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;/span&gt;&lt;/span&gt;</span><br></span></code></pre><div class="buttonGroup_Aaa5"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rNxk" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_8vl6"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_uXRx"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>若要将变更送给 Linus，你就再寄封信到邮件列表上，内容大致是：</p>
<div class="codeBlockContainer_rxDN theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_e6Y8"><pre tabindex="0" class="prism-code language-text codeBlock_eEse thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_Uz_K"><span class="token-line" style="color:#393A34"><span class="token plain">Here is an update for something something...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Please pull from: bk://gkernel.bkbits.net/alpha-2.5</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">example/file1.c | 6 ++++++</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">example/file2.c | 4 ----</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">2 files changed, 6 insertions(+), 4 deletions(-)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">-----</span><br></span></code></pre><div class="buttonGroup_Aaa5"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rNxk" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_8vl6"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_uXRx"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_jpdk" id="没有免费的-bitkeeper-了">没有免费的 BitKeeper 了<a href="https://blog.wlgs.site/blog/git-story#%E6%B2%A1%E6%9C%89%E5%85%8D%E8%B4%B9%E7%9A%84-bitkeeper-%E4%BA%86" class="hash-link" aria-label="没有免费的 BitKeeper 了的直接链接" title="没有免费的 BitKeeper 了的直接链接">​</a></h2>
<p>Larry McVoy 让 Linux Kernel 开发者免费使用 BitKeeper，但免费是有代价的。例如，他们的免费用户的使用执照里规定：</p>
<ul>
<li>你不可以关掉 Open Logging──此机制会将使用纪录传送至 BitMover 伺服器。</li>
<li>如果你从事的是版控软体的业务，你不可以免费使用 BitKeeper。</li>
<li>如果你要让 BitKeeper 和其他同类软体一起运行，你必须征求 BitMover 同意。</li>
</ul>
<p>Linux 是开源软体的始祖，社群里有很多自由软体的拥护者，对这些条款不是嗤之以鼻，就是敬而远之。可是对 Linus 和主要的 Kernel 开发者来说，重点是 BitKeeper 减轻了他们的工作量，况且当时没有更好的替代工具，他们也就接受 BitKeeper 的使用条款，以换取它的便利。</p>
<p>以 Linus 来说，他对专用软体（proprietary software）一直持开放态度，他当初会选用自由软体 GPL 作为 Linux Kernel 的授权协议，纯粹是因为他不乐见商业市场“玷污”了 Linux，他的方法就是让 Linux 保持开放，而GPL 刚好在那边符合他的需求，他就拿来用了。但他从不觉得所有软体都该走自由软体的路线，他觉得作者有权以任何他想要的方式散布软体，怎么使用软体不应该是社会运动。</p>
<p>自由软体的拥护者可不这么想，比较极端的甚至会认为专用软体都是邪恶的。这群骇客宁可拥有修改软体的自由，也不要 BitKeeper 的“便利”。</p>
<p>Larry 备受来自社群的压力，为解决此问题，BitKeeper 团队在 2003 年架设了一个 BitKeeper 至 CVS 的镜像，让那些不想装 BitKeeper 的人，也可以透过 CVS 来取得程式码的修改历史。但从 CSV 取得的历史资料和 BitKeeper 上的并不完整，人们还是不满意：“为什么我们的资料要被锁在 BitKeeper 的专用格式里，而且还明文禁止我们用其他程式去读取<strong>我们</strong>自己的资料？”</p>
<p>有鉴于此，Samba 和 rsync 的作者，澳洲程式设计师 Andrew Tridgell（简称 Tridge），在 2005 年 2 月开始著手写一个免费的 BitKeeper 客户端程式，要解决自由软体用户面临的问题。</p>
<p>Tridge 做了以下尝试。</p>
<p>“这里有一个 BitKeeper 位址，bk://thunk.org:5000，用 telnet 连上去试试看。”</p>
<div class="codeBlockContainer_rxDN theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_e6Y8"><pre tabindex="0" class="prism-code language-text codeBlock_eEse thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_Uz_K"><span class="token-line" style="color:#393A34"><span class="token plain">$ telnet thunk.org 5000</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Trying 69.25.196.29...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Connected to thunk.org.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Escape character is '^]'.</span><br></span></code></pre><div class="buttonGroup_Aaa5"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rNxk" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_8vl6"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_uXRx"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>“连上去了，何不输入 help 命令？”</p>
<div class="codeBlockContainer_rxDN theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_e6Y8"><pre tabindex="0" class="prism-code language-text codeBlock_eEse thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_Uz_K"><span class="token-line" style="color:#393A34"><span class="token plain">help</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? - print this help</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">abort - abort resolve</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">check - check repository</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">clone - clone the current repository</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">help - print this help</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">httpget - http get command</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[...]</span><br></span></code></pre><div class="buttonGroup_Aaa5"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rNxk" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_8vl6"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_uXRx"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>“BitKeeper 伺服器居然这么好心，列出所有指令。”<br>
<!-- -->“所以 clone 应该就是下载仓储用的指令吧？”</p>
<p>他接著输入 clone，发现输出仅是一连串 SCCS 格式的档案。至此，“反向工程”的工作已大功告成，剩下的只是把程式写出来。</p>
<p>不知 Linus 是从何得知 Tridge 在干的事，或许是 Tridge 自己私下告诉他的。总之，Linus 得知后就将这件事告诉他的好朋友 Larry。Larry 听到后无法接受，因为一个免费的第三方客户端会毁了 BitKeeper 的商业模式，于是 Larry 连手 Linus 和时任 OSDL（即现在的 Linux 基金会）执行长的 Stuart Cohen，要求 Tridge 停手。</p>
<p>Stuart Cohen 选择冷处理，觉得这不关 OSDL 的事。但 Linus 非常不想失去 BitKeeper，所以很努力地居中调解，试著找到出双方都能接受的折衷方案。Tridge 坚定地认为他没错，他甚至认为有一个第三方客户端对 BitKeeper 和 Kernel 开发者们是双赢 。他在 2005 年 4 月在 Freshmeat（后来并到 SourceForge）发布 <a href="https://sourceforge.net/projects/sourcepuller/" target="_blank" rel="noopener noreferrer">SourcePuller</a>，里面的 README 文件写道：</p>
<blockquote>
<p>有一个开源的客户端本应是一大进步，BitMover 可以在商业环境继续成长，自由软体社群也能使用并从中受益。</p>
<p>BitMover 有权为 BitKeeper 制定使用规范。当然，BitMover 这样描绘我，我很失望。但请理解他们承受了很大的压力，而在压力大的情况下，人们会说错话。</p>
</blockquote>
<p>Larry 不认同这会是双赢，支持 Kernel 的开发是要成本的，没收钱的就算了，还可能会违害到既有的商业模式，所以为了维护 BitMover 的生计，他选择撤下 BitKeeper 的免费使用执照。</p>
<p>Linus 交涉了几个礼拜，也不想再当和事佬了。这下没有免费的 BitKeeper 可以用，Linus 怒了，他公开在<a href="https://www.realworldtech.com/forum/?threadid=49168&amp;curpostid=49169" target="_blank" rel="noopener noreferrer">论譠</a>上责备 Tridge，说他“破坏别人的创新”、“恶搞别人”。当然，Linus 大可付钱，但他没办法要求其他 Kernel 开发者也付钱使用 BitKeeper，所以他必须另辟途径。贴文中他写道：</p>
<blockquote>
<p>现在，我得收拾善后。因为最好的版控工具不能用了，我会自己写一个给 Kernel 用。但没关系──我自己的问题，我自己解决，谢谢你了（Tridge）。</p>
</blockquote>
<p>2005 年 4 月 6 日，Linus 在邮件列表上<a href="https://lkml.iu.edu/hypermail/linux/kernel/0504.0/1540.html" target="_blank" rel="noopener noreferrer">宣布</a> Linux Kernel 与 BitKeeper 要分手的消息。他首先感谢 Larry 和他团队这三年来的帮助。接著他说他会离线一个礼拜，找出一个替代方案。最后他提到：</p>
<blockquote>
<p>用不著跟我说 subversion 了，如果你真的想给建议，去看看 monotone，它应该是最可行的替代方案。</p>
</blockquote>
<h2 class="anchor anchorWithStickyNavbar_jpdk" id="monotone">Monotone<a href="https://blog.wlgs.site/blog/git-story#monotone" class="hash-link" aria-label="Monotone的直接链接" title="Monotone的直接链接">​</a></h2>
<p>Monotone 的原作者是 Graydon Hoare。2001 年，住在加拿大的 Graydon 和他澳洲朋友为了让跨时区合作更容易一些，他们打造了一个类似现在的持续整合（CI）系统（当时 CI 还不是显学），确保程式码无时无刻都通过测试。</p>
<p>2002 年，Graydon 开始对版本控管结合 CI 产生兴趣，当时他找到只有 <a href="https://aegis.sourceforge.net/" target="_blank" rel="noopener noreferrer">Aegis</a> 有这样的概念。同时，Graydon 又看到朋友使用 BitKeeper，他想到 Aegis 结合分散式版控应该是不错的机会，Monotone 就此应运而生。</p>
<p>值得一提，Graydon 后来加入 Mozilla，并创造了 Rust 程式语言。</p>
<p>好巧不巧，<a href="https://lwn.net/Articles/132000/#:~:text=linus%20just%20picked%20a%20bad%20time." target="_blank" rel="noopener noreferrer">Linus 挑了一个坏的时机点</a>来把玩 Monotone。原本 Monotone 0.7 性能还算快，但自 0.14 开始，Monotone 的开发者开始加入许多验证机制。就在 Linus 下载 Monotone 前，原作者 Graydon 发布 0.17 后就跑出度假了，里头加了一堆严谨的检查程式码，以确保资料写入资料库前是正确的，但这些程式码尚未优化，反而拖慢了性能。在 0.17 的发布纪录<a href="https://github.com/graydon/monotone/blob/75ec703df3612b538d55a0f708935358863b7438/NEWS#L2221-L2222" target="_blank" rel="noopener noreferrer">提到</a>：</p>
<blockquote>
<p>pull 命令可能会非常慢，而且占用很多 CPU</p>
</blockquote>
<p>有人测试用 Monotone 下载它自己，竟然花了两小时，其中 71 分钟是 CPU 时间。“没有腿的树懒可能都比它快。”那位人士如此<a href="https://lkml.iu.edu/hypermail/linux/kernel/0504.0/2017.html" target="_blank" rel="noopener noreferrer">形容</a>。</p>
<p>Linus 向 Monotone 的开发者回报性能问题。2005 年 4 月 10 日，Monotone 0.18 释出，许多操作都至少快了一倍。虽然 Linus 也名列在 0.18 的<a href="https://github.com/graydon/monotone/blob/75ec703df3612b538d55a0f708935358863b7438/NEWS#L2161-L2162" target="_blank" rel="noopener noreferrer">贡献名单</a>中，但根据 Monotone 开发者之一 Nathaniel Smith 的<a href="https://bramcohen.livejournal.com/17319.html?thread=151719#t151719" target="_blank" rel="noopener noreferrer">说法</a>：</p>
<blockquote>
<p>Linus 其实没有对 Monotone 贡献过任何程式码，或者据我所知，他也没有对 git 以外的任何版控软体贡献过程式码。除了“这太慢了！”之外，他也没有提出什么实质建议 ;-)。他之所以名列为贡献者，是因为在与他的讨论中，我找到了一个测试案例，追踪到一个重大性能瓶颈。我曾犹豫是否应该把他的名字列上去，因为这可能会让人产生奇怪的想法，但我想，如果是其他人我也会这么做，所以⋯⋯（耸肩）。</p>
</blockquote>
<p>与此同时，受到 Monotone 的设计启发，Linus 也从零开始，开始著手写了一些 C 程式码。</p>
<h2 class="anchor anchorWithStickyNavbar_jpdk" id="git-v001-初探">Git v0.01 初探<a href="https://blog.wlgs.site/blog/git-story#git-v001-%E5%88%9D%E6%8E%A2" class="hash-link" aria-label="Git v0.01 初探的直接链接" title="Git v0.01 初探的直接链接">​</a></h2>
<p>2005 年 4 月 7 日，Linus 上传了一个名叫 Git 的东西，他在邮件列表<a href="https://lkml.iu.edu/hypermail/linux/kernel/0504.0/2022.html" target="_blank" rel="noopener noreferrer">写道</a>：</p>
<blockquote>
<p>这边有一个小小的挑战要给疯狂的骇客们，如果你有想玩玩看很乱（但<strong>非常</strong>快）的东西，看一下 kernel.org:/pub/linux/kernel/people/torvalds/</p>
<p>第一个将 sparse-git 的变更纪录树寄给我的，将会得到一个金色星星和公开表扬，我在里头放了很多线索。</p>
</blockquote>
<p>这是 Linus 第一次在公开场合提到 Git。</p>
<p><a href="https://web.archive.org/web/20050410050628/http://kernel.org/pub/linux/kernel/people/torvalds/" target="_blank" rel="noopener noreferrer">该网址</a>有以下档案和目录：</p>
<div class="codeBlockContainer_rxDN theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_e6Y8"><pre tabindex="0" class="prism-code language-text codeBlock_eEse thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_Uz_K"><span class="token-line" style="color:#393A34"><span class="token plain">git.git/                  09-Apr-2005 16:09    -</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sparse.git/               07-Apr-2005 20:07    -</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">git-0.01.tar.bz2          07-Apr-2005 14:25   39K</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">git-0.01.tar.bz2.sign     07-Apr-2005 14:25  248</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">git-0.01.tar.gz           07-Apr-2005 14:25   40K</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sparse-git.tar.bz2        08-Apr-2005 17:26   15M</span><br></span></code></pre><div class="buttonGroup_Aaa5"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rNxk" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_8vl6"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_uXRx"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><code>git-0.01.tar.bz2</code> 里的 C 程式码加起来大约 1000 行：</p>
<div class="codeBlockContainer_rxDN theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_e6Y8"><pre tabindex="0" class="prism-code language-text codeBlock_eEse thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_Uz_K"><span class="token-line" style="color:#393A34"><span class="token plain">---------------------------------------------------------------------</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">File                             blank        comment           code</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">---------------------------------------------------------------------</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">./read-cache.c                      31             14            219</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">./update-cache.c                    32             23            198</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">./commit-tree.c                     23             26            128</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">./show-diff.c                        8              5             73</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">./cache.h                           17             23             53</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">./write-tree.c                      11              7             53</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">./read-tree.c                        4              5             39</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">./init-db.c                          4             14             38</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">./Makefile                          14              0             26</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">./cat-file.c                         2              5             21</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">---------------------------------------------------------------------</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">SUM:                               146            122            848</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">---------------------------------------------------------------------</span><br></span></code></pre><div class="buttonGroup_Aaa5"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rNxk" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_8vl6"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_uXRx"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>有别于现在的 Git 有一个单一执行档 <code>git</code>，Linus 最早上传的 Git ，编译后会产生七个独立执行档：</p>
<ul>
<li><code>init-db</code></li>
<li><code>update-cache</code></li>
<li><code>show-diff</code></li>
<li><code>write-tree</code></li>
<li><code>read-tree</code></li>
<li><code>commit-tree</code></li>
<li><code>cat-file</code></li>
</ul>
<p><code>init-db</code> 做的事情很单纯，它会在当前目录下建立一个名为 <code>.dircache/objects</code> 的目录，然后在 <code>.dircache/objects</code> 里，再建立 256 个以十六进位数字编号的子目录，依序为 <code>00</code>, <code>01</code>, <code>02</code>, …, <code>0f</code>, <code>10</code>, …, <code>ff</code>。</p>
<p><code>.dircache/objects</code> 目录代表著一个物件资料库，物件的种类有：</p>
<ul>
<li>二进位资料（blob）──即档案内容。</li>
<li>树（tree）──即目录，本质上是一些档案（二进位资料）和目录（树）的名称。</li>
<li>变更集（changeset）──由两棵树的名称定义而成，意义上代表的是 A 树变更成为了 B 树。“变更集”是 Git 早期的用词，之后成为“提交”（commit）。</li>
</ul>
<p>这里物件的名称不是档名或目录名，而是物件内容压缩后的 SHA-1 杂凑。这个设计是 Linus 从 Monotone 学来的，差别在于 Monotone 底层使用 SQLite 储存 SHA-1 物件名称和内容，而 Linus 选择直接使用系统呼叫和档案系统。</p>
<p>SHA-1 几乎具有唯一性，因此我们可以假设 Git 资料库中<strong>不会</strong>有两个不同名、但相同内容的物件。假如有个物件的名称是 <code>ba93e701c0fe6dcd181377068f6b3923babdc150</code>，Git 就会将它储存在 <code>.dircache/objects/ba/</code> 目录下，一个名为 <code>93e701c0fe6dcd181377068f6b3923babdc150</code> 的档案。</p>
<p>这七个执行档就是以这个“内容可定址”（content-addressable）档案系统为中心的七种操作。例如：</p>
<ul>
<li><code>write-tree</code> 建立一个树物件，即将某个时间点树的样子写到资料库。</li>
<li><code>commit-tree</code> 建立一个变更集，即在资料库中连结两棵树，类似现今的 <code>git commit</code> 命令。</li>
<li><code>update-cache</code> 加一个档案到 <code>.dircache/index</code> 索引中，类似现今 <code>git add</code> 将档案加到预存区（staging area）。</li>
</ul>
<p>Linus 当时看到 Monotone 是如何利用 SHA-1 为物件命名，就立刻爱上这个点子，原因无他，就是“简单”二字。“简单”也是 Linus 欣赏 Unix 的原因。在《只是为了好玩》一书，他这么形容 Unix：</p>
<blockquote>
<p>Unix 让我（和大多数人）著迷的地方，就是它简单的设计。在 Unix 中，几乎所有事都可以用六个基本操作（称为“系统呼叫”）来完成。</p>
<p>它给你几种不同形状的积木，足以用来建造所有东西，干净的设计就该是这个样子。</p>
</blockquote>
<p>Git 也是如此，它的资料模型比 CSV、Subversion、BitKeeper 都要简单。它储存的东西基本上就是改变前和改变后的树，如此而已。它没有在管哪个档案、在哪一行做了什么改变，它也不需要，因为改变前后的树就埋有这些资讯。</p>
<p>Linus 用两天写出来的 Git 原型，功能简单，没有多馀的验证，没有关联式资料库，只有 C 程式码、SHA-1 杂凑、系统呼叫，完全针对 Linus 自己的需求订制。而 Monotone 专案当时迈入第三年，功能完善，还要应付各种场合需求。再加上 Monotone 原作者 Graydon 加了一堆未优化的程式码后跑去度假，家里没大人。因此在速度上，Monotone 当时自然是比不过 Git 。</p>
<p>Linus 当初上传的档案 <code>sparse-git.tar.bz2</code>，应该是史上第一个 Git 仓储。<a href="https://sparse.docs.kernel.org/en/latest/" target="_blank" rel="noopener noreferrer">Sparse</a> 是 Linus 于 2003 年写的一个 C 语言的静态分析器。如果你还对 Linus 出的挑战题有兴趣，<code>sparse-git.tar.bz2</code> 解压缩后稍微修改就可以用现今的 <code>git log</code> 命令去读取变更纪录：</p>
<div class="codeBlockContainer_rxDN theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_e6Y8"><pre tabindex="0" class="prism-code language-text codeBlock_eEse thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_Uz_K"><span class="token-line" style="color:#393A34"><span class="token plain"># 假设你在 sparse-git 目录下</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mv .dircache .git</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mkdir .git/refs</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">git log</span><br></span></code></pre><div class="buttonGroup_Aaa5"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rNxk" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_8vl6"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_uXRx"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_jpdk" id="git-早期贡献者">Git 早期贡献者<a href="https://blog.wlgs.site/blog/git-story#git-%E6%97%A9%E6%9C%9F%E8%B4%A1%E7%8C%AE%E8%80%85" class="hash-link" aria-label="Git 早期贡献者的直接链接" title="Git 早期贡献者的直接链接">​</a></h2>
<p>初版 Git 引来热烈讨论，过没几天，Linus 就开设了 Git 专用的邮件列表，这让 Linux Kernel 邮件列表能够稍微回归正题。头一个月，Git 邮件列表就出现了约 2600 则讯息，而 Linux Kernel，史上合作人数最多的软体专案，同期每月有 7000-9000 则讯息。</p>
<p>对在版本控管领域耕耘已久的专家们来说，Git 只是“另一个专案”，因为 Linus 最初上传的 Git 只有一些低阶操作，连 clone 和 merge 的命令都没有，离真正可用的版控软体还差得远。而 Linus 在说 Git 多快多棒时，无意间贬低了其他版控软体，这让以 BitTorrent 闻名的 Bram Cohen 很不满意，<a href="https://lore.kernel.org/git/Pine.LNX.4.44.0504261301520.4678-100000@wax.eds.org/" target="_blank" rel="noopener noreferrer">杠上 Linus</a>。</p>
<p>Bram 当时正在推广他自己的同类产品 Codeville。Codeville 在当时已经是个成熟的版控软体，媲美 Monotone，并且内建十分聪明的合并演算法。看到 Linus 如何与 Git 的早期追随者讨论合并演算法，Bram 觉得 Linus 根本就是门外汉在重造轮子，称 Git 只是个“<a href="https://bramcohen.livejournal.com/17319.html?thread=151207#t151207:~:text=Git%20is%20a-,weekend%20hack,-which%20looks%20like" target="_blank" rel="noopener noreferrer">周末小专案</a>”。</p>
<p>Bram 说的有道理，但这个小专案不是一般人的小专案，它是 Linus Torvalds，Linux Kernel 创始人的小专案。身为开源软体界的民间英雄，Linus 的一举一动都是万众瞩目，年轻开发者景仰他，视他为榜样。因此在 Linus 上传 Git 后，随即吸引到一群新血参与讨论和开发。</p>
<p>其中一个早期贡献者是来自捷克的 Petr Baudis。Linus 宣布 Git 的消息当天，Petr 就下载了程式码，为之著迷，并开始贡献。首先，鉴于早期的 Git 很难用，Petr 在 Git 的基础上开发了 git-pasky（pasky 是 Petr 的别名），这个专案后来成为 <a href="https://en.wikipedia.org/wiki/Cogito_(software)" target="_blank" rel="noopener noreferrer">Cogito</a>。如果将 Git 的基础是水管工程（plumbing），Cogito 就是陶瓷（porcelain）马桶和洗手台，它将 Git 包装得更容易使用。</p>
<p>在软体开发用语中，将低阶基础建设比喻成水管工程的用法已不可考，但“陶瓷”一词用来指高阶的包装工作最早起源自 <a href="https://lore.kernel.org/git/4262938E.8010107@timesys.com/" target="_blank" rel="noopener noreferrer">Git 邮件列表</a>。至今，Git 内部仍使用 <a href="https://git-scm.com/book/fa/v2/Git-Internals-Plumbing-and-Porcelain" target="_blank" rel="noopener noreferrer">plumbing 和 porcelain</a> 二词来称呼低阶和高阶命令。</p>
<p>此外，Petr 还架设了 Git 第一个专案首页 git.or.cz，以及源码托管服务 repo.or.cz。这两个网址一直算是 Git 的“官方”网站──直到 GitHub 取代了它们。</p>
<p>Petr 是从外部贡献，在 Git 基础之上向上堆叠，向外架设服务。另一个早期贡献者，滨野纯（Junio Hamano）则是从内部切入，直接贡献 Git 本身。后来他是更从 Linus 手上接下 Git 维护人的工作，直到今天。</p>
<h2 class="anchor anchorWithStickyNavbar_jpdk" id="接班人">接班人<a href="https://blog.wlgs.site/blog/git-story#%E6%8E%A5%E7%8F%AD%E4%BA%BA" class="hash-link" aria-label="接班人的直接链接" title="接班人的直接链接">​</a></h2>
<p>滨野纯（Junio Hamano）是一个来自日本的软体工程师。大概是 1995 年，毕业后工作不到一年，他就被他任职的公司 Twin Sun 派到洛杉矶，从此在美国定居。在那里，他遇到了当时也在同公司工作的 Paul Eggert。</p>
<p>Paul Eggert 维护过许多自由或开源软体专案，包括 RCS（一个更早的版控软体）和 Tar。目前，他是 UCLA 大学的教授，也是<a href="https://zh.wikipedia.org/zh-tw/%E6%97%B6%E5%8C%BA%E4%BF%A1%E6%81%AF%E6%95%B0%E6%8D%AE%E5%BA%93" target="_blank" rel="noopener noreferrer">时区资讯资料库</a>的维护人。</p>
<p>滨野纯受到 Paul 的影响，对开源软体的世界产生兴趣。尽管他并非 Kernel 开发者，他仍订阅了 Linux Kernel 等开源专案的邮件列表，纯粹<strong>因为好玩</strong>。</p>
<p>2005 年 4 月，滨野纯在邮件列表上看到 Linux Kernel 与 BitKeeper 要分手的消息。滨野纯一直想要在开源软体界大展身手，而这个叫做 Git 的东西便是个好机会──全新专案，没有历史包袱，好上手。他下载了压缩档，花了约两个小时，一口气读完 Git 初代程式码，发现写得很漂亮，感到由衷佩服。</p>
<p>初版 Git 出现后，Linus 马上又加入了提交（commit）和检视差异（diff）的命令，但还没有合并（merge）的功能。</p>
<p>Linus 之前没有写过版控软体，但他用过三年的 BitKeeper，在那之前，他更有十年“版控人体”的经验，他知道自己想要的合并演算法应该长什么样。但合并的逻辑较为复杂，Linus 觉得可能使用脚本语言会比较合适，他<a href="https://lore.kernel.org/git/Pine.LNX.4.58.0504132020550.7211@ppc970.osdl.org/" target="_blank" rel="noopener noreferrer">写道</a>：</p>
<blockquote>
<p>我一直在避免做 merge-tree，因为我希望有其他人来做我所描述的。我不擅长写脚本语言，这东西用 C 语言来写会很冗长，所以没意义。</p>
</blockquote>
<p>过了一星期，谁也没上钩。滨野纯刚好正值两个专案的空窗期，有多馀时间，于是他用 Perl 把 Linus 想要的东西写出来，<a href="https://lore.kernel.org/git/7vfyxtsurd.fsf@assigned-by-dhcp.cox.net/" target="_blank" rel="noopener noreferrer">发布</a>到邮件列表上。</p>
<blockquote>
<p>我现在有一个 Perl 脚本利用了 rev-tree、cat-file、⋯⋯还有 merge（从 RCS 来的），又快又脏。</p>
</blockquote>
<p>滨野纯大概从他的导师 Paul 那边有学到一些 RCS 的知识，对版控软体略懂。在邮件中，他还详细写了大约 30 个测试用例，涵盖各种分支情况。</p>
<p>当时已是深夜一点，而小孩早上七点起床，所以 Linus 平常十点就睡了。但看到滨野纯的 Perl 脚本，Linus 龙心大悦，忍不住<a href="https://lore.kernel.org/git/Pine.LNX.4.58.0504140051550.7211@ppc970.osdl.org/" target="_blank" rel="noopener noreferrer">回复</a>：</p>
<blockquote>
<p>这就是我想要的，“又快又脏”才会让事情有进展。</p>
</blockquote>
<p>他热切地继续与滨野纯讨论。</p>
<p>“<a href="https://lore.kernel.org/git/20050414002902.GU25711@pasky.ji.cz/" target="_blank" rel="noopener noreferrer">和 git-pasky 合并 II</a>”这个讨论串原本是 Petr 问 Linus 要不要合并他的版本，后来离题变成讨论合并演算法，其间 Linus 也向众人解译为什么 Git 底层不需要处理档案改名。</p>
<p>从 4 月 14 日半夜的往后 48 小时，滨野纯与 Linus 在该讨论串上通了十几封信。滨野纯耐心的修改程式码，要做到 Linus 心目中的合并。字里行间不难发现滨野纯是 Linus 的忠实粉丝。例如，滨野纯会引用 Linus 四年前说过的金句“<a href="https://lore.kernel.org/git/7vwtr4ibkt.fsf@assigned-by-dhcp.cox.net/#:~:text=Linus%20is%0Aalways%20right" target="_blank" rel="noopener noreferrer">我永远是对</a>”，也会适度地拍 Linus 的马屁。</p>
<p>在 4 月 16 日半夜，Linus 突然灵机一动，说他想到一个“<a href="https://lore.kernel.org/git/Pine.LNX.4.58.0504152256520.7211@ppc970.osdl.org/#:~:text=my%20cunning%20plan%20is%20some%20good%20stuff" target="_blank" rel="noopener noreferrer">狡滑的计划</a>”。</p>
<blockquote>
<p>该死，我的狡滑计划真是好东西。</p>
<p>或者也许因为它<strong>太</strong>狡猾了，连我自己都感到困惑。但看起来它确实有效，而且几乎能瞬间完成合并。</p>
</blockquote>
<p>Linus 巧妙的重用既有的索引，在其上引入了“阶段”的概念，大幅简化合并演算法的实作。</p>
<p>看到 Linus 的解法，滨野纯<a href="https://lore.kernel.org/git/7vis2ncf8j.fsf@assigned-by-dhcp.cox.net/" target="_blank" rel="noopener noreferrer">赞叹</a>：</p>
<blockquote>
<p>我很喜欢这个解法，它<strong>非常</strong>简单、干净、灵活，而且优雅。这是那种我会心甘情愿地说“天啊！为什么我之前没想到！！！”的东西。</p>
</blockquote>
<p>这意味著滨野纯之前写的 Perl 程式码将沦为白工，但新的解法实在太漂亮，滨野纯心服口服。</p>
<p>合并演算法只是个开端，之后滨野纯陆续向 Linus 贡献更多修补，逐渐赢得 Linus 的信任。</p>
<p>Linus 曾说过他不会长期维护 Git，等到时机成熟，他会将 Git 交给别人，然后回去做他的 Linux Kernel 本业。滨野纯是最明显的人选，Linus 欣赏他写程式的“好品味”。于是，三个多月后，7 月 26 日，Linus <a href="https://lore.kernel.org/git/Pine.LNX.4.58.0507262004320.3227@g5.osdl.org/T/#u" target="_blank" rel="noopener noreferrer">宣布</a>将 Git 维护人的工作交棒给滨野纯。</p>
<p>滨野纯也贴了一篇公告：</p>
<blockquote>
<p>正如有些人在 Linus 宣布之前似乎已经注意到的那样，kernel.org 上的官方 GIT 仓储现在由我拥有。如同 Linus 在他的讯息中所说，这并不意味著他要离开我们，所以请不要惊慌。</p>
<p>我也要感谢 Twin Sun（我的雇主）和 NEC，他们承诺将支持我以兼职方式开发 GIT。我预计每周会有 8 到 12 小时的工作时间，晚间和周末仍然是我的自由时间。我暂定的计划是将星期三和星期六作为主要的 GIT 工作日。</p>
<p>之前，每当想到一个点子，我就把修补丢邮件列表上，看哪个能被接受，完全依赖上游某个有好品味的人来筛选掉不好的。虽然这样和 Linus 一起工作很有趣，但遗憾的是，我浪费了他很多时间。</p>
<p>从今开始，身为“主仓储的牧羊人”，我会放慢速度，变得更加谨慎。至少目前，你会看到我的修补会像其他人一样，在进入主仓储之前，先在邮件列表上发布。</p>
</blockquote>
<p>后来，在滨野纯的带领下，Git 1.0.0 正式在 12 月 21 日释出。<strong>19 年</strong>后的今天（本文发布于 2024 年 7 月），滨野纯任职于谷歌，至今他仍是 Git 的维护人。</p>
<p>本文提及 Linus 的次数比滨野纯多，不过 Git 之所以是现在的样子，最大功臣还是默默耕耘多年的滨野纯和其他开发者。“1% 的天分加上 99% 的努力”或许是老梗，但在 Git 与 Linux Kernel 等成功专案里都是事实。</p>
<h2 class="anchor anchorWithStickyNavbar_jpdk" id="github-与-ruby-人">GitHub 与 Ruby 人<a href="https://blog.wlgs.site/blog/git-story#github-%E4%B8%8E-ruby-%E4%BA%BA" class="hash-link" aria-label="GitHub 与 Ruby 人的直接链接" title="GitHub 与 Ruby 人的直接链接">​</a></h2>
<p>虽然 Git 在早期引来不少关注，但仍是小众。2006 年 1 月，X Window System 团队放弃 CVS，改用 Git，滨野纯<a href="https://lore.kernel.org/git/7vzmlgt5zt.fsf@assigned-by-dhcp.cox.net/" target="_blank" rel="noopener noreferrer">得知</a>后还感到很惊喜，他没料到像 X Window System 这像的大专案会愿意大费周章转换版控系统。</p>
<p>自 BitKeeper 之后，分散式版管系统如雨后春笋般冒出，除了 Monotone 之外，还有 Mercurial、Darcs、Bazaar、Arch、Fossil 等。声势最不容小覻的是 Mercurial，作者 Olivia Mackall 晚了 Git 几天发布它，但功能已比当时的 Git 完整，而且更为使用者友善，之后更有 Google Code 和 BitBucket 的背书。总之，版控市场犹如战国时代，每家都占有一席之地。</p>
<p>真正把 Git 推上巅峰、变成主流的是 GitHub。或者根据 Linus 所述，是 Ruby 人，<a href="https://www.youtube.com/watch?v=0m4hlWx7oRk&amp;t=1080s" target="_blank" rel="noopener noreferrer">一群奇怪的人</a>，让 Git 一夕爆红。</p>
<p>2007 年 2 月，Git 1.5 释出，Git 总算变得好用一点。当时在旧金山的 Ruby 聚会口耳相传著 Git 这个“新”东西。而 GitHub 的共同创办人 Tom Preston-Werner，最早是从他的同事 Dave Fayram 听到 Git。Tom 认为 Dave 是在 Ruby 社群传播 Git 的“<a href="https://tom.preston-werner.com/2011/03/29/ten-lessons-from-githubs-first-year#:~:text=I%20can%20calculate%2C-,patient%20zero,-for%20the%20spread" target="_blank" rel="noopener noreferrer">零号病人</a>”。</p>
<p>尽管在 Ruby 社群中 Git 广受好评，但当时唯一一家 Git 托管服务是 Petr Baudis 的 repo.or.cz，它功能阳春。例如，你的程式码在上面只能公开，没有私人仓储的选项。Tom 觉得其中大有商机。</p>
<p>2007 年，社群媒体当道，Facebook、YouTube、Twitter 都先红了一波。Tom 萌生了一个名叫 GitHub 的点子：一个给程式设计师用的社群媒体，一个让程式设计师分享 Git 仓储，交流意见的集散地（hub）。</p>
<p>2007 年 10 月某天，Tom 在一间旧金山的运动酒吧遇到 Chris Wanstrath。他们之前在 Ruby 聚会上认识，但不算熟识。Tom 主动向 Chris 打了招呼，他们聊了起来，Tom 谈起 GitHub 这个点子。Chris 听到后觉得有趣，就同意加入了。</p>
<p>当时 Tom 和 Chris 都还有正职工作，所以他们每晚和星期六用来开发 GitHub。Tom 设计介面，并使用一个名为 Grit 的 Ruby 套件来操作 Git 仓储；Chris 则使用 Ruby on Rails 开发网站。</p>
<p>三个月后，他们开始发送邀请给朋友们试用 GitHub。2008 年 2 月，第三个共同创办人 PJ Hyett 加入。4 月 10 日，GitHub 正式开站，它的副标题是 Social Code Hosting。</p>
<p><img decoding="async" loading="lazy" src="https://blog.brachiosoft.com/posts/git//github.png" alt="GitHub，2008 年 8 月" class="img_aT2B"></p>
<p>GitHub，2008 年 8 月</p>
<p>Ruby 的杀手级应用 Rails，在 GitHub 开站前夕就从 Subversion 移到了 GitHub，这无疑是帮 Git 在 Ruby 社群注入更大量的强心针。因为当时在写 Ruby 的人，八成都是在开发 Rails 应用。看到自己赖以为生的框架也用 GitHub ，更多 Ruby 人也欣然跟随。</p>
<h2 class="anchor anchorWithStickyNavbar_jpdk" id="git-与-github-有冲突的合并">Git 与 GitHub 有冲突的合并<a href="https://blog.wlgs.site/blog/git-story#git-%E4%B8%8E-github-%E6%9C%89%E5%86%B2%E7%AA%81%E7%9A%84%E5%90%88%E5%B9%B6" class="hash-link" aria-label="Git 与 GitHub 有冲突的合并的直接链接" title="Git 与 GitHub 有冲突的合并的直接链接">​</a></h2>
<p>Scott Chacon 不是一个寻常的 Git + Ruby 人，除了写 Ruby 程式外，他还是一个出色的讲师／写手／传道者。他会录制影片、写文件，教大家怎么使用 Git。不只如此，他对 Git 内部运作也有深入研究，曾经写过《Git Internals》这本电子书。</p>
<p>三年来，Git 的“官方”首页一直是 Petr Baudis 在 2005 年架设的 git.or.cz，而 Scott 想设计一个更为新手友善的 Git 首页。2008 年 7 月，他将 git.or.cz 上的内容整理过后，开设了一个新的首页 <a href="https://git-scm.com/" target="_blank" rel="noopener noreferrer">git-scm.com</a>，并在 Git 邮件列表上<a href="https://lore.kernel.org/git/d411cc4a0807251035i7aed2ec9wef7e8f1b3ae4c585@mail.gmail.com/" target="_blank" rel="noopener noreferrer">询问</a> Git 核心开发成员（尤其是 Petr）的意见。</p>
<p>Git 在 Ruby 社群里虽然已流行了一阵子，但 Git 邮件列表上却鲜少出现 Ruby 人的踪迹。Git 核心开发成员，大部分是资深的 C 程式设计师，出没在邮件列表；而 Ruby 人，大部分是年轻一代的网页开发者，出没在实体聚会、网页式的论譠及 GitHub，搞不好一辈子都没用过邮件列表。两个族群互不来往，而 Scott 在 Git 邮件列表上那篇关于 git-scm.com 的讯息，是两个族群早期的少数几次接触之一。</p>
<p>另一个让 Git 核心成员伤脑筋的地方是 Tom 未经讨论，擅自用 Erlang 客制 Git Daemon，以满足 GitHub 单方面的需求。这是因为第一，Tom 对 C 语言不熟；第二，在邮件列表张贴讯息是一件吓人的事，列表上都是比你聪明的人，如果你写的东西没好好断行，就会看起来像个白痴。这过程实在太缓慢了，Tom 才会自己来。</p>
<p>git-scm.com 上有一个“托管由 GitHub 赞助”的标语，于是就有人质疑 Scott 背后的动机不单纯，也有人借此表达 GitHub 用 Git 赚钱，Git 核心开发者却分不到一杯羹的不满。但整体来说，正面回应居多，最终 git-scm.com 成为 Git 的官方首页，git.or.cz 功成身退。</p>
<p>Tom 是在某次 Ruby 聚会认识 Scott 的，当时 Tom <a href="https://tom.preston-werner.com/2011/03/29/ten-lessons-from-githubs-first-year#:~:text=he%20could%20become%20either%20a%20powerful%20ally%20or%20a%20dangerous%20foe" target="_blank" rel="noopener noreferrer">心想</a>：“这家伙未来不是强大的盟友，就是危险的对手。”2008 年 10 月，Scott 加入 GitHub，继续他的 Git 传道之路。他写更多文件，提供顾问服务，到其他公司教大家使用 Git。他还写了一本书《Pro Git》，为 Git 官方推荐书。GitHub 的大外宣策略骤效了，它成功将 Git 发扬光大到 Ruby 以外的社群，GitHub 自己就是最大受惠者。</p>
<p>2008 年 10 月，谷歌赞助了第一届 GitTogether 会议，Git 和 GitHub 两组人马 20 馀人齐聚在谷歌总部山景城。他们放下之前的成见，因为他们很清楚，合作才会让彼此变得更强大。</p>
<p><img decoding="async" loading="lazy" src="https://blog.brachiosoft.com/posts/git//gittogether.jpg" alt="GitTogether 2008" class="img_aT2B"></p>
<p>GitTogether 2008</p>
<h2 class="anchor anchorWithStickyNavbar_jpdk" id="后记">后记<a href="https://blog.wlgs.site/blog/git-story#%E5%90%8E%E8%AE%B0" class="hash-link" aria-label="后记的直接链接" title="后记的直接链接">​</a></h2>
<p>无法与 Git 和 GitHub 竞争，BitKeeper 后来被迫退出市场，它的团队在 2016 年将其程式码开源。这个祖父级的版控软体，曾经是 Git、Mercurial、Monotone 等软体的灵感来源，如今成了历史文物，供人观赏与研究。被问到有何感想，Larry McVoy 这么<a href="https://news.ycombinator.com/item?id=26205688" target="_blank" rel="noopener noreferrer">回应</a>：</p>
<blockquote>
<p>事后诸葛亮最简单了。BitKeeper 的生意经营得很好，我们运营了 18 年，赚的钱足够让我和我的商业伙伴退休，不过还不够让每个人都可以选择退休。</p>
<p>我们曾经有一个类似 github 的服务，现在看来我们应该投入大量资金到那个服务，然后开源 BitKeeper。</p>
<p>我只能说，当你已经有一个金鸡母，要割舍它是很困难的。</p>
<p>早知道、早该、早会，我最大的遗憾不是钱，而是 Git 是个糟糕的版本控管系统。它让我抓狂的是，它的模型只是个压缩档伺服器。甚至 Linus 也曾向我承认这个设计很烂。它满足了 Linus 的需求，但他的需求不代表这是这个世界所需要的。</p>
</blockquote>
<p>现在，Larry 享受他的退休生活，他平时喜欢和他的孩子们出海钓鱼。</p>
<p>Stack Overflow 在 2022 的<a href="https://survey.stackoverflow.co/2022#section-version-control-version-control-systems" target="_blank" rel="noopener noreferrer">调查</a>中，Git 市占率高达 94%，以至于隔年 Stack Overflow 干脆放弃问大家用什么版控系统。</p>
<p>历史上从来没有一个版控软体能如此称霸市场，下一个能取代 Git 的会是什么？不少人说可能会与 AI 有关，但没人说得准，不过可以确信的是，过程中一定会有一连串的偶发事件和一群杰出的骇客。</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[回乡过年：十点观察与感悟]]></title>
            <link>https://blog.wlgs.site/blog/2025/hxgn</link>
            <guid>https://blog.wlgs.site/blog/2025/hxgn</guid>
            <pubDate>Wed, 01 Jan 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[我的家乡是水浒故里，八百里水泊梁山水域部分就在我们那儿。]]></description>
            <content:encoded><![CDATA[<p>我的家乡是水浒故里，八百里水泊梁山水域部分就在我们那儿。</p>
<p>曾经风靡一时的大中华区奥迪村事件就发生在我们镇，用不太恰当但又很贴切的话形容，这里 “江湖气很重”。</p>
<p>就像李雪健老师经典台词说的：“江湖不是打打杀杀，江湖是人情世故” 。</p>
<p>所以，下面只是我回村过年时不成熟的观察和感悟，仅代表个人观点，不喜勿喷。</p>
<p><img decoding="async" loading="lazy" src="https://mmbiz.qpic.cn/sz_mmbiz_jpg/mjl8GCpsL9bBgnLHAwhBWxlGMDq87NjCBeTBF3suZaAfVpx6ibhZnY3qtAuh2WiahNbXyQzGFiaUHZaaD7kjZUYNg/640?wx_fmt=jpeg&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" class="img_aT2B"></p>
<p>回村这近 6 天，我有了这些深刻的观察和思考：</p>
<h2 class="anchor anchorWithStickyNavbar_jpdk" id="1没有比健康的长寿更重要的事"><strong>1、没有比健康的长寿更重要的事！</strong><a href="https://blog.wlgs.site/blog/2025/hxgn#1%E6%B2%A1%E6%9C%89%E6%AF%94%E5%81%A5%E5%BA%B7%E7%9A%84%E9%95%BF%E5%AF%BF%E6%9B%B4%E9%87%8D%E8%A6%81%E7%9A%84%E4%BA%8B" class="hash-link" aria-label="1没有比健康的长寿更重要的事的直接链接" title="1没有比健康的长寿更重要的事的直接链接">​</a></h2>
<p>没有什么比健康的长寿更重要的事了。</p>
<p>在生活里，利欲熏心、利益纷争实在没有意义且毫无必要，能健康地晚点进 “盒里” 才是人生真谛。</p>
<p>而且，我的观察——年龄越大，对早年的记忆就越深刻，也越值得回味。</p>
<p>作为晚辈，认真洗耳恭听长辈们的话就是最大的孝顺，对老人而言，陪伴就是最长情的告白。</p>
<h2 class="anchor anchorWithStickyNavbar_jpdk" id="2降低自己的姿态一切皆好办"><strong>2、降低自己的姿态，一切皆好办！</strong><a href="https://blog.wlgs.site/blog/2025/hxgn#2%E9%99%8D%E4%BD%8E%E8%87%AA%E5%B7%B1%E7%9A%84%E5%A7%BF%E6%80%81%E4%B8%80%E5%88%87%E7%9A%86%E5%A5%BD%E5%8A%9E" class="hash-link" aria-label="2降低自己的姿态一切皆好办的直接链接" title="2降低自己的姿态一切皆好办的直接链接">​</a></h2>
<p>降低自己的姿态，很多事情都会好办。</p>
<p>我本身不会抽烟，但兜里总会装着玉溪（在村里貌似算中档烟，村里最好的烟是华子）和打火机。遇到认识的人就递上一支烟并帮忙点上，这种社交礼仪很管用。</p>
<p>它一来代表懂事，二来代表自己是个 “社会人”，三则代表懂得从众。</p>
<p>从众是和大家打成一片的方式，本就没有对错之分。</p>
<h2 class="anchor anchorWithStickyNavbar_jpdk" id="3为什么总是张家长李家短"><strong>3、为什么总是张家长、李家短？</strong><a href="https://blog.wlgs.site/blog/2025/hxgn#3%E4%B8%BA%E4%BB%80%E4%B9%88%E6%80%BB%E6%98%AF%E5%BC%A0%E5%AE%B6%E9%95%BF%E6%9D%8E%E5%AE%B6%E7%9F%AD" class="hash-link" aria-label="3为什么总是张家长李家短的直接链接" title="3为什么总是张家长李家短的直接链接">​</a></h2>
<p>为什么农村总是张家长、李家短的呢？</p>
<p>因为在农村确实没太多事可做，地都承包出去了，我们那儿又没有过年打牌、打麻将的传统。</p>
<p>所以，只有这些家长里短的小事，才成了大家的共同话题，总不能去议论巴以冲突、乌克兰局势吧。</p>
<h2 class="anchor anchorWithStickyNavbar_jpdk" id="4农村人最大的困境在于因为看见所以相信"><strong>4、农村人最大的困境在于：因为看见，所以相信。</strong><a href="https://blog.wlgs.site/blog/2025/hxgn#4%E5%86%9C%E6%9D%91%E4%BA%BA%E6%9C%80%E5%A4%A7%E7%9A%84%E5%9B%B0%E5%A2%83%E5%9C%A8%E4%BA%8E%E5%9B%A0%E4%B8%BA%E7%9C%8B%E8%A7%81%E6%89%80%E4%BB%A5%E7%9B%B8%E4%BF%A1" class="hash-link" aria-label="4农村人最大的困境在于因为看见所以相信的直接链接" title="4农村人最大的困境在于因为看见所以相信的直接链接">​</a></h2>
<p>农村最大的困境在于 “因为看见，所以相信”，存在看车识人的价值观，觉得开什么车就等于有多少钱，不开车就有各种 “一言难尽” 的可能。</p>
<p>农村的困局就在于视野永远局限、“狭隘”。</p>
<p>只有极少数人在意孩子未来的发展和高考分数。</p>
<p>倘若现在还不重视教育，不重视情商、逆商的培养，未来肯定会出大问题。</p>
<p>要打破这种局限，需要自身观念和认知的转变。但实话说，这几乎不可能！</p>
<h2 class="anchor anchorWithStickyNavbar_jpdk" id="5一边把手机丢给孩子一边抱怨孩子不好好学习"><strong>5、一边把手机丢给孩子，一边抱怨孩子不好好学习</strong><a href="https://blog.wlgs.site/blog/2025/hxgn#5%E4%B8%80%E8%BE%B9%E6%8A%8A%E6%89%8B%E6%9C%BA%E4%B8%A2%E7%BB%99%E5%AD%A9%E5%AD%90%E4%B8%80%E8%BE%B9%E6%8A%B1%E6%80%A8%E5%AD%A9%E5%AD%90%E4%B8%8D%E5%A5%BD%E5%A5%BD%E5%AD%A6%E4%B9%A0" class="hash-link" aria-label="5一边把手机丢给孩子一边抱怨孩子不好好学习的直接链接" title="5一边把手机丢给孩子一边抱怨孩子不好好学习的直接链接">​</a></h2>
<p>一边把手机丢给孩子，一边抱怨孩子不好好学习，这是很多农村家庭的现状。</p>
<p>孩子沉迷游戏和视频，问题的根源不在孩子，而在监护人 —— 家长。</p>
<p>自控力和自律的培养，首要责任在于家长。要让孩子不玩手机，家长首先得放下手机。家长可以多陪伴孩子进行户外活动，或者一起阅读，为孩子树立良好的榜样。</p>
<h2 class="anchor anchorWithStickyNavbar_jpdk" id="6所谓丢人是自己把面子看得太重"><strong>6、所谓“丢人”是自己把面子看得太重！</strong><a href="https://blog.wlgs.site/blog/2025/hxgn#6%E6%89%80%E8%B0%93%E4%B8%A2%E4%BA%BA%E6%98%AF%E8%87%AA%E5%B7%B1%E6%8A%8A%E9%9D%A2%E5%AD%90%E7%9C%8B%E5%BE%97%E5%A4%AA%E9%87%8D" class="hash-link" aria-label="6所谓丢人是自己把面子看得太重的直接链接" title="6所谓丢人是自己把面子看得太重的直接链接">​</a></h2>
<p>所谓 “丢人”，不过是自己把面子看得太重。</p>
<p>我这几年深刻认识到，年龄越大，面子越不重要，面子是自己挣的，不是别人给的。</p>
<p>这次我骑三轮走亲戚，挺有挑战性的。</p>
<p><img decoding="async" loading="lazy" src="https://mmbiz.qpic.cn/sz_mmbiz_png/mjl8GCpsL9bBgnLHAwhBWxlGMDq87NjCVics9CTRBjYnbaxG97ykPjyGF0vItyhveKa5QMCcambComABZtbFOUg/640?wx_fmt=png&amp;from=appmsg&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" class="img_aT2B"></p>
<p>我有几年没走亲戚了，没开车回家，走亲戚确实不方便，家里的三轮成了主要交通工具，我几乎成了全村年轻人里骑三轮走亲戚唯一的人。</p>
<p>这让我想起鲁迅先生笔下站着喝酒唯一的孔乙己。</p>
<p>很多同龄返乡的读书人都放不下心里的包袱。</p>
<p>就像我自己心里也会想：</p>
<ul>
<li>邻居怎么看？</li>
<li>村里的人怎么看？</li>
<li>村里开奥迪的初中毕业同学怎么看？</li>
</ul>
<p>但说实话，我们太把自己当回事，太在意别人的观点了，其实除了自己和家人，真的没有人那么在意我们。</p>
<h2 class="anchor anchorWithStickyNavbar_jpdk" id="7你怎么样你观察的世界就怎么样"><strong>7、你怎么样？你观察的世界就怎么样！</strong><a href="https://blog.wlgs.site/blog/2025/hxgn#7%E4%BD%A0%E6%80%8E%E4%B9%88%E6%A0%B7%E4%BD%A0%E8%A7%82%E5%AF%9F%E7%9A%84%E4%B8%96%E7%95%8C%E5%B0%B1%E6%80%8E%E4%B9%88%E6%A0%B7" class="hash-link" aria-label="7你怎么样你观察的世界就怎么样的直接链接" title="7你怎么样你观察的世界就怎么样的直接链接">​</a></h2>
<p>你是什么样，你观察到的世界就是什么样。</p>
<p>经济形势再不好，也总有好的行业和个体。抱怨解决不了任何问题，大过年的也没人喜欢听唠叨。</p>
<p>只要我们自己积极正能量，世界看起来就会正能量很多。</p>
<p>而破局的办法，还得靠自己想。</p>
<h2 class="anchor anchorWithStickyNavbar_jpdk" id="8这个世界盼着你好的只有父母家人"><strong>8、这个世界盼着你好的只有父母、家人</strong><a href="https://blog.wlgs.site/blog/2025/hxgn#8%E8%BF%99%E4%B8%AA%E4%B8%96%E7%95%8C%E7%9B%BC%E7%9D%80%E4%BD%A0%E5%A5%BD%E7%9A%84%E5%8F%AA%E6%9C%89%E7%88%B6%E6%AF%8D%E5%AE%B6%E4%BA%BA" class="hash-link" aria-label="8这个世界盼着你好的只有父母家人的直接链接" title="8这个世界盼着你好的只有父母家人的直接链接">​</a></h2>
<p>这个世界上，真正盼着你好的只有父母和家人。</p>
<p>人走茶凉往往只在一瞬间，我们在谈论别人的同时，别人也在谈论我们。不在意别人的评价，才是更好的活法。</p>
<h2 class="anchor anchorWithStickyNavbar_jpdk" id="9财散人聚财聚人散"><strong>9、财散人聚，财聚人散</strong><a href="https://blog.wlgs.site/blog/2025/hxgn#9%E8%B4%A2%E6%95%A3%E4%BA%BA%E8%81%9A%E8%B4%A2%E8%81%9A%E4%BA%BA%E6%95%A3" class="hash-link" aria-label="9财散人聚财聚人散的直接链接" title="9财散人聚财聚人散的直接链接">​</a></h2>
<p>家家都有本难念的经，除非有刘强东那样的家底，否则亲戚间很难做到全方位帮扶。</p>
<p>我们普通老百姓走亲戚，能做的就是认真聆听，如果条件允许，留下点力所能及的现金，这其实是给予对方更深层次的 “情绪价值”。</p>
<h2 class="anchor anchorWithStickyNavbar_jpdk" id="10上学打工从长计议"><strong>10、上学？打工？从长计议</strong><a href="https://blog.wlgs.site/blog/2025/hxgn#10%E4%B8%8A%E5%AD%A6%E6%89%93%E5%B7%A5%E4%BB%8E%E9%95%BF%E8%AE%A1%E8%AE%AE" class="hash-link" aria-label="10上学打工从长计议的直接链接" title="10上学打工从长计议的直接链接">​</a></h2>
<p>从真实的就业形势就能看出教育的重要性。一位回乡的滴滴司机说，他所在的 160 人的滴滴群里，接近 120 人都是大专以上学历，这很夸张，但却是事实。</p>
<p>前些年混得风生水起的建筑行业，如今有的从业者为了生计都干起了滴滴（返程滴滴司机和我同岁，之前建筑行业去年开始没活了）。</p>
<p>已经有同龄小伙伴开始抱怨当初没有好好学习。现在各行各业都越来越重视孩子的教育（我的观察：包括之前的地痞流氓小混混），这是当下最大的现实。</p>
<p>其实，上学也好，工作也罢，本质目的都是为了更好地生活，关键在于我们自身要有上进心。</p>
<p>，时长01:00</p>
<p>回村过年的时光转瞬即逝，在这短暂却充满烟火气的日子里，我愈发深刻地体会到，珍视眼前和当下，遵从自己的内心，才是生活的真谛。</p>
<p>这一趟回程，不仅让我重新审视了老家的乡村生活，也让我对人生有了新的感悟，这些收获将伴随我走向未来的每一段路。</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[网文编年史]]></title>
            <link>https://blog.wlgs.site/blog/2025/wwbns</link>
            <guid>https://blog.wlgs.site/blog/2025/wwbns</guid>
            <pubDate>Wed, 01 Jan 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[网文二十年，每年通现出的网文神作，你都通宵追过几本?]]></description>
            <content:encoded><![CDATA[<p>网文二十年，每年通现出的网文神作，你都通宵追过几本?</p>
<p>2000年，第一本网文巨制《悟空传》横空问世，被誉为网络第一书，作者今何在，让我们从今往后一万年都记住了他的名字，齐天大圣孙悟空。</p>
<p>2001年，“树下野狐”写就《搜神记》，一举拿下“网络版北大蒲松龄”的美誉。同年，罗森也奉献了被誉为第一本玄幻小说的《风姿物语》。</p>
<p>2002-2003年，网文四大名著相继面世，《小兵传奇》、《紫川》、《诛仙》，还有同期的神作《佣兵天下》。这一时期可称网文史诗时代。此外还有奇幻小说鼻祖《天魔神谭》，和第一本半路夭折的神作《赫氏门徒》。</p>
<p>2004年，《坏蛋是怎样炼成》风靡各大高校，甚至以极少页数就让读者热血沸腾。这一年，《升龙道》让血红成为首个年入百万大神。同期，还有一本《魔法学徒》，据说当年网文界就靠他和《小兵传奇》一起撑场子。</p>
<p>2005年，烟雨江南的《亵渎》一举击碎了人们对网文的刻板印象，原来网文也可以堪比纸质文学。同年的《七界传说》成为大家补完《诛仙》后，仙侠领域的最佳选择，只可惜热度只持续了几年。另一部《邪风曲》当年虽然就有些无脑，但其传奇气息至今难以复制。</p>
<p>2006年，静观笔下，《兽血沸腾》里的刘震撼成为网友心目中最有种的男人标杆。《鬼吹灯》则成就天下霸唱，从此网文世界又新增了一个摸金流。还有《邪神传说》更是让一件兵器成为主角，让人大开脑洞。</p>
<p>2007年，《回到明朝当王爷》从出道开始就是现象级神作。而Z大的《无限恐怖》则开创网文仙河，奠定无限流的基调。当然更少不了禹岩的《极品家丁》，至今仍是架空历史小说的经典神作。</p>
<p>2008年被称为诸神之战，因为这年出现的《恶魔法则》、《星辰变》与《琴帝》可谓三巨头并立，各领风骚。</p>
<p>2009年，唐家三少最终问世了《斗罗大陆》，踏出了他成为神征程上至关重要的一步。然而，就我个人而言，我吃西红柿的《盘龙》真的比这本书更出色。就在三少和番茄激烈竞争的时候，烟雨江南以他的《狩魔手记》成为当年网文圈的黑马，赢得点赞无数。</p>
<p>2010年，《斗破苍穹》横空出世，宛如陨石落海，掀起万丈波涛。那句“莫欺少年穷”成为近十几年来最鼓舞人心的座右铭。同年，梦入神机创作了自己的巅峰之作《阳神》，还有一位名叫忘语的大神，熬了40万字，最终把他的《凡人修仙传》送上了封神的宝座。</p>
<p>2011年，耳根凭借《仙逆》彻底将凡人流发展成了最受欢迎的小说流派。同年，我吃西红柿创作了《吞噬星空》，不得不承认，作为升级流网文教父的番茄在那几年绝对是他的巅峰时刻。然而，令人遗憾的是，那年他们碰到的是梦入神机的《永生》，这本书的点击量高达2.7亿次，堪称神一般的数据，碾压一切。</p>
<p>2012年，叶凡的九龙拉棺让天下皆见识了《遮天》的宏伟。如果说《遮天》叙述的是万古长河里的史诗，那么天蚕土豆的《武动乾坤》则在讲述人间情谊。当然还有《傲世九重天》，虽然名气一直被前两本所压着，但其内容足以让人惊艳。</p>
<p>2013年，我吃西红柿的《莽荒纪》凭借着6000多万的读者，在当时所有已有的小说中总成绩排名第三。与此同时，耳根的《求魔》中的苏铭成为了网文圈里最让人心疼的悲情人物。这一年也标志着网游小说的崛起，蝴蝶兰的《全职高手》红遍整个圈子，将千万级网文从传说照进了现实。</p>
<p>2014年，荒天帝和石昊在《完美世界》里独领风骚，孤独的身影一时间吸引了大量粉丝。尽管有人对网络爽文中女主倒贴的情节提出质疑，但在那一年，鹅是老五所写的《最强弃少》却被评为对一众女主关系处理最出色的存在。同年，天蚕土豆的《大主宰》在封神的同时，也被调侃，将萧炎、林动、牧尘这三位主角的暧昧关系推向了高潮。</p>
<p>2015年，耳根的《我欲封天》凭借一整年占据热销总榜榜首的成绩，成为当时仙侠小说中名副其实的第一。甚至在书还未完结之际，游戏版权已经被提前签出。</p>
<p>永恒之火灵光一现，创作了《儒道至圣》，以风雅的诗词御敌，开创了儒道流的先河。而当年最低调的神作之一要数善良的蜜蜂以及其作品《修罗武神》。在这个时候，他已经不声不响地开始侵占海外市场，使许多外国青年再也无法割舍对古老东方神秘文学的依赖。</p>
<p>2016年，烽火戏诸侯创作了《雪中悍刀行》，烈马黄酒八千里，每一行每一个字都如江湖叹息，为人们带来无尽的宽慰。而中原五青则如江湖中的侠客，坚守着一片净土。我吃西红柿显然已过了自己的高光时刻，他的《雪鹰领主》成为一代天骄最后的绝唱。当时网文四大B王都熟悉吧，《重生之都市修仙》中的陈北玄在这一年被封神。</p>
<p>2017年，辰东的《圣墟》屡次刷新了网络文学的记录，然而可惜的是，口碑却如同银河倒挂一般，直线下滑。耳根在转型之作《一念永恒》刚刚问世不久，版权就以一千万的高价被抢购卖走。四大B王之一的张悬，成为《天道图书馆》中的灵魂，凭借一已之力收割了大洋彼岸的韭菜，让他们为之疯狂。</p>
<p>2018年，烽火戏诸侯再次以《剑来》刷新了网络文学的上限，《大王饶命》则巧妙地偏离寻常，以贱字成就了一代搞笑神作。有人认为这一年最值得推荐的小说莫过于《牧神记》，因为在这部作品中，宅猪的人设之出众简直令人叹为观止。</p>
<p>2019年，天蚕土豆的《元尊》以不依赖平台，自主全网发布的方式，第一次打破了网文的壁垒。爱潜水的乌贼则以《诡秘之主》证明了根本不存在小众题材，并以一已之力将克苏鲁类西幻小说推向了炙手可热的地位。而老鹰吃小鸡创作的《全球高武》，仅用11个月完成580万字的壮举，可谓是人形打字机的典范。</p>
<p>2020年，《一剑独尊》以一句“你家在哪指个方向”成为最为霸气的小说之一。老鹰吃小鸡的作品《万族之劫》再一次向书虫们展示了什么是量大管饱且下饭。</p>
<p>2021年，《大奉打更人》让“今日无事，勾栏听曲”成为书虫最新的调侃式口头禅。此外，《逆天邪神》让人不禁在催更时，对火星引力送上家人的问侯。</p>
<p>有人被喷，必然也有人黄袍加身。比如，飞天鱼凭借《万古神帝》成功晋级为白金大神。</p>
<p>2022年，《道诡异仙》告诉你，没有一些精神病，是写不出这样的奇葩之作，作者与读者总得疯一个。《深空彼岸》让红毛老怪重新回到巅峰，《夜的命名术》则将赛博朋克写到了极致，从上架的第一天开始就一直占据榜首。还有宅猪的《择日飞升》，上线首日就开始屠榜夺魁。</p>
<p>那么，2023年你心目中的神作又是哪一本？</p>
<p>欢迎各位分享，让我们一同见证历史的继续…</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[谈装修应该如何从零开始，应该注意些什么事项]]></title>
            <link>https://blog.wlgs.site/blog/2025/zxygzysm</link>
            <guid>https://blog.wlgs.site/blog/2025/zxygzysm</guid>
            <pubDate>Wed, 01 Jan 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[作为一个室内装修从业人员，我一直认为装修是一场理性和感性的双向奔赴。说理性，要看装修预算；说感性，是因为家必不可辜负。所以，理性和感性的互相让步，互相包容，互相理解，才会打造出一个我们钟爱的温暖的窝。]]></description>
            <content:encoded><![CDATA[<blockquote>
<p>作为一个室内装修从业人员，我一直认为装修是一场理性和感性的双向奔赴。说理性，要看装修预算；说感性，是因为家必不可辜负。所以，理性和感性的互相让步，互相包容，互相理解，才会打造出一个我们钟爱的温暖的窝。</p>
</blockquote>
<h2 class="anchor anchorWithStickyNavbar_jpdk" id="一准备工作">一、准备工作<a href="https://blog.wlgs.site/blog/2025/zxygzysm#%E4%B8%80%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C" class="hash-link" aria-label="一、准备工作的直接链接" title="一、准备工作的直接链接">​</a></h2>
<p>装修之前，我们有两项工作是必须要处理的。即：</p>
<h4 class="anchor anchorWithStickyNavbar_jpdk" id="1风格确定">1.风格确定<a href="https://blog.wlgs.site/blog/2025/zxygzysm#1%E9%A3%8E%E6%A0%BC%E7%A1%AE%E5%AE%9A" class="hash-link" aria-label="1.风格确定的直接链接" title="1.风格确定的直接链接">​</a></h4>
<p>装修最怕的就是盲目，不知道自己喜欢什么样的风格，或者选择苦难症，这也喜欢那也喜欢。风格确定不下来，你的成本预算一定是差异很大的。比如目前的现代简约风和奶油风侘寂风，价格差异就很大。还有就是，如果自己风格待定，去寻求设计师的帮助，也会给你后面的成本预算带来很大的风险。总之，装修之前，无论怎样，房屋的整体风格框架，我们必须做到心里有数。</p>
<h4 class="anchor anchorWithStickyNavbar_jpdk" id="2成本预算">2.成本预算<a href="https://blog.wlgs.site/blog/2025/zxygzysm#2%E6%88%90%E6%9C%AC%E9%A2%84%E7%AE%97" class="hash-link" aria-label="2.成本预算的直接链接" title="2.成本预算的直接链接">​</a></h4>
<p>这里说的成本预算不是我们以为的包含电器/软装等全部成本，而是大概的 <code>硬装成本</code> 。只要你知道自己能付出的硬装成本大概有多少，后面你会减少被坑的风险。什么是硬装成本？即水电/瓷砖/油漆/门窗等基础硬装基础成本。这个成本预算其实自己很容易做，只需要百度即可知道大概价格。地域差价不会很高。后续我会单独出一篇文章写如何做装修成本预算。</p>
<h2 class="anchor anchorWithStickyNavbar_jpdk" id="二前期沟通">二、前期沟通<a href="https://blog.wlgs.site/blog/2025/zxygzysm#%E4%BA%8C%E5%89%8D%E6%9C%9F%E6%B2%9F%E9%80%9A" class="hash-link" aria-label="二、前期沟通的直接链接" title="二、前期沟通的直接链接">​</a></h2>
<p>当我们知道了自己的装修风格和装修预算，就需要去做前期沟通了，不是很必要去询问太多装修过的朋友和亲戚。因为你永远不知道，装修过程中到底是业主的背锅还是装修公司在背锅。因为装修是一个漫长的过程，细节很碎，有可能双方都有问题导致装修不顺，所以你得到的答案会千奇百怪。</p>
<h4 class="anchor anchorWithStickyNavbar_jpdk" id="1多跑几家装修公司">1.多跑几家装修公司<a href="https://blog.wlgs.site/blog/2025/zxygzysm#1%E5%A4%9A%E8%B7%91%E5%87%A0%E5%AE%B6%E8%A3%85%E4%BF%AE%E5%85%AC%E5%8F%B8" class="hash-link" aria-label="1.多跑几家装修公司的直接链接" title="1.多跑几家装修公司的直接链接">​</a></h4>
<p>不管你是土豪，还是平民百姓，不管你同学朋友亲戚是不是做装修的，都恳请大家多询问几家装修公司。问什么？举个简单例子，你去问装修公司，我家100个平方，现代简约风格，半包价格大概是多少？全包价格大概是多少？那我告诉你，这么去问，你问不出任何东西来。问什么？当然是问材料，问装修周期，问有啥优惠活动，问施工方法这些，就是别问价格。问完以后，你直接说，自己的<code>硬装预算</code>，大概是多少，让他们上门测量和出设计图报价，你得到的信息，一定比你直接问价格要好得多，效率也要高得多。所以，这里也挖一个坑，为什么说要告诉装修公司硬装预算。因为这里面又涉及到了半包问题，设计到了瓷砖/门窗等价格问题。只要你自己不确定，装修公司怎么可能给到你一个大概的价格。</p>
<h4 class="anchor anchorWithStickyNavbar_jpdk" id="2多听听设计师的意见">2.多听听设计师的意见<a href="https://blog.wlgs.site/blog/2025/zxygzysm#2%E5%A4%9A%E5%90%AC%E5%90%AC%E8%AE%BE%E8%AE%A1%E5%B8%88%E7%9A%84%E6%84%8F%E8%A7%81" class="hash-link" aria-label="2.多听听设计师的意见的直接链接" title="2.多听听设计师的意见的直接链接">​</a></h4>
<p>设计师水平是有高低之分的，但大部分设计师还是希望自己的作品能够被认可的。所以当你把你的需求告诉设计师，可以是你提供的一些图片...一定要听听他的分析。听完以后，你就知道这个设计师水平行还是不行了。如果没有自己见解或者只会妥协的设计师，在后期装修过程中，也不会为你争取太多利益。就比如，你很喜欢一个设计，但是设计师告诉你，根据你家的户型来看，也许不合适，也许不搭配，也许不适用，咱们听听劝，不要盲目追求喜欢就一定要，因为它真的未必适合。所以装修就是在谈恋爱啊，适合别人，不一定适合你啊。设计师拿到你的户型和需求预算，一定会有一个大框架在里面的，第一遍出稿后，尽量去看细节。因为细节决定你以后的居住舒适程度。比如是不是通铺大砖，是不是做开放式布局等。</p>
<h4 class="anchor anchorWithStickyNavbar_jpdk" id="3少刷点抖音小红书">3.少刷点抖音小红书<a href="https://blog.wlgs.site/blog/2025/zxygzysm#3%E5%B0%91%E5%88%B7%E7%82%B9%E6%8A%96%E9%9F%B3%E5%B0%8F%E7%BA%A2%E4%B9%A6" class="hash-link" aria-label="3.少刷点抖音小红书的直接链接" title="3.少刷点抖音小红书的直接链接">​</a></h4>
<p>无论签约前还是签约后，少刷这两个平台的装修类作品。什么5万全包，什么终生质保，什么送家具电器....还有就是分享各类装修设计的。我承认，有一部分确实值得借鉴，但这些一定是你在自己构想自己家装修的时候，就要去看的，而不是等到即将签约或者已经签约了去看，那只会影响你对自己前期的判断，也会影响装修公司的施工进程和难度。</p>
<h2 class="anchor anchorWithStickyNavbar_jpdk" id="三装修公司的选择">三、装修公司的选择<a href="https://blog.wlgs.site/blog/2025/zxygzysm#%E4%B8%89%E8%A3%85%E4%BF%AE%E5%85%AC%E5%8F%B8%E7%9A%84%E9%80%89%E6%8B%A9" class="hash-link" aria-label="三、装修公司的选择的直接链接" title="三、装修公司的选择的直接链接">​</a></h2>
<p>这个真没有太多的建议，都说装修市场水深，十家就有九家坑。但实际情况是，只要我们不贪图便宜，不真的因为怕麻烦全部放手不管，其实最后落地都没有很大的问题。因为装修，没有百分百好评，只有百分之八九十到位。因为装修公司干的活，其实就是各工种之间的衔接沟通。<code>本质上，它就是材料商与工人之间的桥梁</code>。但工人有技术差异，材料有好坏，这就决定了装修公司不可能保证一定实现你心目中完美的家，只能说基本符合。我这不是在给装修公司或者行业找补，实际情况就是，全程装修一定会有问题，百分百会遇到各类问题，有大有小而已。</p>
<p>我们作为业主，遇到这些情况，一定要先清楚自己当初签署的合同内容，只要符合，可以适当妥协，如果不符合，停工整改。吵架生气是最没用的，因为工人不会管你这些，装修公司更不会管，合同有进度款，你不施工工人也有别的活，于它而言，无非就是再和你耗时间而已。所以为啥我们一定要在签署合同的时候准确认知装修周期。签好三个月完工，就一定要督促好装修公司。该理性延迟就延迟，是它的问题，就一定要学会根据合同办事。</p>
<p>装修公司，不要问它师傅是不是自己的，你管这干嘛？百分之九十九的公司，都没有自己的公司，百分之九十九的公司只拥有施工小队长，施工小队长找的师傅，明白吗？养师傅的公司，要么在亏本，要么正在准备亏本。你只要确保师傅是认真负责的师傅，没事找师傅聊个天，给根烟，活干的比你多付几千几万都要好。<code>因为装修落地，靠的是施工师傅</code>。</p>
<h2 class="anchor anchorWithStickyNavbar_jpdk" id="四装修的过程">四、装修的过程<a href="https://blog.wlgs.site/blog/2025/zxygzysm#%E5%9B%9B%E8%A3%85%E4%BF%AE%E7%9A%84%E8%BF%87%E7%A8%8B" class="hash-link" aria-label="四、装修的过程的直接链接" title="四、装修的过程的直接链接">​</a></h2>
<p>装修过程，我们一定一定一定要做好每个阶段的验收，不验收不要给进度款，也不要让它进行下一步施工。因为痛苦的开始，往往就是不管不顾，让装修公司闷头苦干，最后收尾你发现基础工作哪儿哪儿都是问题。<code>最重要的就是水电工种。</code>因为后期问题百分之七八十来自于这个工种。因为这个工种，必须具备一定的专业水平，而目前很多都是自学或者师傅带个一两年就开整的。没有强制规定和专业培训过的师傅，大家尽量少用。水电师傅最好是就职过大的装修公司的最好。</p>
<p>还有就是，也不要盲目信任设计师，装修过程中，最值得信赖的一定是施工师傅。在施工过程中，如果聊天你会得到更加专业可靠的建议和意见，也会帮你看装修公司用的材料到底好还是不好，甚至因为你的热情或者用心，比别人更用心的帮助你装好你的房子。说个不成熟也是事实的话，无论业主也好还是装修公司老板也好，装修师傅永远是最牛逼的，你可以不尊重设计师小队长公司老板，但别不尊重装修师傅。</p>
<h2 class="anchor anchorWithStickyNavbar_jpdk" id="五验收">五、验收<a href="https://blog.wlgs.site/blog/2025/zxygzysm#%E4%BA%94%E9%AA%8C%E6%94%B6" class="hash-link" aria-label="五、验收的直接链接" title="五、验收的直接链接">​</a></h2>
<p>验收没什么好说的，找细节就行了。这个验收标准，还得依据实际装修情况和条件来看，有的时候适当的放松我们的标准其实是必要的。但与一个要特比注意，验收过程中，最好做好拍照和视频等资料保存。<code>因为它涉及到你后面的售后问题</code>，比如定制柜我们是自己订的，但和墙壁或者顶面、地面存在缝隙，到底是找装修公司还是定制柜？</p>
<p>装修是一项漫长而又艰难的战争，也是一场对美好愿望的憧憬和奔赴。这一篇文章，其实写的比较粗放，本来是想写的细节一点，但是发现如果展开的话，一篇文章根本写不完。所以后续会把里面的一些单项拉出来细写。</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[巴菲特演讲]]></title>
            <link>https://blog.wlgs.site/blog/buffett's-speech</link>
            <guid>https://blog.wlgs.site/blog/buffett's-speech</guid>
            <pubDate>Wed, 01 Jan 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[1998年10月15日]]></description>
            <content:encoded><![CDATA[<p>1998年10月15日</p>
<p>我先简单说几句，把大部分时间留下来回答大家的问题。我想聊聊大家关心的话题。</p>
<p>请各位提问的时候一定要刁钻。你们问的问题越难，才越好玩。什么都可以问，就是不能问上个月我交了多少税，这个问题我无可奉告。</p>
<p>各位同学，你们毕业之后未来会怎样？我简单说说我的想法。</p>
<p>各位在这所大学能学到大量关于投资的知识，你们将拥有成功所需的知识。</p>
<p>既然各位能坐在这里，你们也拥有成功所需的智商，你们还有成功所需的拼劲。你们大多数人都会成功地实现自己的理想。</p>
<p>但是最后你到底能否成功，不只取决于你的头脑和勤奋。我简单讲一下这个道理。</p>
<p>奥马哈有个叫彼得•基威特的人，他说他招人的时候看三点：品行、头脑和勤奋。</p>
<p>他说一个人要是头脑聪明、勤奋努力，但品行不好，肯定是个祸害。</p>
<p>品行不端的人，最好又懒又蠢。</p>
<p>我知道各位都头脑聪明、勤奋努力，所以我今天只讲品行。为了更好地思考这个问题，我们不妨一起做个游戏。</p>
<p>各位都是 MBA 二年级的学生，应该很了解自己周围的同学了。假设现在你可以选一个同学，买入他今后一生之内 10% 的收入。</p>
<p>你不能选富二代，只能选靠自己奋斗的人。请各位仔细想一下，你会选班里的哪位同学，买入他今后一生之内 10% 的收入。</p>
<p>你会给所有同学做个智商测试，选智商最高的吗？</p>
<p>未必。</p>
<p>你会选考试成绩最高的吗？</p>
<p>未必。</p>
<p>你会选最有拼劲的吗？</p>
<p>不一定。</p>
<p>因为大家都很聪明，也都很努力，我觉得你会主要考虑定性方面的因素。</p>
<p>好好想想，你会把赌注压在谁的身上？</p>
<p>也许你会选你最有认同感的那个人，那个拥有领导能力，能把别人组织起来的人。</p>
<p>这样的人应该是慷慨大方的、诚实正直的，他们自己做了贡献，却说是别人的功劳。</p>
<p>我觉得让你做出决定的应该是这样的品质。</p>
<p>找到了你最钦佩的这位同学之后，想一想他身上有哪些优秀品质，拿一张纸，把这些品质写在纸的左边。</p>
<p>下面我要加大难度了。</p>
<p>为了拥有这位同学今后一生 10% 的收入，你还要同时做空另一位同学今后一生 10% 的收入，这个更好玩。</p>
<p>想想你会做空谁？你不会选智商最低的。</p>
<p>你会想到那些招人烦的人，他们可能学习成绩优秀，但你就是不想和他们打交道，不但你烦他们，别人也烦他们。</p>
<p>为什么有人会招人烦？</p>
<p>原因很多，这样的人可能自私自利、贪得无厌、投机取巧或者弄虚作假。</p>
<p>类似这样的品质，你想想还有什么，请把它们写在刚才那张纸的右边。</p>
<p>看看左右两边分别列出来的品质，你发现了吗？这些品质不是把橄榄球扔出 60 米，不是 10 秒钟跑完 100 米，不是相貌在全班最出众。</p>
<p>左边的这些品质，你真想拥有的话，你可以有。</p>
<p>这些是关于行为、脾气和性格的品质，是能培养出来的。</p>
<p>在座的各位，只要你想要获得这些品质，没一个是你得不到的。</p>
<p>再看一下右边的那些品质，那些令人生厌的品质，没一个是你非有不可的，你身上要是有，想改的话，可以改掉。</p>
<p>大多数行为都是习惯成自然。</p>
<p>我已经老了，但你们还年轻，想摆脱恶习，你们年轻人做起来更容易。</p>
<p>常言道，习惯的枷锁，开始的时候轻的难以察觉，到后来却重的无法摆脱。</p>
<p>这话特别在理。</p>
<p>我在生活中见过一些人，他们有的和我年纪差不多，有的比我年轻十几二十几岁，但是他们染上了一些坏习性，把自己毁了，改也改不掉，走到哪都招人烦。</p>
<p>他们原来不是这样的，但是习惯成自然，积累到一定程度，根本改不了了。</p>
<p>你们还年轻，想养成什么习惯、想形成什么品格，都可以，就看你自己怎么想了。</p>
<p>本•格雷厄姆，还有他之前的本•富兰克林，他们都这么做过。</p>
<p>本•格雷厄姆十几岁的时候就观察自己周围那些令人敬佩的人，他对自己说：“我也想成为一个被别人敬佩的人，我要向他们学习。”</p>
<p>格雷厄姆发现学习他敬佩的人，像他们一样为人处世，是完全做得到的。</p>
<p>他同样观察周围遭人厌恶的人，摆脱他们身上的缺点。</p>
<p>我建议大家把这些品质写下来，好好想想，把好品质养成习惯，最后你想买谁 10% 的收入，就会变成他。</p>
<p>你已经确定拥有自己 100% 的收入，再有别人的 10%，这多好。</p>
<p>你选择了谁，你都可以学得像他一样。</p>
<p>Q1：有传言说您是救赎长期资本管理公司的买家之一，到底发生了什么，能给我们讲讲吗？</p>
<p>巴菲特：这件事非常耐人寻味。</p>
<p>长期资本管理公司的由来，相信在座的大多人都知道，实在太令人感慨了。</p>
<p>约翰•梅里韦瑟、艾瑞克•罗森菲尔德、拉里•希利布兰德、格雷格•霍金斯、维克多•哈格哈尼，还有两位诺贝尔奖桂冠得主罗伯特•默顿和迈伦•舒尔兹，把他们这 16 个人加起来，他们的智商该多高，随便从哪家公司挑 16 个人出来，包括微软，都没法和他们比。</p>
<p>第一，他们的智商高得不得了。</p>
<p>第二，他们这 16 个人都是投资领域的老手。他们不是倒卖服装发的家，然后来搞证券的。</p>
<p>他们这 16 个人加起来，有三四百年的经验了，一直都在投资这行摸爬滚打。</p>
<p>第三，他们大多数人都几乎把自己的整个身家财产都投入到了长期资本管理公司，他们把自己的钱也投进去了。</p>
<p>他们自己投了几亿的钱，而且智商高超，经验老道，结果却破产了。</p>
<p>真是让人感慨。</p>
<p>要让我写一本书的话，书名我都想好了，就叫《聪明人怎么做蠢事》，我的合伙人说我的自传可以叫这个名字。</p>
<p>但是，我们从长期资本这件事能得到很多启发。</p>
<p>长期资本的人都是好人。</p>
<p>我尊重他们。</p>
<p>当我在所罗门焦头烂额的时候，他们帮过我。</p>
<p>他们根本不是坏人。</p>
<p>但是他们为了赚更多的钱，为了赚自己不需要的钱，把自己手里的钱，把自己需要的钱都搭进去了。</p>
<p>这不是傻是什么？绝对是傻，不管智商多高，都是傻。</p>
<p>为了得到对自己不重要的东西，甘愿拿对自己重要的东西去冒险，哪能这么干？</p>
<p>我不管成功的概率是 100 比 1，还是 1000 比 1，我都不做这样的事。</p>
<p>假设你递给我一把枪，里面有 1000 个弹仓、100 万个弹仓，其中只有一个弹仓里有一颗子弹，你说：“把枪对准你的太阳穴，扣一下扳机，你要多少钱？”我不干。</p>
<p>你给我多少钱，我都不干。</p>
<p>要是我赢了，我不需要那些钱；要是我输了，结果不用说了。</p>
<p>这样的事，我一点都不想做，但是在金融领域，人们经常做这样的事，都不经过大脑。</p>
<p>有一本很好的书，不是书好，是书名好。</p>
<p>这是一本烂书，但是书名起得很好，是沃尔特•古特曼写的，书名是《一生只需富一次》。</p>
<p>这个道理难道不是很简单吗？</p>
<p>假设年初你有 1 亿美元，如果不上杠杆，能赚 10%，上杠杆的成功率是 99%，能赚 20%，年末时你有 1.1 亿美元，还是 1.2 亿美元，有区别吗？</p>
<p>没一点区别。</p>
<p>要是年末你死了，写讣告的人可能有个笔误，虽然你有 1.2 亿，但他写成了 1.1 亿。</p>
<p>多赚的钱有什么用？一点用没有。</p>
<p>对你、对你的家人，对别人，都没用。</p>
<p>要是亏钱了的话，特别是给别人管钱，亏的不但是钱，而且颜面扫地、无地自容，把朋友的钱都亏了，没脸见人。</p>
<p>我真理解不了，怎么有人会像这 16 个人一样，智商很高、人品也好，却做这样的事，一定是疯了。</p>
<p>他们吃到了苦果，因为他们太依赖外物了。</p>
<p>我临时掌管所罗门的时候，他们和我说，六西格玛的事件、七西格玛的事件伤不着他们。</p>
<p>他们错了。</p>
<p>只看过去的情况，无法确定未来金融事件发生的概率。</p>
<p>他们太依赖数学了，以为知道了一只股票的贝塔系数，就知道了这只股票的风险。</p>
<p>要我说，贝塔系数和股票的风险根本是八竿子打不着。</p>
<p>会计算西格玛，不代表你就知道破产的风险。</p>
<p>我是这么想的，不知道现在他们是不是也这么想了。</p>
<p>说真的，我都不愿意以长期资本为例。</p>
<p>我们都有一定的概率会摊上类似的事，我们都有盲点，或许是因为我们了解了太多的细枝末节，把最关键的地方忽略了。</p>
<p>亨利•考夫曼说过一句话：“破产的有两种人，一种是什么都不知道的，一种是什么都知道的。”</p>
<p>说起来，真是令人扼腕叹息。</p>
<p>同学们，引以为戒。</p>
<p>我们基本上没借过钱，当然我们的保险公司里有浮存金。但是我压根没借过钱。</p>
<p>我只有 1 万块钱的时候都不借钱，不借钱不一样吗？</p>
<p>我钱少的时候做投资也很开心。</p>
<p>我根本不在乎我到底是有 1 万、10 万，还是 100 万。</p>
<p>除非遇上了急事，比如生了大病急需用钱。</p>
<p>当年我钱很少，但我也没盼着以后钱多了要过不一样的生活。</p>
<p>从衣食住行来看，你我之间有什么差别吗？</p>
<p>我们穿一样的衣服，我们都能喝天赐的可口可乐，我们都能吃上麦当劳，还有更美味的 DQ 冰淇淋，我们都住在冬暖夏凉的房子里，我们都在大屏幕上看橄榄球赛。</p>
<p>你在大电视上看，我也在大电视上看。</p>
<p>我们的生活完全一样，没多大差别。</p>
<p>要是你生了大病，会得到良好的治疗。</p>
<p>如果我得了大病，也会得到良好的治疗。</p>
<p>我们唯一不一样的地方是我们出行的方式不同。</p>
<p>我有一架小飞机，可以飞来飞去，我特别喜欢这架飞机，这是要花钱的。</p>
<p>除了我们出行的方式不同，你说有什么是我能做，但你做不了的吗？</p>
<p>我有一份我热爱的工作，但我一直都在做我喜欢的工作。</p>
<p>当年我觉得赚 1000 美元是一大笔钱的时候，我就喜欢我的工作。</p>
<p>同学们，做你们喜欢的工作。</p>
<p>要是你总做那些自己不喜欢的工作，只是为了让简历上的工作经历更漂亮，那你真是糊涂了。</p>
<p>有一次，我去做一个演讲，来接我的是一个 28 岁的哈佛大学的学生。</p>
<p>我听他讲完了他的工作经历，觉得他很了不起。</p>
<p>我问他：“以后你有什么打算？”</p>
<p>他说：“等我 MBA 毕业后，可能先进一家咨询公司，这样能给简历增加一些分量。”</p>
<p>我说：“你才 28 岁，已经有这么漂亮的工作经历了，你的简历比一般人的漂亮 10 倍。你还接着做自己不喜欢的工作，不觉得有点像年轻的时候把性生活省下来，留到岁数大的时候再用吗？</p>
<p>或早或晚，你们都应该开始做自己真心想做的事。</p>
<p>我觉得我说的话，大家都听明白了。</p>
<p>各位毕业之后，挑一个自己真心喜欢的工作，别为了让自己的简历更漂亮而工作，要做自己真心喜欢的。</p>
<p>时间久了，你的喜好可能会变，但在做自己喜欢的事的时候，早晨你会从床上跳起来。</p>
<p>我刚从哥伦比亚大学商学院毕业，就迫不及待地希望立刻为格雷厄姆工作。</p>
<p>我说我不要工资，格雷厄姆说我要的薪水太高了。</p>
<p>我一直骚扰他。</p>
<p>回到奥马哈后，我做了三年股票经纪人，一直给格雷厄姆写信，告诉他我发现的投资机会。</p>
<p>最后，我终于得到了机会，在他手下工作了一两年。那是一段宝贵的经历。</p>
<p>总之，我做的工作始终都是我喜欢的。</p>
<p>你财富自由之后想做什么工作，现在就该做什么工作，这样的工作才是理想的工作。</p>
<p>做这样的工作，你会很开心，能学到东西，能充满激情。</p>
<p>每天会从床上跳起来，一天不工作都不行。</p>
<p>或许以后你喜欢的东西会变，但是现在做你喜欢的工作，你会收获很多。</p>
<p>我根本不在乎工资是多少。</p>
<p>不知怎么，扯得有点远了。</p>
<p>总之，如果你现在有1块钱，以为将来有2块钱的时候，自己能比现在过得更幸福，你可能想错了。</p>
<p>你应该找到自己真心喜欢做的事情，投入地去做。</p>
<p>别以为赚10倍或20倍能解决生活中的所有问题，这样的想法很容易把你带到沟里去。</p>
<p>在不该借钱的时候借钱，或者急功近利、投机取巧，做自己不该做的事，将来都没地方买后悔药。</p>
<p>Q2：您喜欢什么样的公司？</p>
<p>巴菲特：我喜欢我能看懂的生意。</p>
<p>先从能不能看懂开始，我用这一条筛选，90% 的公司都被过滤掉了。</p>
<p>我不懂的东西很多，好在我懂的东西足够用了。</p>
<p>世界如此之大，几乎所有公司都是公众持股的。</p>
<p>所有的美国公司，随便挑。</p>
<p>首先，有些东西明知道自己不懂，不懂的，不能做。</p>
<p>有些东西是你能看懂的。</p>
<p>可口可乐，是我们都能看懂的，谁都能看懂。</p>
<p>可口可乐这个产品从 1886 年起基本没变过。</p>
<p>可口可乐的生意很简单，但是不容易。</p>
<p>我不喜欢很容易的生意，生意很容易，会招来竞争对手。</p>
<p>我喜欢有护城河的生意。</p>
<p>我希望拥有一座价值连城的城堡，守护城堡的公爵德才兼备。</p>
<p>有的生意，我看不出来十年后会怎样，我不买。</p>
<p>一只股票，假设从明天起纽约股票交易所关门五年，我就不愿意持有了，这样的股票，我不买。</p>
<p>我买一家农场，五年里没人给我的农场报价，只要农场的生意好，我就开心。</p>
<p>我买一个房子，五年里没人给我的房子报价，只要房子的回报率达到了我的预期，我就开心。</p>
<p>人们买完股票后，第二天一早就盯着股价，看股价决定自己的投资做得好不好。</p>
<p>糊涂到家了。买股票就是买公司，这是格雷厄姆教给我的最基本的道理。</p>
<p>买的不是股票，是公司的一部分所有权。</p>
<p>只要公司生意好，而且你买的价格不是高得离谱，你的收益也差不了。</p>
<p>投资股票就这么简单。</p>
<p>要买你能看懂的公司，就像买农场，你肯定买自己觉得合适的。</p>
<p>没什么复杂的。</p>
<p>这个思想不是我发明的，都是格雷厄姆提出来的。</p>
<p>我特别走运。</p>
<p>19 岁的时候，我有幸读到了《聪明的投资者》。</p>
<p>我六七岁的时候就对股票感兴趣，11 岁时第一次买股票。</p>
<p>我一直都在自己摸索，看走势图、看成交量，做各种技术分析的计算，什么路子都试过。</p>
<p>后来，我读到了《聪明的投资者》，书里说，买股票，买的不是代码，不是上蹿下跳的报价，买股票就是买公司。</p>
<p>我转变到这种思维方式以后，一切都理顺了。</p>
<p>道理很简单。</p>
<p>所以说，我们买我们能看懂的公司。</p>
<p>在座的各位，没有看不懂可口可乐公司的，但是某些新兴的互联网公司呢，我敢说，在座的各位，没一个能看懂的。</p>
<p>今年在伯克希尔的股东大会上，我说要是我在商学院教课，期末考试时，我会出这样的题目，告诉学生一家互联网公司的信息，让他们给这家公司估值。</p>
<p>哪个学生给出了估值，我就给他不及格。（笑）</p>
<p>无论什么时候，都要知道自己在做什么，这样才能做好投资。</p>
<p>必须把生意看懂了，有的生意是我们能看懂的，但不是所有生意我们都能看懂。</p>
<p>Q3：能否讲讲您在商业中犯的错误？</p>
<p>巴菲特：对于我和我的合伙人查理•芒格来说，我们犯过的最大的错误不是做错了什么，而是该做的没做。</p>
<p>在这些错误中，我们对生意很了解，本来应该行动，但不知道怎么了，我们就在那犹豫来犹豫去，什么都没做。</p>
<p>有些东西我们不明白就算了，但有些东西是我们能看明白的，本来可以赚几十亿、几百亿的，却眼睁睁看着机会溜走了。</p>
<p>我本来可以买微软赚几十亿，但这不算数，因为我一直搞不懂微软。</p>
<p>但是医药股，我本来是可以赚到几十亿的，这些钱是我该赚到的，我却没赚到。</p>
<p>当克林顿当局提出医疗改革方案后，所有的医药股都崩盘了。</p>
<p>我们本来可以买入医药股大赚特赚的，因为我能看懂医药股，我却没做这笔投资。</p>
<p>至于各位能看到的错误，几年前我买入美国航空优先股是个错误。</p>
<p>当时我手里闲钱很多。手里一有闲钱，我就容易犯错。</p>
<p>查理让我去酒吧喝酒去，别在办公室里待着。</p>
<p>但我还是留在办公室，兜里有钱，就做了傻事。</p>
<p>每次都这样。当时我买了美国航空的优先股。</p>
<p>没人逼我，是我自己要买的。</p>
<p>现在我有一个 800 热线电话，每次我一想买航空股，就打这个电话。</p>
<p>电话那边的人会安抚我。</p>
<p>我说：“我是沃伦，又犯了想买航空公司的老毛病。”</p>
<p>他们说：“继续讲，别停下，别挂电话，别冲动。”最后那股劲就过去了。</p>
<p>我买了美国航空以后，差点把所有钱都亏进去，真是差一点全亏了。</p>
<p>我活该亏钱。</p>
<p>我买入美国航空，是因为它是一只很合适的证券，但它的生意不好。</p>
<p>对所罗门的投资也一样。我根本不想买它的生意，只是觉得它的证券便宜。</p>
<p>这也算是一种错误。</p>
<p>本来不太喜欢公司的生意，却因为喜欢证券的条款而买了。</p>
<p>这样的错误我过去犯过，将来可能还会犯。</p>
<p>最大的错误还是该做的没做。</p>
<p>我想告诉大家，人们总说通过错误学习，我觉得最好是尽量从别人的错误里学习。</p>
<p>不过，在伯克希尔，我们的处事原则是，过去的事就让它过去。</p>
<p>我有个合伙人，查理•芒格，我们一起合作 40 年了，我们从来没红过脸。</p>
<p>我们对很多东西看法不一样，但是我们不争不吵。</p>
<p>我们从来不想已经过去的事。</p>
<p>我们觉得未来有那么多值得期待的，何必对过去耿耿于怀。</p>
<p>不纠结过去的事，纠结也没用。人生只能向前看。</p>
<p>你们从错误里或许能学到东西，但最重要的是只投资自己能看懂的生意。</p>
<p>如果你像很多人一样，跳出了自己的能力圈，听别人的消息买了自己毫不了解的股票，犯了这样的错，你需要反省，要记得只投资自己能看懂的。</p>
<p>你做投资决策的时候，就应该对着镜子，自言自语：“我要用每股 55 美元的价格买入 100 股通用汽车，理由是……”</p>
<p>自己要买什么，得对自己负责。</p>
<p>一定要有个理由，说不出来理由，别买。</p>
<p>是因为别人在和你闲聊时告诉你这只股票能涨吗？</p>
<p>这个理由不行。是因为成交量异动或者走势图发出了信号吗？</p>
<p>这样的理由不行。</p>
<p>你的理由，一定是你为什么要买这个生意。</p>
<p>我们恪守这个原则，这是本•格雷厄姆教我的。</p>
<p>Q4：和身处华尔街相比，住在偏远的小城市有什么好处？</p>
<p>巴菲特：我在华尔街工作过一两年，我在东西海岸都有朋友。</p>
<p>我喜欢拜访他们。每次和他们见面，都能得到一些灵感。</p>
<p>思考投资的最佳方法还是独自一人待在房间里，静静地想。</p>
<p>要是这样不行，别的办法也都没用。</p>
<p>在任何类似市场的环境中，你都很容易受到影响，做出过激的反应，华尔街是个典型的市场环境。</p>
<p>在华尔街，你觉得每天不做点什么都不行。</p>
<p>钱德勒家族花了 2000 美元买下了可口可乐公司，选中了可口可乐这样的公司，别的什么都不用做了，该做的事就是不做别的。</p>
<p>1919 年都不应该卖，但是钱德勒家族后来把他们的股票卖了。</p>
<p>你该怎么做呢？一年找到一个好的投资机会，然后一直持有，等待它的潜力充分释放出来。</p>
<p>在一个人们每五分钟就来回喊报价的环境里，在一个别人总把各种报告塞到你面前的环境里，很难做到持有不动。</p>
<p>华尔街靠折腾赚钱。你靠不折腾赚钱。</p>
<p>要是在座的各位每天都相互交易自己的投资组合，所有人最后都会破产，所有的钱最后都会进到中间商的口袋里。</p>
<p>换个做法，你们都持有一般公司组成的投资组合，50 年里你们都一动不动，最后你们都会很有钱，你们的券商会破产。</p>
<p>券商像这样一个医生，他让你换药的次数越多，他赚的越多。</p>
<p>他要是给你一种药，把你的病根治了，他只能做成一笔买卖，一笔交易，然后就没了。</p>
<p>如果他能让你相信每天换各种药吃对健康有益，这对他有好处，对卖药的有好处，你会亏很多钱。</p>
<p>你的身体好不了，还会破财。</p>
<p>任何刺激你瞎折腾的环境，都要远离。</p>
<p>华尔街无疑就是这样的环境。</p>
<p>我回到奥马哈之后，每半年都去大城市一次。</p>
<p>我每次都列一个清单，把自己要做的事写下来，比如要调研的公司等等。</p>
<p>这些路费都没白花，该做完的事，做完了，我就回到奥马哈思考。</p>
<p>Q5：请讲讲您对分散投资的看法？</p>
<p>巴菲特：这个要看情况了。</p>
<p>如果不是职业投资者，不追求通过管理资金实现超额收益率的目标，我觉得应该高度分散。</p>
<p>我认为 98% 到 99% 的投资者应该高度分散，但不能频繁交易，他们的投资应该和成本极低的指数型基金差不多。</p>
<p>只要持有美国的一部分就可以了，这样投资，是相信持有美国的一部分会得到很好的回报，我对这样的做法毫无异议。</p>
<p>对于普通投资者来说，这么投资是正路。</p>
<p>如果想积极参与投资活动，研究公司并主动做投资决策，那就不一样了。</p>
<p>既然你走上研究公司这条路，既然你决定投入时间和精力把投资做好，我觉得分散投资是大错特错的。</p>
<p>那天我在 SunTrust 的时候，说到过这个问题。</p>
<p>要是你真能看懂生意，你拥有的生意不应该超过六个。</p>
<p>要是你能找到六个好生意，就已经足够分散了，用不着再分散了，而且你能赚很多钱。</p>
<p>我敢保证，你不把钱投到你最看好的那个生意，而是再去做第七个生意，肯定会掉到沟里。</p>
<p>靠第七个最好的主意发家的人很少，靠最好的主意发家的人很多。</p>
<p>所以，我说任何人，在资金量一般的情况下，要是对自己要投资的生意确实了解，六个就很多了，换了是我的话，我可能就选三个我最看好的。</p>
<p>我本人不搞分散。</p>
<p>我认识的投资比较成功的人，都不搞分散，沃尔特•施洛斯是个例外，沃尔特的投资非常分散，他什么东西都买一点。</p>
<p>Q6：如果能重新活一次，为了让生活更幸福，您会怎么做？</p>
<p>巴菲特：希望我的回答，大家听了不会觉得不舒服。要是我重新活一次的话，我只想做一件事，选能活到 120 岁的基因。</p>
<p>我其实是非常幸运的。我经常举一个例子，觉得可能会对各位有启发，所以花两分钟时间讲讲。</p>
<p>假设现在是你出生前 24 小时，一个神仙出现了，他说：“孩子，我看你前途无量，我现在手里有个难题，我得设计你出生后生活的世界，我觉得太难了，你来设计吧。</p>
<p>你有 24 小时的时间，社会规则、经济规则、政府规则，这些都给你设计，你还有你的子孙后代都在这些规则的约束下生活。”</p>
<p>你问了：“我什么都能设计？”</p>
<p>神仙说：“对，什么都能设计。”你说：“没什么附加条件？”</p>
<p>神仙说：“有一个附加条件。</p>
<p>你不知道自己出生后是黑人还是白人，是富有还是贫穷，是男人还是女人，是身体健壮还是体弱多病，是聪明过人还是头脑迟钝。</p>
<p>你知道的就一点，你要从一个装着 58 亿个球的桶里选一个球。”</p>
<p>我把这个叫娘胎彩票。你要从这 58 亿个球里选一个，这是你一生之中最重大的决定，它会决定你是出生在美国还是阿富汗，智商是 130 还是 70。</p>
<p>选出来之后，很多东西都注定了。你会设计一个怎样的世界？</p>
<p>我觉得用这种思维方式可以很好地看待社会问题。</p>
<p>因为你不知道自己会选到哪个球，所以在设计世界的时候，你会希望这个世界能提供大量产品和服务，你希望所有人都能过上好日子。</p>
<p>你会希望这个世界的产品越来越丰富，将来你的子孙后代能越过越好。</p>
<p>在希望世界能提供大量产品和服务的同时，还要考虑到有的人手气太差，拿到的球不好，天生不适合这个世界的体系，你希望他们不会被这个世界抛弃。</p>
<p>我天生非常适合我们现在的这个世界。我一生下来就具备了分配资金的天赋。这其实没什么了不起的。</p>
<p>如果我们都被困在荒岛上，永远回不来，我们所有人里，谁最会种地，谁最有本事。</p>
<p>我再怎么说我多擅长分配资金，你们也不会理我。</p>
<p>我赶上了好时候。</p>
<p>盖茨说，要是我生在几百万年前，早成了动物的盘中餐。</p>
<p>他说：“你跑不快，也不会爬树，什么都不行，刚生下来就得被吃了。你生在今天是走运。”</p>
<p>既然我运气这么好，我就要把自己的天分发挥出来，一辈子都做自己喜欢的事，交自己喜欢的人。</p>
<p>只和自己喜欢的人共事。</p>
<p>要是有个人让我倒胃口，但是和他走到一起，我能赚 1 亿美元，我会断然拒绝，要不和为了钱结婚有什么两样？</p>
<p>无论什么时候，都不能为了钱结婚，要是已经很有钱了，更不能这样了，你们说是不是？我不为了钱结婚。</p>
<p>我还是会一如既往地生活，只是不想再买美国航空了！</p>
<p>谢谢。</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Next.js 使用 Hono 接管 API]]></title>
            <link>https://blog.wlgs.site/blog/nextjs-with-hono</link>
            <guid>https://blog.wlgs.site/blog/nextjs-with-hono</guid>
            <pubDate>Wed, 02 Oct 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[直入正题，Next.js 自带的 API Routes (现已改名为 Route Handlers) 异常难用，例如当你需要编写一个 RESTful API 时，尤为痛苦]]></description>
            <content:encoded><![CDATA[<p>直入正题，Next.js 自带的 API Routes (现已改名为 <a href="https://nextjs.org/docs/app/building-your-application/routing/route-handlers" target="_blank" rel="noopener noreferrer"><strong>Route Handlers</strong></a>) 异常难用，例如当你需要编写一个 RESTful API 时，尤为痛苦</p>
<p><img decoding="async" loading="lazy" src="https://img.kuizuo.me/2024%2F0930171329-image.png" alt="image.png" class="img_aT2B"></p>
<p>这还没完，当你需要数据验证、错误处理、中间件等等功能，又得花费不小的功夫，所以 Next.js 的 API Route 更多是为你的全栈项目编写一些简易的 API 供外部服务，这也可能是为什么 Next.js 宁可设计 <a href="https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations" target="_blank" rel="noopener noreferrer">Server Action</a> 也不愿为 API Route 提供传统后端的能力。</p>
<p>但不乏有人会想直接使用 Next.js 来编写这些复杂服务，恰好 <a href="https://hono.dev/docs/getting-started/vercel" target="_blank" rel="noopener noreferrer">Hono.js</a> 便提供相关能力。</p>
<p>这篇文章就带你在 Next.js 项目中要如何接入 Hono，以及开发可能遇到的一些坑点并如何优化。</p>
<h2 class="anchor anchorWithStickyNavbar_jpdk" id="nextjs-中使用-hono">Next.js 中使用 Hono<a href="https://blog.wlgs.site/blog/nextjs-with-hono#nextjs-%E4%B8%AD%E4%BD%BF%E7%94%A8-hono" class="hash-link" aria-label="Next.js 中使用 Hono的直接链接" title="Next.js 中使用 Hono的直接链接">​</a></h2>
<p>可以按照 <a href="https://hono.dev/docs/getting-started/vercel#_1-setup" target="_blank" rel="noopener noreferrer">官方的 cli</a> 搭建或者照 next.js 模版 <a href="https://github.com/vercel/hono-nextjs" target="_blank" rel="noopener noreferrer">https://github.com/vercel/hono-nextjs</a> 搭建，核心代码 <code>app/api/[[...route]]/route.ts</code> 的写法如下所示。</p>
<div class="language-jsx codeBlockContainer_rxDN theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_e6Y8"><pre tabindex="0" class="prism-code language-jsx codeBlock_eEse thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_Uz_K"><span class="token-line" style="color:#393A34"><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> </span><span class="token imports maybe-class-name">Hono</span><span class="token imports"> </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'hono'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> handle </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'hono/vercel'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> app </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">Hono</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">basePath</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'/api'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">app</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'/hello'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">c</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> c</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">json</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token literal-property property" style="color:#36acaa">message</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'Hello Next.js!'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">GET</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">handle</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">app</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">POST</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">handle</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">app</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">PUT</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">handle</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">app</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">DELETE</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">handle</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">app</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup_Aaa5"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rNxk" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_8vl6"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_uXRx"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>从 <code>hono/vercel</code> 导入的 <code>handle</code> 函数会将 app 实例下的所有请求方法导出，例如 GET、POST、PUT、DELETE 等。</p>
<p>一开始的 User CRUD 例子，则可以将其<strong>归属到一个文件内</strong>下，这里我不建议将后端业务代码放在 app/api 下，因为 Next.js 会自动扫描 app 下的文件夹，这可能会导致不必要的热更新，并且也不易于服务相关代码的拆分。而是在根目录下创建名为 server 的目录，并将有关后端服务的工具库(如 db、redis、zod)放置该目录下以便调用。</p>
<p><img decoding="async" loading="lazy" src="https://img.kuizuo.me/2024%2F0930171342-imageundefined1.png" alt="image.png" class="img_aT2B"></p>
<p>至此 next.js 的 api 接口都将由 hono.js 来接管，接下来只需要按照 Hono 的开发形态便可。</p>
<h2 class="anchor anchorWithStickyNavbar_jpdk" id="数据效验">数据效验<a href="https://blog.wlgs.site/blog/nextjs-with-hono#%E6%95%B0%E6%8D%AE%E6%95%88%E9%AA%8C" class="hash-link" aria-label="数据效验的直接链接" title="数据效验的直接链接">​</a></h2>
<p>zod 可以说是 TS 生态下最优的数据验证器，hono 的 <code>@hono/zod-validator</code> 很好用，用起来也十分简单。</p>
<div class="language-jsx codeBlockContainer_rxDN theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_e6Y8"><pre tabindex="0" class="prism-code language-jsx codeBlock_eEse thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_Uz_K"><span class="token-line" style="color:#393A34"><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> z </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'zod'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> zValidator </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'@hono/zod-validator'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> </span><span class="token imports maybe-class-name">Hono</span><span class="token imports"> </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'hono'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> paramSchema </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> z</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">object</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token literal-property property" style="color:#36acaa">id</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> z</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">string</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">cuid</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> jsonSchema </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> z</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">object</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token literal-property property" style="color:#36acaa">status</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> z</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">boolean</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> app </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">Hono</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">put</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token string" style="color:#e3116c">'/users/:id'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">zValidator</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'param'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> paramSchema</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">zValidator</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'json'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> jsonSchema</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">c</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> id </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> c</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">req</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">valid</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'param'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> status </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> c</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">req</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">valid</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'json'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// 逻辑代码...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> c</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">json</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">default</span><span class="token plain"> app</span><br></span></code></pre><div class="buttonGroup_Aaa5"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rNxk" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_8vl6"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_uXRx"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>支持多种验证目标(param,query,json,header 等)，以及 TS 类型完备，这都不用多说。</p>
<p>但此时触发数据验证失败，响应的结果令人不是很满意。下图为访问 <code>/api/todo/xxx</code> 的响应结果（其中 xxx 不为 cuid 格式，因此抛出数据验证异常)</p>
<p><img decoding="async" loading="lazy" src="https://img.kuizuo.me/2024%2F0930171510-imageundefined2.png" alt="image.png" class="img_aT2B"></p>
<p>所返回的响应体是完整的 zodError 内容，并且状态码为 400</p>
<div class="theme-admonition theme-admonition-tip admonition_U9xL alert alert--success"><div class="admonitionHeading_EMc0"><span class="admonitionIcon_owc3"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>提示</div><div class="admonitionContent_bAfi"><p>数据验证失败的状态码通常为 <strong><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status/422" target="_blank" rel="noopener noreferrer">422</a></strong></p></div></div>
<p>因为 zod-validator 默认以 json 格式返回整个 result，代码详见 <a href="https://github.com/honojs/middleware/blob/main/packages/zod-validator/src/index.ts#L68-L70" target="_blank" rel="noopener noreferrer">zod-validator/src/index.ts#L68-L70</a></p>
<p>这就是坑点之一，返回给客户端的错误信息肯定不会是以这种格式。这里我将其更改为全局错误捕获，做法如下</p>
<ol>
<li>复制 <a href="https://github.com/honojs/middleware/blob/main/packages/zod-validator/src/index.ts" target="_blank" rel="noopener noreferrer">zod-validator 文件</a>并粘贴至 <code>server/api/validator.ts</code>，并将 return 语句更改为 throw 语句。</li>
</ol>
<div class="language-diff codeBlockContainer_rxDN theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_e6Y8"><pre tabindex="0" class="prism-code language-diff codeBlock_eEse thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_Uz_K"><span class="token-line" style="color:#393A34"><span class="token plain">   if (!result.success) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">-    return c.json(result, 400)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   if (!result.success) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+    throw result.error</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   }</span><br></span></code></pre><div class="buttonGroup_Aaa5"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rNxk" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_8vl6"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_uXRx"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ol start="2">
<li>在 <code>server/api/error.ts</code> 中，编写 handleError 函数用于统一处理异常。（后文前端请求也需要统一处理异常）</li>
</ol>
<div class="language-tsx codeBlockContainer_rxDN theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_e6Y8"><pre tabindex="0" class="prism-code language-tsx codeBlock_eEse thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_Uz_K"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> z </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'zod'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">type</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token maybe-class-name">Context</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'hono'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> </span><span class="token imports maybe-class-name">HTTPException</span><span class="token imports"> </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'hono/http-exception'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">handleError</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">err</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token known-class-name class-name">Error</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> c</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token maybe-class-name">Context</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token maybe-class-name">Response</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">err </span><span class="token keyword" style="color:#00009f">instanceof</span><span class="token plain"> </span><span class="token class-name">z</span><span class="token punctuation" style="color:#393A34">.</span><span class="token known-class-name class-name">ZodError</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> firstError </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> err</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">errors</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> c</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">json</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> code</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">422</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> message</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string string" style="color:#e3116c">\`</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation">firstError</span><span class="token template-string interpolation punctuation" style="color:#393A34">.</span><span class="token template-string interpolation">path</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string string" style="color:#e3116c">\`: </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation">firstError</span><span class="token template-string interpolation punctuation" style="color:#393A34">.</span><span class="token template-string interpolation">message</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token number" style="color:#36acaa">422</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// handle other error, e.g. ApiError</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> c</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">json</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      code</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">500</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      message</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'出了点问题, 请稍后再试。'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> status</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">500</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup_Aaa5"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rNxk" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_8vl6"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_uXRx"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ol start="3">
<li>在 <code>server/api/index.ts</code> ，也就是 hono app 对象中绑定错误捕获。</li>
</ol>
<div class="language-tsx codeBlockContainer_rxDN theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_e6Y8"><pre tabindex="0" class="prism-code language-tsx codeBlock_eEse thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_Uz_K"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> app </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">Hono</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">basePath</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'/api'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">app</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">onError</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">handleError</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup_Aaa5"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rNxk" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_8vl6"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_uXRx"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ol start="4">
<li>更改 zValidator 导入路径。</li>
</ol>
<div class="language-diff codeBlockContainer_rxDN theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_e6Y8"><pre tabindex="0" class="prism-code language-diff codeBlock_eEse thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_Uz_K"><span class="token-line" style="color:#393A34"><span class="token plain">- import { zValidator } from '@hono/zod-validator'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+ import { zValidator } from '@/server/api/validator'</span><br></span></code></pre><div class="buttonGroup_Aaa5"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rNxk" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_8vl6"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_uXRx"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>这样就将错误统一处理，响应体也自定义，且后续自定义业务错误也同样如此。</p>
<p><img decoding="async" loading="lazy" src="https://img.kuizuo.me/2024%2F1003095801-20241003095800.png" alt="" class="img_aT2B"></p>
<div class="theme-admonition theme-admonition-note admonition_U9xL alert alert--secondary"><div class="admonitionHeading_EMc0"><span class="admonitionIcon_owc3"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>顺带一提</div><div class="admonitionContent_bAfi"><p>如果需要让 zod 支持中文错误提示，可以使用 <a href="https://www.npmjs.com/package/zod-i18n-map" target="_blank" rel="noopener noreferrer">zod-i18n-map</a></p></div></div>
<h2 class="anchor anchorWithStickyNavbar_jpdk" id="rpc">RPC<a href="https://blog.wlgs.site/blog/nextjs-with-hono#rpc" class="hash-link" aria-label="RPC的直接链接" title="RPC的直接链接">​</a></h2>
<p>Hono 有个特性我很喜欢也很好用，可以像 <a href="https://trpc.io/" target="_blank" rel="noopener noreferrer">TRPC</a> 那样，导出一个 <a href="https://hono.dev/docs/guides/rpc#client" target="_blank" rel="noopener noreferrer">client</a> 供前端直接调用，省去编写前端 api 调用代码以及对应的类型。</p>
<p>这里我不想在过多叙述 RPC(可见我之前所写有关 <a href="https://kuizuo.me/blog/typescript-full-stack-technology-trpc#end-to-end-typesafe-apis%E7%AB%AF%E5%88%B0%E7%AB%AF%E7%B1%BB%E5%9E%8B%E5%AE%89%E5%85%A8" target="_blank" rel="noopener noreferrer">TRPC 的使用</a>)，直接来说说有哪些注意点。</p>
<h3 class="anchor anchorWithStickyNavbar_jpdk" id="链式调用">链式调用<a href="https://blog.wlgs.site/blog/nextjs-with-hono#%E9%93%BE%E5%BC%8F%E8%B0%83%E7%94%A8" class="hash-link" aria-label="链式调用的直接链接" title="链式调用的直接链接">​</a></h3>
<p>还是以 User CRUD 的代码为例，不难发现 <code>.get</code> <code>.post</code> <code>.put</code> 都是以链式调用的写法来写的，一旦拆分后，此时接口还是能够调用，但这将会丢失此时路由对应的类型，导致 client 无法使用获取正常类型，使用链式调用的 app 实例化对象则正常。</p>
<p><img decoding="async" loading="lazy" src="https://img.kuizuo.me/2024%2F0930171730-imageundefined3.png" alt="image.png" class="img_aT2B"></p>
<h3 class="anchor anchorWithStickyNavbar_jpdk" id="替换原生-fetch-库">替换原生 Fetch 库<a href="https://blog.wlgs.site/blog/nextjs-with-hono#%E6%9B%BF%E6%8D%A2%E5%8E%9F%E7%94%9F-fetch-%E5%BA%93" class="hash-link" aria-label="替换原生 Fetch 库的直接链接" title="替换原生 Fetch 库的直接链接">​</a></h3>
<p>hono 自带的 fetch 或者说原生的 fetch 非常难用，为了针对业务错误统一处理，因此需要选用请求库来替换，这里我的选择是 <a href="https://www.npmjs.com/package/ky" target="_blank" rel="noopener noreferrer">ky</a>，因为他的写法相对原生 fetch 更友好一些，并且不会破坏 hono 原有类型推导。</p>
<p>在 <code>lib/api-client.ts</code> 编写以下代码</p>
<div class="language-tsx codeBlockContainer_rxDN theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_e6Y8"><pre tabindex="0" class="prism-code language-tsx codeBlock_eEse thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_Uz_K"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> </span><span class="token imports maybe-class-name">AppType</span><span class="token imports"> </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'@/server/api'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> hc </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'hono/client'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports">ky</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'ky'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> baseUrl </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  process</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">env</span><span class="token punctuation" style="color:#393A34">.</span><span class="token constant" style="color:#36acaa">NODE_ENV</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'development'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">?</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'http://localhost:3000'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> process</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">env</span><span class="token punctuation" style="color:#393A34">.</span><span class="token constant" style="color:#36acaa">NEXT_PUBLIC_APP_URL</span><span class="token operator" style="color:#393A34">!</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> fetch </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> ky</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">extend</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  hooks</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    afterResponse</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">_</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> __</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> response</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token maybe-class-name">Response</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">response</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">ok</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> response</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token keyword" style="color:#00009f">throw</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> response</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">json</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> client </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token generic-function function" style="color:#d73a49">hc</span><span class="token generic-function generic class-name operator" style="color:#393A34">&lt;</span><span class="token generic-function generic class-name">AppType</span><span class="token generic-function generic class-name operator" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">baseUrl</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  fetch</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> fetch</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup_Aaa5"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rNxk" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_8vl6"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_uXRx"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>这里我是根据请求状态码来判断本次请求是否为异常，因此使用 response.ok，而响应体正好有 message 字段可直接用作 Error message 提示，这样就完成了前端请求异常处理。</p>
<p>至于说请求前自动添加协议头、请求后的数据转换，这就属于老生常谈的东西了，这里就不多赘述，根据实际需求编写即可。</p>
<h3 class="anchor anchorWithStickyNavbar_jpdk" id="请求体与响应体的类型推导">请求体与响应体的类型推导<a href="https://blog.wlgs.site/blog/nextjs-with-hono#%E8%AF%B7%E6%B1%82%E4%BD%93%E4%B8%8E%E5%93%8D%E5%BA%94%E4%BD%93%E7%9A%84%E7%B1%BB%E5%9E%8B%E6%8E%A8%E5%AF%BC" class="hash-link" aria-label="请求体与响应体的类型推导的直接链接" title="请求体与响应体的类型推导的直接链接">​</a></h3>
<p>配合 react-query 可以更好的获取类型安全。此写法与 tRPC 十分相似，相应代码 → <a href="https://trpc.io/docs/client/react/infer-types" target="_blank" rel="noopener noreferrer">Inferring Types</a></p>
<div class="language-tsx codeBlockContainer_rxDN theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_e6Y8"><pre tabindex="0" class="prism-code language-tsx codeBlock_eEse thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_Uz_K"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// hooks/users/use-user-create.ts</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> client </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'@/lib/api-client'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> </span><span class="token imports maybe-class-name">InferRequestType</span><span class="token imports punctuation" style="color:#393A34">,</span><span class="token imports"> </span><span class="token imports maybe-class-name">InferResponseType</span><span class="token imports"> </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'hono/client'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> useMutation </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'@tanstack/react-query'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> toast </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'sonner'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> $post </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> client</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">api</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">users</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">$post</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">type</span><span class="token plain"> </span><span class="token class-name">BodyType</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token maybe-class-name">InferRequestType</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token keyword" style="color:#00009f">typeof</span><span class="token plain"> $post</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'json'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">type</span><span class="token plain"> </span><span class="token class-name">ResponseType</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token maybe-class-name">InferResponseType</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token keyword" style="color:#00009f">typeof</span><span class="token plain"> $post</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'data'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token function-variable function" style="color:#d73a49">useUserCreate</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token generic-function function" style="color:#d73a49">useMutation</span><span class="token generic-function generic class-name operator" style="color:#393A34">&lt;</span><span class="token generic-function generic class-name">ResponseType</span><span class="token generic-function generic class-name punctuation" style="color:#393A34">,</span><span class="token generic-function generic class-name"> Error</span><span class="token generic-function generic class-name punctuation" style="color:#393A34">,</span><span class="token generic-function generic class-name"> BodyType</span><span class="token generic-function generic class-name operator" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    mutationKey</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'create-user'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function-variable function" style="color:#d73a49">mutationFn</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">json</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> data </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">$post</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> json </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">json</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> data</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function-variable function" style="color:#d73a49">onSuccess</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">data</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      toast</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">success</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'User created successfully'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function-variable function" style="color:#d73a49">onError</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">error</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      toast</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">error</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">error</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">message</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup_Aaa5"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rNxk" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_8vl6"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_uXRx"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>在 <code>app/users/page.tsx</code> 中的使用</p>
<div class="language-tsx codeBlockContainer_rxDN theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_e6Y8"><pre tabindex="0" class="prism-code language-tsx codeBlock_eEse thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_Uz_K"><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">'use client'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> useUserCreate </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'@/features/users/use-user-create'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">default</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">UsersPage</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> mutate</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> isPending </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">useUserCreate</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token function-variable function" style="color:#d73a49">handleSubmit</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">e</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token maybe-class-name">React</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access maybe-class-name">FormEvent</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token maybe-class-name">HTMLFormElement</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    e</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">preventDefault</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> formData </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">FormData</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">e</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">currentTarget</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> name </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> formData</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'name'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> email </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> formData</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'email'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">mutate</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> name</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> email </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">form</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">onSubmit</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f">handleSubmit</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">        </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">label</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">htmlFor</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">'</span><span class="token tag attr-value" style="color:#e3116c">name</span><span class="token tag attr-value punctuation" style="color:#393A34">'</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text">Name:</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">label</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">        </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">input</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">type</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">'</span><span class="token tag attr-value" style="color:#e3116c">text</span><span class="token tag attr-value punctuation" style="color:#393A34">'</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">id</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">'</span><span class="token tag attr-value" style="color:#e3116c">name</span><span class="token tag attr-value punctuation" style="color:#393A34">'</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">name</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">'</span><span class="token tag attr-value" style="color:#e3116c">name</span><span class="token tag attr-value punctuation" style="color:#393A34">'</span><span class="token tag" style="color:#00009f"> </span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">        </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">label</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">htmlFor</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">'</span><span class="token tag attr-value" style="color:#e3116c">email</span><span class="token tag attr-value punctuation" style="color:#393A34">'</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text">Email:</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">label</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">        </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">input</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">type</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">'</span><span class="token tag attr-value" style="color:#e3116c">email</span><span class="token tag attr-value punctuation" style="color:#393A34">'</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">id</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">'</span><span class="token tag attr-value" style="color:#e3116c">email</span><span class="token tag attr-value punctuation" style="color:#393A34">'</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">name</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">'</span><span class="token tag attr-value" style="color:#e3116c">email</span><span class="token tag attr-value punctuation" style="color:#393A34">'</span><span class="token tag" style="color:#00009f"> </span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">button</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">type</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">'</span><span class="token tag attr-value" style="color:#e3116c">submit</span><span class="token tag attr-value punctuation" style="color:#393A34">'</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">disabled</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f">isPending</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">        Create User</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">button</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">    </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">form</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup_Aaa5"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rNxk" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_8vl6"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_uXRx"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_jpdk" id="openapi-文档">OpenAPI 文档<a href="https://blog.wlgs.site/blog/nextjs-with-hono#openapi-%E6%96%87%E6%A1%A3" class="hash-link" aria-label="OpenAPI 文档的直接链接" title="OpenAPI 文档的直接链接">​</a></h2>
<blockquote>
<p>这部分我已经弃坑了，没找到一个很好的方式为 Hono 写 OpenAPI 文档。不过对于 TS 全栈开发者，似乎也没必要编写 API 文档（接口自给自足），更何况还有 RPC 这样的黑科技，不担心接口的请求参数与响应接口。</p>
</blockquote>
<p>如果你真要写，那我说说几个我遇到的坑，也是我弃坑的原因。</p>
<p>首先就是写法上，你需要将所有的 Hono 替换成 OpenAPIHono (来自 <a href="https://www.npmjs.com/package/@hono/zod-openapi" target="_blank" rel="noopener noreferrer">@hono/zod-openapi</a>， 其中 zod 实例 z 也是)。以下是官方的<a href="https://hono.dev/examples/zod-openapi" target="_blank" rel="noopener noreferrer">示例代码</a>，我将其整合到一个文件内</p>
<div class="language-tsx codeBlockContainer_rxDN theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_e6Y8"><pre tabindex="0" class="prism-code language-tsx codeBlock_eEse thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_Uz_K"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> createRoute</span><span class="token imports punctuation" style="color:#393A34">,</span><span class="token imports"> </span><span class="token imports maybe-class-name">OpenAPIHono</span><span class="token imports punctuation" style="color:#393A34">,</span><span class="token imports"> z </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'@hono/zod-openapi'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> swaggerUI </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'@hono/swagger-ui'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> app </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">OpenAPIHono</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token maybe-class-name">ParamsSchema</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> z</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">object</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  id</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> z</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">string</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">min</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">3</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">openapi</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      param</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        name</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'id'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">in</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'path'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      example</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'123'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token maybe-class-name">UserSchema</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> z</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">object</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    id</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> z</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">string</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">openapi</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> example</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'123'</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    name</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> z</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">string</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">openapi</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> example</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'John Doe'</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">openapi</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'User'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> route </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">createRoute</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  method</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'get'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  path</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'/api/users/{id}'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  request</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    params</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token maybe-class-name">ParamsSchema</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  responses</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token number" style="color:#36acaa">200</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      content</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token string-property property" style="color:#36acaa">'application/json'</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          schema</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token maybe-class-name">UserSchema</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      description</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'Retrieve the user'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">app</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">openapi</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">route</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">c</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> id </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> c</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">req</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">valid</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'param'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// 逻辑代码...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> user </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    id</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    name</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'Ultra-man'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> c</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">json</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">user</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup_Aaa5"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rNxk" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_8vl6"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_uXRx"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>从上述代码的可读性来看，第一眼你很难看到清晰的看出这个接口到底是什么请求方法、请求路径，并且在写法上需要使用 <code>.openapi</code> 方法，传入一个由 createRoute 所创建的 router 对象。并且写法上不是在原有基础上扩展，已有的代码想要通过<a href="https://apifox.com/blog/api-first-api-design-first-or-code-first/" target="_blank" rel="noopener noreferrer">代码优先</a>的方式来编写 OpenAPI 文档将要花费不小的工程，这也是我为何不推荐的原因。</p>
<p>定义完接口(路由)之后，只需要通过 app.doc 方法与 swaggerUI 函数，访问 /api/doc 查看 OpenAPI 的 JSON 数据，以及访问 /api/ui 查看 Swagger 界面。</p>
<div class="language-jsx codeBlockContainer_rxDN theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_e6Y8"><pre tabindex="0" class="prism-code language-jsx codeBlock_eEse thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_Uz_K"><span class="token-line" style="color:#393A34"><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> swaggerUI </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'@hono/swagger-ui'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">app</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">doc</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'/api/doc'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token literal-property property" style="color:#36acaa">openapi</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'3.0.0'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token literal-property property" style="color:#36acaa">info</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token literal-property property" style="color:#36acaa">version</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'1.0.0'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token literal-property property" style="color:#36acaa">title</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'Demo API'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">app</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'/api/ui'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">swaggerUI</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">url</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'/api/doc'</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup_Aaa5"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rNxk" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_8vl6"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_uXRx"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><img decoding="async" loading="lazy" src="https://img.kuizuo.me/2024%2F0930171730-imageundefined4.png" alt="image.png" class="img_aT2B"></p>
<p>从目前来看，OpenAPI 文档的生成仍面临挑战。我们期待 Hono 未来能推出一个功能，可以根据 app 下的路由自动生成接口文档（相关<a href="https://github.com/honojs/hono/issues/2970" target="_blank" rel="noopener noreferrer">Issue</a>已存在）。</p>
<h2 class="anchor anchorWithStickyNavbar_jpdk" id="仓库地址">仓库地址<a href="https://blog.wlgs.site/blog/nextjs-with-hono#%E4%BB%93%E5%BA%93%E5%9C%B0%E5%9D%80" class="hash-link" aria-label="仓库地址的直接链接" title="仓库地址的直接链接">​</a></h2>
<p>附上本文中示例 demo 仓库链接（这个项目就不搞线上访问了）</p>
<p><a href="https://github.com/kuizuo/nextjs-with-hono" target="_blank" rel="noopener noreferrer">https://github.com/kuizuo/nextjs-with-hono</a></p>
<h2 class="anchor anchorWithStickyNavbar_jpdk" id="后记">后记<a href="https://blog.wlgs.site/blog/nextjs-with-hono#%E5%90%8E%E8%AE%B0" class="hash-link" aria-label="后记的直接链接" title="后记的直接链接">​</a></h2>
<p>其实我还想写写 Auth、DB 这些服务集成的(这些都在我实际工作中实践并应用了)，或许是太久未写 Blog 导致手生了不少，这篇文章也是断断续续写了好几天。后续我将会出一版完整的我个人的 Nextjs 与 Hono 的最佳实践模版。</p>
<p>也说说我为什么会选用 Hono.js 作为后端服务, 其实就是 Next.js 的 API Route 实在是太难用了，加之轻量化，你完全可以将整个 Nextjs + Hono 服务部署在 Vercel 上，并且还能用上 <a href="https://vercel.com/docs/functions" target="_blank" rel="noopener noreferrer">Edge Functions</a> 的特性。(就是有点小贵)</p>
<p>但不过从我的 Nest.js 开发经验来看（也可能是习惯了 Spring Boot 那套三层架构开发形态），总觉得 Hono 差了点意思，说不出来的体验，可能这就是所谓的全栈框架的开发感受吧。</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[记 · 在 AI 公司入职一个月的体验与感悟]]></title>
            <link>https://blog.wlgs.site/blog/experience-of-an-ai-company</link>
            <guid>https://blog.wlgs.site/blog/experience-of-an-ai-company</guid>
            <pubDate>Mon, 10 Jun 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[作者已于 9 月 30 日离职，以下内容只发生于入职后的 1 个月，之后就过着如同牛马般的生活，日子又开始没有盼头了😔。]]></description>
            <content:encoded><![CDATA[<div class="theme-admonition theme-admonition-success admonition_U9xL alert alert--success"><div class="admonitionHeading_EMc0"><span class="admonitionIcon_owc3"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>前文提醒</div><div class="admonitionContent_bAfi"><p>作者已于 9 月 30 日离职，以下内容只发生于入职后的 1 个月，之后就过着如同牛马般的生活，日子又开始没有盼头了😔。</p></div></div>
<p>已经在一家 AI 公司入职了一个月，对坐班有些厌恶的我，没想到有一天也会开始通勤打卡。而经历了这一个月的工作，我对坐班的态度有所转变，开始理解这种工作方式对我的意义。是时候分享入职这期间的工作内容与感受。</p>
<h2 class="anchor anchorWithStickyNavbar_jpdk" id="背景">背景<a href="https://blog.wlgs.site/blog/experience-of-an-ai-company#%E8%83%8C%E6%99%AF" class="hash-link" aria-label="背景的直接链接" title="背景的直接链接">​</a></h2>
<p>直入正题，先说职位背景。该职位的技术要求大致如下，仅做参考。</p>
<div class="codeBlockContainer_rxDN theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_e6Y8"><pre tabindex="0" class="prism-code language-text codeBlock_eEse thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_Uz_K"><span class="token-line" style="color:#393A34"><span class="token plain">## 任职要求 </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">1. 本科及以上学历，计算机科学、软件工程等相关专业, 硕士优先； </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">2. 扎实的 HTML、CSS、JavaScript 基础(vanilla) 功底 ； </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">3. 熟练使用 React、React Native 和 Next.js 进行前端开发 </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">4. 了解前端性能优化技术，如代码压缩、懒加载等 </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">5. 熟悉前端工程化工具 </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">6. 具备良好的问题解决能力和团队协作精神 </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">7. 熟练阅读英文技术文档 </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">8. 有优异前端项目开发经验者优先 </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">## 加分项： </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">- 贡献开源社区 </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">- 有 AI 相关项目经验。 </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">- 有前端性能优化和 SEO 优化经验。 </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">- 有良好的产品思维和设计(UI/UX)意识。 </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">- 有同理心思维。</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">- 具有一定的审美感。</span><br></span></code></pre><div class="buttonGroup_Aaa5"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rNxk" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_8vl6"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_uXRx"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>很贴合国外主流的技术栈（至于为何，看后文便知），比较巧的是，我的 Web 全栈学习路线就是偏国外的技术栈。因此在技术栈上，这家公司是我喜欢的，恰巧又是 AI 开发，能让我尝试到一些前沿技术，也正好是想我折腾的。</p>
<h2 class="anchor anchorWithStickyNavbar_jpdk" id="求职经历">求职经历<a href="https://blog.wlgs.site/blog/experience-of-an-ai-company#%E6%B1%82%E8%81%8C%E7%BB%8F%E5%8E%86" class="hash-link" aria-label="求职经历的直接链接" title="求职经历的直接链接">​</a></h2>
<p>我是 Boss 直聘上找的（这里没给 boss 直聘打广告，我甚至还是第一次使用 boss 直聘），我有想过找人内推，但由于家庭因素被限定在福州这座城市，而内推的所在的城市往往都是那些一线城市，加上我的八股文和算法很不过关（我也很不情愿刷），到时候面试那关估计也不乐观。</p>
<p>因此就在 Boss 上碰碰运气，也顺带体验一下新人都是怎么找工作的。</p>
<p>从五一的时候开始准备简历和项目，在5号开始投简历，投递简历一关我是直接怼着工作经验1-3年的来投，而不是投应届或实习岗。因为我确实有一些工作经验，只不过不是正常的坐班打卡的形式，这在之前的博客中有说到。</p>
<p>在这期间共投了20多家，基本都是已读不回，就更别说投递简历了。后来我才了解到，原来 HR 回复消息是要花钱的，发布一个岗位也是。</p>
<p>唯一回复的还是我现在入职的这家，而且我还投了两份过去，一份是给 HR 的（没回），一份是给技术 leader 的（leader 回了）。</p>
<p><img decoding="async" loading="lazy" src="https://img.kuizuo.me/2024/0611021351-Untitled.png" alt="Untitled" class="img_aT2B"></p>
<h3 class="anchor anchorWithStickyNavbar_jpdk" id="面试被鸽">面试被鸽<a href="https://blog.wlgs.site/blog/experience-of-an-ai-company#%E9%9D%A2%E8%AF%95%E8%A2%AB%E9%B8%BD" class="hash-link" aria-label="面试被鸽的直接链接" title="面试被鸽的直接链接">​</a></h3>
<p>可能是由于当时这个岗位急招的原因，在 boss 直聘上也没多说什么，leader 就约明早 11 点来公司现场初步面试聊天一下。这期间还发生了一个小变故，我到公司了，可联系不上面试官，打了微信电话也无果。待了10来分钟后我就走了，等了约一个小时都没信息，那我大概率是被鸽了，还不提前和我通知一声，然后在boss上留下了这句评价🥲。</p>
<p><img decoding="async" loading="lazy" src="https://img.kuizuo.me/2024/0611021351-1a520a5a-c3b9-4049-bfcf-825113aa7b2c.png" alt="Untitled" class="img_aT2B"></p>
<p>初入职场，初次面试就这种情况，说真的我当时都有点心灰意冷了，我猜想是不是因为有其他合适的人选，于是就不招我了，就连信息也不给我打一个招呼，相当于把我拉黑似得。随后我就到附近的麦当劳花了 10 元的套餐安慰了一下自己，麦！</p>
<h3 class="anchor anchorWithStickyNavbar_jpdk" id="开始面试">开始面试<a href="https://blog.wlgs.site/blog/experience-of-an-ai-company#%E5%BC%80%E5%A7%8B%E9%9D%A2%E8%AF%95" class="hash-link" aria-label="开始面试的直接链接" title="开始面试的直接链接">​</a></h3>
<p>直到到下午一点多的时候，面试官回复我说当时他们在开会，期间不让携带电子设备。早上就当一面过了，问我下午有没有时间，直接二面技术面(code test)过了就直接拿offer。</p>
<p>这时我才知道，原来早上也仅仅只是我的猜想，但我还是有点不想去了，心情有点不太愉悦，但想了想也懒得计较了，过去就当聊天罢了。到了下午面试问的就偏前端基础、八股文那些问题，其实我回答的巨烂，确实也没好好刷题，也不喜欢刷题，就面试了。自己写代码是由业务环境下驱动的，并从中寻求最佳实践。但好在我的技术面是比较广的，很多前沿的前端相关的工具库或多或少都使用过，也能侃侃而谈，加上个人 blog 和 github 这两个大加分项。就进入到了一个代码考核测试，不限框架，不限规则，使用公司的电脑打开 codesandbox 写一个todo list，前提是不使用任何 AI 工具。</p>
<p>这不正好到了我的强项，之前学某个框架的时候，不知道写什么demo，就写 todo list 来练手😂。恰好这次我就使用 next.js app router + Tailwindcss 的模版并且使用 form 标签的 action 和 use server 来实现新增功能。 能体现出我有在使用 next.js，而且用上了一些新特性，就拿到 offer 了。</p>
<p><img decoding="async" loading="lazy" src="https://img.kuizuo.me/2024/0611021351-03100cc0-2b0a-4049-82ed-58cc46ac1717.png" alt="1000047893.jpg" class="img_aT2B"></p>
<p>听完之后是不是莫名的感觉这个 offer 拿的好像有点莫名其妙的感觉😂，不管怎么样结果是好的就行了。</p>
<p>不过拿到 offer 后，我并没有选择马上入职，经历了一次被鸽的经历，对该公司的印象带有一些怀疑。其次就是这是一家初创 AI 公司，规模不大，从应届生找工作的角度，第一份正式的工作的起点很关键，如果能直接进大厂，后续跳槽到其他公司大概率也不成问题。</p>
<p>但在当地我投递了 20 多家已读不回的情况下，加上这份已有的 offer 不等人（急招），加上我家里人给我推荐的工作内容我并不是很满意，于是思考了两天，最终还是选择入职了这家公司。</p>
<h3 class="anchor anchorWithStickyNavbar_jpdk" id="薪资">薪资<a href="https://blog.wlgs.site/blog/experience-of-an-ai-company#%E8%96%AA%E8%B5%84" class="hash-link" aria-label="薪资的直接链接" title="薪资的直接链接">​</a></h3>
<p>比较令我差异的是我与企业签订的直接劳动合同，可能是因为我直接投递 1-3 年的工作经验，但我此时的身份还是应届生，按理来说我应该是签订实习合同后，转正再签劳动合同，<del>难道说我已经提前转正了？</del>。不过也好，这样和学校的三方协议都可以不用签了，直接给劳动合同便可。</p>
<p>试用期 3 个月，薪资打 8 折。薪资在我当地还算 ok，但对于我而言并不理想。可能是会的比较多(<del>全栈</del>？全干！)，加上曾经赚过比这还高上许多的薪资，从内心的角度多少是有些不平衡。不过目前还是试用期，薪资这方面后续也能再谈。</p>
<p>接下来尤为重要的上班体验才是让我觉得没后悔入职这家公司。</p>
<h2 class="anchor anchorWithStickyNavbar_jpdk" id="上班体验">上班体验<a href="https://blog.wlgs.site/blog/experience-of-an-ai-company#%E4%B8%8A%E7%8F%AD%E4%BD%93%E9%AA%8C" class="hash-link" aria-label="上班体验的直接链接" title="上班体验的直接链接">​</a></h2>
<p>介绍一下公司部门的办公工具</p>
<p>办公管理：企业微信</p>
<p>团队协作：Slack</p>
<p>任务看板：Trello</p>
<p>代码仓库：Github</p>
<p>代码托管：Vercel</p>
<p>视频会议：Zoom</p>
<p>你会发现除了企业微信，其他的应用都是国外的。怎么看都不是一家国内的企业吧，这是因为我部门的 Leader 是海外留学的，这也就不难理解工具是国外应用，技术栈选型是 React 生态了。</p>
<p>入职的第一周部门开了个小会，就是简单介绍了一下部门的任务职责，每个成员自我介绍。重点是提供一个优质的学习环境，像是技术书籍，电子设备，UI 模版或是技术会议的门票等费用，只要对部门有利，能提升自己，都可以找他报销。</p>
<p>我已经找 Leader 报销了个 magic ui pro，大约 420 块，直接找财务刷卡，付款的感觉是真爽，我是真爱了🥰。</p>
<p><img decoding="async" loading="lazy" src="https://img.kuizuo.me/2024/0611021351-Untitled%201.png" alt="Untitled" class="img_aT2B"></p>
<p>几天后，公司来了一个阿里做 B 端低代码开发的同事，也是负责前端开发，这不，我可以间接和这个老哥那学习大厂相关经验，我还正愁着没大厂相关的经验😄。</p>
<p>我询问他来这家公司的原因，他说被裁了，在家接外包一年了，不稳定就准备找工作，恰好这家公司急招，于是就来了。</p>
<div class="theme-admonition theme-admonition-warning admonition_U9xL alert alert--warning"><div class="admonitionHeading_EMc0"><span class="admonitionIcon_owc3"><svg viewBox="0 0 16 16"><path fill-rule="evenodd" d="M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"></path></svg></span>补</div><div class="admonitionContent_bAfi"><p>端午节后，这位老哥提离职了，原因的话我就不具体说了，可能是因为年龄大了，不适合坐班了。虽然早有预感，但还是有点不舍。因为现在部门的前端重任都在我这了😭</p></div></div>
<h3 class="anchor anchorWithStickyNavbar_jpdk" id="团建">团建<a href="https://blog.wlgs.site/blog/experience-of-an-ai-company#%E5%9B%A2%E5%BB%BA" class="hash-link" aria-label="团建的直接链接" title="团建的直接链接">​</a></h3>
<p>在我入职的第一周周末 Leader 为整个部门安排团建，由于这个部门成立不到 2 周，来的都是新成员，让我们自己组个局，去外面吃个饭。</p>
<p>也是在团建的时候了解到同事的履历一个个都不简单，有 985 的，有海外留学的，有在阿里、网易待过的，还有我这不堪回首的经历 🤡。</p>
<p>后面原定在 61 安排整个公司的团建，但由于天气和周末时间去的人少的因素而取消了，这我就不多说了。</p>
<p>端午之后的第一个工作日的中午，补过端午节部门聚餐的，这我也不多说了。就是怎么感觉这频率有点不太对，然后实际项目产出也还停留在 Spring 1 的阶段，让我有些不自在。</p>
<h3 class="anchor anchorWithStickyNavbar_jpdk" id="福利">福利<a href="https://blog.wlgs.site/blog/experience-of-an-ai-company#%E7%A6%8F%E5%88%A9" class="hash-link" aria-label="福利的直接链接" title="福利的直接链接">​</a></h3>
<p>部门每个月都会定一个最佳员工奖，我很荣幸获得部门本月的最佳员工，也感谢部门成员的认可，奖励是 300 元奖金或一日自由假。</p>
<p><img decoding="async" loading="lazy" src="https://img.kuizuo.me/2024/0611021351-Untitled%202.png" alt="Untitled" class="img_aT2B"></p>
<p>甚至还有一张奖状，就是这奖状怎么有点像给小学生似的。（事后我才了解到这奖状还是用打印机打印的😂）</p>
<p><img decoding="async" loading="lazy" src="https://img.kuizuo.me/2024/0611021351-0da32f2a-c077-42c9-8a57-fff9f259187e.png" alt="Untitled" class="img_aT2B"></p>
<p>目前我已经能感受到最大的福利就是那个 magicui 动效库的模版，当然了，这个是要给公司的官网用上的，我也是蹭公司的福，给自己的站点用上了这个动效库。</p>
<p>此外像节日福利，如这次端午节，就是聚餐和发粽子，这也就没什么好说的。</p>
<h3 class="anchor anchorWithStickyNavbar_jpdk" id="通勤">通勤<a href="https://blog.wlgs.site/blog/experience-of-an-ai-company#%E9%80%9A%E5%8B%A4" class="hash-link" aria-label="通勤的直接链接" title="通勤的直接链接">​</a></h3>
<p>公司距离我租房的地方只有 2 公里，每日的通勤总时间大约 40 分钟，早上大约 8 点起床，我通常坐公交车到公司附近的早餐店吃个早饭，吃完差不多 8 点 40分~50 分。中午外卖就不说了。下午下班从公交车和走路做个选择，吃完饭回到家。</p>
<h3 class="anchor anchorWithStickyNavbar_jpdk" id="黑客松">黑客松<a href="https://blog.wlgs.site/blog/experience-of-an-ai-company#%E9%BB%91%E5%AE%A2%E6%9D%BE" class="hash-link" aria-label="黑客松的直接链接" title="黑客松的直接链接">​</a></h3>
<p>黑客松(hackathon)，也称编程马拉松比赛。我是第一次听说过这个词，Leader 给定两个选题一个是打造某市地铁智能出行，另一个是给某商场的提供贴心的购物体验，发挥自己近一个月所学的知识，去创造一个供用户使用的 AI 程序，月底交付，奖金 3000 元/小组，抽签分组。我们当时部门有个人提了一嘴，要不我们两小组自己商量一下，把奖金平分得了😂。</p>
<p>不过对于这个行为，我个人认为目的是为了激励员工之间协同合作，但同时也免不了技术上的内耗，毕竟这个比赛不是我们的主要工作内容。</p>
<h2 class="anchor anchorWithStickyNavbar_jpdk" id="工作内容">工作内容<a href="https://blog.wlgs.site/blog/experience-of-an-ai-company#%E5%B7%A5%E4%BD%9C%E5%86%85%E5%AE%B9" class="hash-link" aria-label="工作内容的直接链接" title="工作内容的直接链接">​</a></h2>
<p>我想肯定有很多人对 AI 开发的刻板印象是要会大模型开发，会懂得微调，会懂得人工智能算法。这个想法也没错，但从开发 AI 应用的角度，其实蛮需要前端的，尤其是会全栈框架的前端。</p>
<p>这里我不得不惊叹 next.js 的生态，很多 AI 相关的例子可以直接从 Vercel 的 <a href="https://vercel.com/templates?utm_source=next-site&amp;utm_medium=navbar&amp;utm_campaign=next_site_nav_templates&amp;framework=next.js&amp;type=ai" target="_blank" rel="noopener noreferrer">AI Template</a> 下学习，预览是否有你需要的功能，Clone 到本地，然后运行项目，对某些部分进行更改。搭建 AI 应用也是异常的快。</p>
<h3 class="anchor anchorWithStickyNavbar_jpdk" id="仿-ai-sdk-网站效果">仿 <a href="https://sdk.vercel.ai/prompt" target="_blank" rel="noopener noreferrer">AI SDK</a> 网站效果<a href="https://blog.wlgs.site/blog/experience-of-an-ai-company#%E4%BB%BF-ai-sdk-%E7%BD%91%E7%AB%99%E6%95%88%E6%9E%9C" class="hash-link" aria-label="仿-ai-sdk-网站效果的直接链接" title="仿-ai-sdk-网站效果的直接链接">​</a></h3>
<p>Leader 下发的一个任务，入职的前两周主要让我熟悉一些怎么使用 next.js 配合 vercel 的 ai sdk 来开发 AI 应用，如怎么调用 openai 的模型，实现一个 ai chatbot。给定了一个任务就是仿造 <a href="https://sdk.vercel.ai/prompt" target="_blank" rel="noopener noreferrer">AI SDK</a>，由于该项目没有开源，自然就只能另辟蹊径。</p>
<p>首先就是仿造页面了，这个作为前端开发，实现起来也算容易，更何况这个这个页面的样式使用 Tailwindcss 编写，直接通过审查元素仿造就行了。</p>
<p>其次在功能实现上，ai sdk 文档都提供了非常完善的解决方案，照着文档将代码稍微改写一下便可，具体的细节就不演示了。</p>
<h3 class="anchor anchorWithStickyNavbar_jpdk" id="官网首页">官网首页<a href="https://blog.wlgs.site/blog/experience-of-an-ai-company#%E5%AE%98%E7%BD%91%E9%A6%96%E9%A1%B5" class="hash-link" aria-label="官网首页的直接链接" title="官网首页的直接链接">​</a></h3>
<p>两周后开始正式项目开发了，首当其冲的就是官网页。</p>
<p>这里当时 Leader 问我有没有用过 Gatsbyjs，要用这个框架搭建一个官网。我表明我没用过，但我提了一嘴如果要搭建偏内容向的网站，可以考虑 Astro，我愿意折腾一番（我也一直想学 Astro 的）。不过最终在开发时间和成本的商讨下还是选择使用 next.js 来搭建，leader 还顺带给我推荐了一个动效库 magicui，叫我看看里面的案例，看看能不能给官网加点动效。 之后就有了上文提到报销 magicui 的事。</p>
<h3 class="anchor anchorWithStickyNavbar_jpdk" id="rag-bot">Rag bot<a href="https://blog.wlgs.site/blog/experience-of-an-ai-company#rag-bot" class="hash-link" aria-label="Rag bot的直接链接" title="Rag bot的直接链接">​</a></h3>
<p>篇幅实在有限，有关 <a href="https://aws.amazon.com/cn/what-is/retrieval-augmented-generation/" target="_blank" rel="noopener noreferrer">RAG</a> 的不做过多解释，它可以让你的 AI 应用更具有权威性，让数据的来源可靠，而非胡乱生成数据。</p>
<p>RAG 的基本流程就是：</p>
<ol>
<li>用户输入提问</li>
<li>检索：根据用户提问对 向量数据库 进行相似性检测，查找与回答用户问题最相关的内容</li>
<li>增强：根据检索的结果，生成 prompt。 一般都会涉及 “仅依赖下述信息源来回答问题” 这种限制 llm 参考信息源的语句，来减少幻想，让回答更加聚焦</li>
<li>生成：将增强后的 prompt 传递给 llm，返回数据给用户</li>
</ol>
<p>在这个应用开发中，借鉴了 <a href="https://github.com/datastax/ragbot-starter" target="_blank" rel="noopener noreferrer">ragbot-starter</a> 这个开源项目，同时向量数据库选用 datastax 公司的Astra DB。</p>
<p>恰好在开发这个应用的期间，我也正好在学习 Langchain.js，所以在数据处理这部分有点得心应手，目前应用还只停留在处理本地文件或用户上传的文件，只需要配置各种 <a href="https://js.langchain.com/v0.2/docs/integrations/document_loaders/file_loaders/" target="_blank" rel="noopener noreferrer">File Loader</a> 便可。</p>
<h3 class="anchor anchorWithStickyNavbar_jpdk" id="使用-rn-实现-chatbot">使用 RN 实现 chatbot<a href="https://blog.wlgs.site/blog/experience-of-an-ai-company#%E4%BD%BF%E7%94%A8-rn-%E5%AE%9E%E7%8E%B0-chatbot" class="hash-link" aria-label="使用 RN 实现 chatbot的直接链接" title="使用 RN 实现 chatbot的直接链接">​</a></h3>
<p>先看 Gif 效果。</p>
<p><img decoding="async" loading="lazy" src="https://img.kuizuo.me/2024/0612203208-demo.gif" alt="demo" class="img_aT2B"></p>
<p>第一次用 Screen Studio，显示的不是很好，还请见谅，主要就是实现一个流式文本效果。</p>
<p>这里简单说下怎么实现的，就用  <a href="https://github.com/mrzachnugent/react-native-reusables" target="_blank" rel="noopener noreferrer">react-native-reusables</a> 的模版(React native 的 Shadcn/ui) + <a href="https://github.com/zerodays/react-native-gen-ui" target="_blank" rel="noopener noreferrer">react-native-gen-ui</a> 实现的，不过后者的功能比较单一，后续估计要改代码了。代码就不贴了，我怕涉嫌代码泄露（其实已经泄露差不多了）。</p>
<h2 class="anchor anchorWithStickyNavbar_jpdk" id="收获">收获<a href="https://blog.wlgs.site/blog/experience-of-an-ai-company#%E6%94%B6%E8%8E%B7" class="hash-link" aria-label="收获的直接链接" title="收获的直接链接">​</a></h2>
<p>要我说最大的收获不是遇到一个氛围不错的公司，遇到一个好 leader，也不是接触 AI 开发从中学到了什么，更不是增进了我的技术栈。而是让我养成良好的习惯，开始正常一日三餐，开始作息规律，开始将工作与生活分离，身体状态也渐渐好了起来。</p>
<p>下图为 5 月的生物作息，基本都保持 0 点前入睡。（不过在我写这篇文章的时候已经两点了🥱）</p>
<p><img decoding="async" loading="lazy" src="https://img.kuizuo.me/2024/0611021351-Untitled%203.png" alt="Untitled" class="img_aT2B"></p>
<p>过去几年内我的作息与饮食都非常糟糕，能明显的感觉到状态有所下滑，编写代码的效率和能力也明显不如以前，有些力不从心。今年都快过去一半了，而我仅仅完成了2篇博文的写作，文章的输出效率明显不行😮‍💨。</p>
<p>在半年前我对自己当时的现状做了个分析，幻想着坐班或许能改变我当下的现状。如今经历了这一个月的坐班生活，可能是因为坐班而改变，也可能是公司的氛围，不管是那种，让我跳出我原有舒适区，重新拾起对新颖事物的兴趣，重新点燃学习某个技术的热情，重新找回了自我。</p>
<h2 class="anchor anchorWithStickyNavbar_jpdk" id="结尾">结尾<a href="https://blog.wlgs.site/blog/experience-of-an-ai-company#%E7%BB%93%E5%B0%BE" class="hash-link" aria-label="结尾的直接链接" title="结尾的直接链接">​</a></h2>
<p>在我还没找工作之前，从我几个同届毕业的同学和网友的反馈得知今年的就业环境异常险峻。不仅如此，我还在网络上看到了大量工作者对自身工作的抱怨与不满，这些现象让我在工作前让我对未来的就业前景感到了一些不安。</p>
<p>当我亲身入局感受一番，也不禁开始低声叹气。开始思考是什么原因导致了如今大环境不好的现象，人为的制造就业焦虑，还是当下现实本就如此。当我跳出思考，回到现实难道环境好就一定挣钱多，环境差就一定挣钱少吗？社会似乎并不是这么简单的等式。</p>
<p>我逐渐意识到，无论大环境如何，每个人的努力和选择仍是至关重要。在面对不确定性和挑战时，保持学习和进步的态度，以及寻找自己的核心竞争力，才是应对困境的关键。</p>
<p>真正的职业安全感并不完全来自于外部环境，而是来自于我们自身不断提升的能力和适应变化的灵活性。</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[React Native 开发心得分享]]></title>
            <link>https://blog.wlgs.site/blog/react-native-develop-experience</link>
            <guid>https://blog.wlgs.site/blog/react-native-develop-experience</guid>
            <pubDate>Tue, 14 May 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[最近研究了一下 React Native(简称RN)，并用它作为毕设项目（一个仿小红书的校园社交应用）。经过一段时间的折腾，对 RN 生态有了一些了解，是时候可以分享一些心得了。]]></description>
            <content:encoded><![CDATA[<p>最近研究了一下 React Native(简称RN)，并用它作为毕设项目（一个仿小红书的校园社交应用）。经过一段时间的折腾，对 RN 生态有了一些了解，是时候可以分享一些心得了。</p>
<p>代码仓库： <a href="https://github.com/kuizuo/youni" target="_blank" rel="noopener noreferrer">https://github.com/kuizuo/youni</a></p>
<h2 class="anchor anchorWithStickyNavbar_jpdk" id="为什么是-rn-而不是-flutter">为什么是 RN 而不是 Flutter？<a href="https://blog.wlgs.site/blog/react-native-develop-experience#%E4%B8%BA%E4%BB%80%E4%B9%88%E6%98%AF-rn-%E8%80%8C%E4%B8%8D%E6%98%AF-flutter" class="hash-link" aria-label="为什么是 RN 而不是 Flutter？的直接链接" title="为什么是 RN 而不是 Flutter？的直接链接">​</a></h2>
<p>很简单，就是技术栈问题。从开发角度而言，尤其还是对于前端开发人员，会 JS 且搞过 React ，那 RN 上手就十分友好，最起码有关 React 社区的逻辑库或状态库是可以使用的。</p>
<p>虽说 Flutter 的性能是会比 RN 好上不少，但抛开需求不谈，与其比性能不如比开发速度。很显然开发 RN 的效率比 开发 Flutter 高上不少。况且真在意性能的话，那多半就不会考虑跨平台技术了，而是直接考虑原生开发了。</p>
<p>再从需求考量，我所编写的应用更偏向于内容展示的 app，而不是编写一个手机电池监控或者内存监控的app，如果是后者，那这时选择任何跨平台开发都没有意义，像这些系统级别的API在跨平台开发基本不太可能实现的。</p>
<p>对于这两个跨平台技术的选择，应该考虑自身需求、开发成本、技术选型，没有最好的只有最适合的。如果有的选择，谁不会选择原生开发是吧。</p>
<p>但凭我自己接触 RN 以来，国内的 RN 资源甚少，反倒是 Flutter 资源很多，并且从这些相关资料来看，确实 Flutter 优于 RN，但还是那句话，这里就不再过多赘述了。</p>
<h2 class="anchor anchorWithStickyNavbar_jpdk" id="是否有必要学-react-native">是否有必要学 react-native？<a href="https://blog.wlgs.site/blog/react-native-develop-experience#%E6%98%AF%E5%90%A6%E6%9C%89%E5%BF%85%E8%A6%81%E5%AD%A6-react-native" class="hash-link" aria-label="是否有必要学 react-native？的直接链接" title="是否有必要学 react-native？的直接链接">​</a></h2>
<p>先说一个结论：<strong>RN ≠ 原生，别指望会个 react 就能写出靠谱的原生应用。</strong></p>
<p>就从我的开发经历来说，坑是真的多，但好在RN拥有庞大的线上社区，可以找到的几乎所有问题的答案。但国内的社区好像并不是很好，很多问题我都是在国外论坛中解决的。</p>
<p>如果你学习它是为了扩展其他平台的开发能力，那么还是可以学习一番的，会有另一番的收获。但如果学 RN 只是为了避免不用学 android 和 iOS 等原生技术就能写 app，那便不建议学习。抱着这心态的话前期开发可能不明显，但到了后面会踩很多坑，而且两眼一黑，因为你不懂 native 开发。</p>
<p>我的个人评价是 RN 只能作为 H5 手机页面运行在原生移动设备的一种展示形态。虽然本质不是，但其所展示的效果如同。RN 不仅仅只是 Web，但也止步于 Web。</p>
<p>顺带吐槽一番，React-Native 项目发布4年多了，还没有 1.0 版本么(¬_¬)</p>
<p>如果你想再继续了解 RN，那么就请往下看。</p>
<h2 class="anchor anchorWithStickyNavbar_jpdk" id="expo">Expo<a href="https://blog.wlgs.site/blog/react-native-develop-experience#expo" class="hash-link" aria-label="Expo的直接链接" title="Expo的直接链接">​</a></h2>
<p>Expo 是基于 React Native 并整合大量常用的 native module(<a href="https://docs.expo.dev/versions/latest/" target="_blank" rel="noopener noreferrer">Expo SDK</a>)，像原生的功能如相册，相机，蓝牙等功能，在 expo 都是直接集成的，相当于封装原生的api，暴露给js调用。因此你不用去了解原生开发的许多知识和坑点，上手即用便可。本地配置好应用所需的环境，就直接直接运行 RN 项目，开发十分方便。</p>
<p>此外 Expo 还提供了 <a href="https://docs.expo.dev/get-started/expo-go/#want-to-understand-how-expo-go-works" target="_blank" rel="noopener noreferrer">Expo Go App</a>，只需要在你的移动端设备中安装它，启动开发服务器并生成 QR 码。在浏览器打开 <a href="https://snack.expo.dev/" target="_blank" rel="noopener noreferrer">snack.expo.dev</a> ，点击 MyDevice，扫码并在 Expo app 中查看。</p>
<p><img decoding="async" loading="lazy" src="https://img.kuizuo.me/2024/0514104918-Untitled.png" alt="Untitled" class="img_aT2B"></p>
<p>会自动将该程序实时运行在你的移动端设备，意味着你更改代码也将会同步到Expo go 中。极大程度上提升 RN 的开发体验，尤其是在真机测试阶段。</p>
<p>Expo 官方还贴心的提供了云服务 <a href="https://docs.expo.dev/eas/" target="_blank" rel="noopener noreferrer">Expo Application Services</a> (EAS)，意为这你可以你可以将你的 RN 项目在托管在云服务上，来执行构建与发布等流程。</p>
<p>总之如今开发 RN 请毫不犹豫的使用上 Expo。</p>
<h2 class="anchor anchorWithStickyNavbar_jpdk" id="开发中遇到的一些坑点">开发中遇到的一些坑点<a href="https://blog.wlgs.site/blog/react-native-develop-experience#%E5%BC%80%E5%8F%91%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E5%9D%91%E7%82%B9" class="hash-link" aria-label="开发中遇到的一些坑点的直接链接" title="开发中遇到的一些坑点的直接链接">​</a></h2>
<p>实际开发中所遇到的坑点远不止下述所说，这里只列举几个相对有代表，坑比较深的点。甚至有很多坑都不是前端方面的知识了。</p>
<h2 class="anchor anchorWithStickyNavbar_jpdk" id="在-pnpm-下无法启动-android">在 pnpm 下无法启动 Android<a href="https://blog.wlgs.site/blog/react-native-develop-experience#%E5%9C%A8-pnpm-%E4%B8%8B%E6%97%A0%E6%B3%95%E5%90%AF%E5%8A%A8-android" class="hash-link" aria-label="在 pnpm 下无法启动 Android的直接链接" title="在 pnpm 下无法启动 Android的直接链接">​</a></h2>
<p>错误提示：Error: Unable to resolve module ./nxode_modules/expo/AppEntry</p>
<p>解决方案：在项目根目录创建 <code>.npmrc</code> ，内容如下</p>
<div class="language-tsx codeBlockContainer_rxDN theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_e6Y8"><pre tabindex="0" class="prism-code language-tsx codeBlock_eEse thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_Uz_K"><span class="token-line" style="color:#393A34"><span class="token plain">shamefully</span><span class="token operator" style="color:#393A34">-</span><span class="token plain">hoist</span><span class="token operator" style="color:#393A34">=</span><span class="token boolean" style="color:#36acaa">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">node</span><span class="token operator" style="color:#393A34">-</span><span class="token plain">linker</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">hoisted</span><br></span></code></pre><div class="buttonGroup_Aaa5"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rNxk" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_8vl6"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_uXRx"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>删除 node_modules 与 .expo 文件夹，重新安装依赖即可。</p>
<p>相关链接：<a href="https://github.com/expo/expo/issues/9591#issuecomment-1485871356" target="_blank" rel="noopener noreferrer">https://github.com/expo/expo/issues/9591#issuecomment-1485871356</a></p>
<h3 class="anchor anchorWithStickyNavbar_jpdk" id="样式问题">样式问题<a href="https://blog.wlgs.site/blog/react-native-develop-experience#%E6%A0%B7%E5%BC%8F%E9%97%AE%E9%A2%98" class="hash-link" aria-label="样式问题的直接链接" title="样式问题的直接链接">​</a></h3>
<p>在样式方面与传统的 Web 开发存在一定的区别。在 RN 中有两个主要组件，View 与 Text，可以理解为 Web 的 div 与 span。基本所有的 View 都是 flex 布局，想要让 View 组件占满通常不会使用 width: ’100%’ 或 height: ‘100%’，而是使用 flex: 1，例如一般都会带上这么一个样式。</p>
<div class="language-tsx codeBlockContainer_rxDN theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_e6Y8"><pre tabindex="0" class="prism-code language-tsx codeBlock_eEse thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_Uz_K"><span class="token-line" style="color:#393A34"><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag class-name" style="color:#00009f">View</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">style</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f"> felx</span><span class="token tag script language-javascript operator" style="color:#393A34">:</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript number" style="color:#36acaa">1</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><br></span></code></pre><div class="buttonGroup_Aaa5"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rNxk" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_8vl6"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_uXRx"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>如果样式问题就只是这样就好了，同一套样式在不同平台上所展示的效果都可能不大一样，尤其使用原生 Web 的样式，哪怕你用 style 编写，在 Web 网页也能成功显示效果，但是在 IOS 与 Android 中绝大多数情况下是不显示的。这会在后面介绍 Tailwindcss 相关库的时候会额外在提到一点。</p>
<h2 class="anchor anchorWithStickyNavbar_jpdk" id="文本必须要用-text-包裹">文本必须要用 Text 包裹<a href="https://blog.wlgs.site/blog/react-native-develop-experience#%E6%96%87%E6%9C%AC%E5%BF%85%E9%A1%BB%E8%A6%81%E7%94%A8-text-%E5%8C%85%E8%A3%B9" class="hash-link" aria-label="文本必须要用 Text 包裹的直接链接" title="文本必须要用 Text 包裹的直接链接">​</a></h2>
<p>如果不怎么做的话，会报错，如果只是这样倒还没什么。重点是错误提示并没有堆栈信息！就如下图所示</p>
<p><img decoding="async" loading="lazy" src="https://img.kuizuo.me/2024/0514104918-Untitled%201.png" alt="Untitled" class="img_aT2B"></p>
<p>这点对于开发体验而言并不友好。</p>
<h3 class="anchor anchorWithStickyNavbar_jpdk" id="模拟器无法请求本地-api">模拟器无法请求本地 api<a href="https://blog.wlgs.site/blog/react-native-develop-experience#%E6%A8%A1%E6%8B%9F%E5%99%A8%E6%97%A0%E6%B3%95%E8%AF%B7%E6%B1%82%E6%9C%AC%E5%9C%B0-api" class="hash-link" aria-label="模拟器无法请求本地 api的直接链接" title="模拟器无法请求本地 api的直接链接">​</a></h3>
<p>由于一开始是在 Web 端进行调试开发的，所以没留意到这个问题，直到切换到安卓模拟器之后发现模拟器无法请求本地后端服务，在IOS 端暂无这问题。因此需要做如下配置：</p>
<p>1、首先将模拟器内网切换到本地。</p>
<p>假设后端 api 地址为 <code>[http://localhost:6001](http://localhost:6001)</code>，正常情况下，开发环境下的调试主机可以通过如下方式获取</p>
<div class="language-tsx codeBlockContainer_rxDN theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_e6Y8"><pre tabindex="0" class="prism-code language-tsx codeBlock_eEse thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_Uz_K"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports maybe-class-name">Constants</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'expo-constants'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> debuggerHost </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token maybe-class-name">Constants</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">expoConfig</span><span class="token operator" style="color:#393A34">?.</span><span class="token plain">hostUri</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// 192.168.123.233:8081</span><br></span></code></pre><div class="buttonGroup_Aaa5"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rNxk" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_8vl6"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_uXRx"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>接着所要做的就是将 192.168.123.233:8081 替换成我们的目标端口 192.168.123.233:6001</p>
<p>这里以 axios 为例， 先为环境变量添加 <code>EXPO_PUBLIC_API_URL=http://localhost:6001</code>，具体替换的代码如下所示</p>
<div class="language-tsx codeBlockContainer_rxDN theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_e6Y8"><pre tabindex="0" class="prism-code language-tsx codeBlock_eEse thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_Uz_K"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> client </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> axios</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">create</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  baseURL</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">getApiUrl</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  timeout</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">5000</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">getApiUrl</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> apiUrl </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> process</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">env</span><span class="token punctuation" style="color:#393A34">.</span><span class="token constant" style="color:#36acaa">EXPO_PUBLIC_API_URL</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">replaceLocalhost</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">apiUrl</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">getLocalhost</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">localhost </span><span class="token operator" style="color:#393A34">!==</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">undefined</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> localhost</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> debuggerHost </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token maybe-class-name">Constants</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">expoConfig</span><span class="token operator" style="color:#393A34">?.</span><span class="token plain">hostUri</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// 192.168.123.233:8081</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  localhost </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> debuggerHost</span><span class="token operator" style="color:#393A34">?.</span><span class="token method function property-access" style="color:#d73a49">split</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">':'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">??</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'localhost'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> localhost</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">replaceLocalhost</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">address</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">PROTOCOL</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'http:'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> localhostRegex </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">RegExp</span><span class="token punctuation" style="color:#393A34">(</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation constant" style="color:#36acaa">PROTOCOL</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string string" style="color:#e3116c">\/\/localhost:</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'g'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> address</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">replace</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">localhostRegex</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation constant" style="color:#36acaa">PROTOCOL</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string string" style="color:#e3116c">//</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation function" style="color:#d73a49">getLocalhost</span><span class="token template-string interpolation punctuation" style="color:#393A34">(</span><span class="token template-string interpolation punctuation" style="color:#393A34">)</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string string" style="color:#e3116c">:</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup_Aaa5"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rNxk" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_8vl6"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_uXRx"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>2、端口转发</p>
<p>此外还需要执行以下命令转发端口。</p>
<div class="language-tsx codeBlockContainer_rxDN theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_e6Y8"><pre tabindex="0" class="prism-code language-tsx codeBlock_eEse thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_Uz_K"><span class="token-line" style="color:#393A34"><span class="token plain">adb reverse tcp</span><span class="token operator" style="color:#393A34">:</span><span class="token number" style="color:#36acaa">6001</span><span class="token plain"> tcp</span><span class="token operator" style="color:#393A34">:</span><span class="token number" style="color:#36acaa">6001</span><br></span></code></pre><div class="buttonGroup_Aaa5"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rNxk" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_8vl6"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_uXRx"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>此时安卓模拟器便可正常请求本地后端服务的资源，IOS 端并未有该问题。</p>
<h2 class="anchor anchorWithStickyNavbar_jpdk" id="组件库的选择">组件库的选择<a href="https://blog.wlgs.site/blog/react-native-develop-experience#%E7%BB%84%E4%BB%B6%E5%BA%93%E7%9A%84%E9%80%89%E6%8B%A9" class="hash-link" aria-label="组件库的选择的直接链接" title="组件库的选择的直接链接">​</a></h2>
<p>如今在 UI 的选择上，我是毫不犹豫选择 Tailwindcss，在 RN 使用 Tailwindcss 有两个库可以作为选择 <a href="https://github.com/marklawlor/nativewind" target="_blank" rel="noopener noreferrer">nativewind</a> 和 <a href="https://github.com/jaredh159/tailwind-react-native-classnames?tab=readme-ov-file" target="_blank" rel="noopener noreferrer">twrnc</a>。</p>
<h3 class="anchor anchorWithStickyNavbar_jpdk" id="nativewind">nativewind<a href="https://blog.wlgs.site/blog/react-native-develop-experience#nativewind" class="hash-link" aria-label="nativewind的直接链接" title="nativewind的直接链接">​</a></h3>
<p>nativewind 采用 Web 的 className 属性，其用法如同 Web 开发使用 Tailwindcss 的写法，这里便不过多展示了。</p>
<h3 class="anchor anchorWithStickyNavbar_jpdk" id="twrnc">twrnc<a href="https://blog.wlgs.site/blog/react-native-develop-experience#twrnc" class="hash-link" aria-label="twrnc的直接链接" title="twrnc的直接链接">​</a></h3>
<p>twrnc 的写法则有些不同，需要通过 tw 包装，然后填写到 style 中，就如下图所示</p>
<div class="language-tsx codeBlockContainer_rxDN theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_e6Y8"><pre tabindex="0" class="prism-code language-tsx codeBlock_eEse thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_Uz_K"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> </span><span class="token imports maybe-class-name">View</span><span class="token imports punctuation" style="color:#393A34">,</span><span class="token imports"> </span><span class="token imports maybe-class-name">Text</span><span class="token imports"> </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'react-native'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports">tw</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'twrnc'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token function-variable function" style="color:#d73a49">MyComponent</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag class-name" style="color:#00009f">View</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">style</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f">tw</span><span class="token tag script language-javascript template-string template-punctuation string" style="color:#e3116c">`</span><span class="token tag script language-javascript template-string string" style="color:#e3116c">p-4 android:pt-2 bg-white dark:bg-black</span><span class="token tag script language-javascript template-string template-punctuation string" style="color:#e3116c">`</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag class-name" style="color:#00009f">Text</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">style</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f">tw</span><span class="token tag script language-javascript template-string template-punctuation string" style="color:#e3116c">`</span><span class="token tag script language-javascript template-string string" style="color:#e3116c">text-md text-black dark:text-white</span><span class="token tag script language-javascript template-string template-punctuation string" style="color:#e3116c">`</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text">Hello World</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag class-name" style="color:#00009f">Text</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">  </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag class-name" style="color:#00009f">View</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup_Aaa5"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rNxk" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_8vl6"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_uXRx"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<div class="theme-admonition theme-admonition-danger admonition_U9xL alert alert--danger"><div class="admonitionHeading_EMc0"><span class="admonitionIcon_owc3"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"></path></svg></span>重点</div><div class="admonitionContent_bAfi"><p>但要值得注意的是，由于 RN 的组件样式中并不是完全兼容 Web 端，就比如说你想实现毛玻璃效果，通过 <a href="https://tailwindcss.com/docs/backdrop-blur" target="_blank" rel="noopener noreferrer">backdrop-blur</a> 原子类就可以轻松实现，但是在原生移动端并不能生效，其原因就是原生组件的 View 并没有毛玻璃效果，想要实现则需要使用 expo-blur 这个库。</p></div></div>
<p><strong>事实上有很多 Web 端支持的类，在移动端并不能生效，通常来说只适合用 Tailwindcss 来编写基本的宽高，内外边距等样式。</strong></p>
<h4 class="anchor anchorWithStickyNavbar_jpdk" id="这两个库的区别">这两个库的区别<a href="https://blog.wlgs.site/blog/react-native-develop-experience#%E8%BF%99%E4%B8%A4%E4%B8%AA%E5%BA%93%E7%9A%84%E5%8C%BA%E5%88%AB" class="hash-link" aria-label="这两个库的区别的直接链接" title="这两个库的区别的直接链接">​</a></h4>
<p>从 Web 开发使用的角度，nativewind 会更好用一些， npm 实际使用量也确实比 twrnc 来的多，但要在一些情况下，比如给<a href="https://www.nativewind.dev/v4/guides/third-party-components" target="_blank" rel="noopener noreferrer">第三方组件更改 props 的样式</a>情况下就会没有 twrnc 那么直观了，例如一些第三方组件有 xxxStyle 属性，例如 contentContainerStyle，这时 twrnc 就方便很多。</p>
<div class="language-tsx codeBlockContainer_rxDN theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_e6Y8"><pre tabindex="0" class="prism-code language-tsx codeBlock_eEse thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_Uz_K"><span class="token-line" style="color:#393A34"><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag class-name" style="color:#00009f">FlatList</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">style</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f">tw</span><span class="token tag script language-javascript template-string template-punctuation string" style="color:#e3116c">`</span><span class="token tag script language-javascript template-string string" style="color:#e3116c">flex-1</span><span class="token tag script language-javascript template-string template-punctuation string" style="color:#e3116c">`</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">contentContainerStyle</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f">tw</span><span class="token tag script language-javascript template-string template-punctuation string" style="color:#e3116c">`</span><span class="token tag script language-javascript template-string string" style="color:#e3116c">p-4</span><span class="token tag script language-javascript template-string template-punctuation string" style="color:#e3116c">`</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"> </span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><br></span></code></pre><div class="buttonGroup_Aaa5"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rNxk" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_8vl6"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_uXRx"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>而 nativewind 则繁琐许多，下图例子。</p>
<div class="language-tsx codeBlockContainer_rxDN theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_e6Y8"><pre tabindex="0" class="prism-code language-tsx codeBlock_eEse thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_Uz_K"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// This component has two 'style' props</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">ThirdPartyComponent</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> style</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> contentContainerStyle</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token spread operator" style="color:#393A34">...</span><span class="token plain">props </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag class-name" style="color:#00009f">FlatList</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">style</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f">style</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">contentContainerStyle</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f">contentContainerStyle</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"> </span><span class="token tag spread punctuation" style="color:#393A34">{</span><span class="token tag spread operator" style="color:#393A34">...</span><span class="token tag spread" style="color:#00009f">props</span><span class="token tag spread punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"> </span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// Call this once at the entry point of your app</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">remapProps</span><span class="token punctuation" style="color:#393A34">(</span><span class="token maybe-class-name">ThirdPartyComponent</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  className</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'style'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  contentContainerClassName</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'contentContainerStyle'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// Now you can use the component with NativeWind</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag class-name" style="color:#00009f">ThirdPartyComponent</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">className</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">p-5</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">contentContainerClassName</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">p-2</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><br></span></code></pre><div class="buttonGroup_Aaa5"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rNxk" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_8vl6"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_uXRx"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>再者，twrnc 可以使用动态变量，例如在 RN 中经常需要处理安全区域，如下写法在 twrnc 就支持，但 nativewind 则不生效。</p>
<div class="language-tsx codeBlockContainer_rxDN theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_e6Y8"><pre tabindex="0" class="prism-code language-tsx codeBlock_eEse thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_Uz_K"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> top </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">useSafeAreaInsets</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag class-name" style="color:#00009f">View</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">style</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f">tw</span><span class="token tag script language-javascript template-string template-punctuation string" style="color:#e3116c">`</span><span class="token tag script language-javascript template-string string" style="color:#e3116c">pt-[</span><span class="token tag script language-javascript template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token tag script language-javascript template-string interpolation" style="color:#00009f">top</span><span class="token tag script language-javascript template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token tag script language-javascript template-string string" style="color:#e3116c">]</span><span class="token tag script language-javascript template-string template-punctuation string" style="color:#e3116c">`</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"> // twrnc 支持</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text"></span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag class-name" style="color:#00009f">View</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">className</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript template-string template-punctuation string" style="color:#e3116c">`</span><span class="token tag script language-javascript template-string string" style="color:#e3116c">pt-[</span><span class="token tag script language-javascript template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token tag script language-javascript template-string interpolation" style="color:#00009f">top</span><span class="token tag script language-javascript template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token tag script language-javascript template-string string" style="color:#e3116c">]</span><span class="token tag script language-javascript template-string template-punctuation string" style="color:#e3116c">`</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"> // nativewind 不支持</span><br></span></code></pre><div class="buttonGroup_Aaa5"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rNxk" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_8vl6"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_uXRx"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_jpdk" id="tamagui不推荐">tamagui(不推荐)<a href="https://blog.wlgs.site/blog/react-native-develop-experience#tamagui%E4%B8%8D%E6%8E%A8%E8%8D%90" class="hash-link" aria-label="tamagui(不推荐)的直接链接" title="tamagui(不推荐)的直接链接">​</a></h3>
<p>我便提一下 tamagui 这个组件库。tamagui 看似很炫酷，但是实际配置的过程异常的繁琐，用起来也没有特别舒服，可以看以下示例代码。</p>
<div class="language-tsx codeBlockContainer_rxDN theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_e6Y8"><pre tabindex="0" class="prism-code language-tsx codeBlock_eEse thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_Uz_K"><span class="token-line" style="color:#393A34"><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag class-name" style="color:#00009f">XStack</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">flex</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript number" style="color:#36acaa">1</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">justifyContent</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">center</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">alignItems</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">center</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">gap</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">$2</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">  </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag class-name" style="color:#00009f">Button</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">size</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">$3</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">theme</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">active</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">    Active</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">  </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag class-name" style="color:#00009f">Button</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">  </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag class-name" style="color:#00009f">Button</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">size</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">$3</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">variant</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">outlined</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">    Outlined</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">  </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag class-name" style="color:#00009f">Button</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text"></span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag class-name" style="color:#00009f">XStack</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><br></span></code></pre><div class="buttonGroup_Aaa5"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rNxk" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_8vl6"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_uXRx"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>其效果就是一个容器内包含两个按钮，样式编写上则通过 prop 属性来实现，用过 unocss 的 <a href="https://unocss.dev/presets/attributify#attributify-mode" target="_blank" rel="noopener noreferrer">Attributify Mode</a> 应该会有些许熟悉，但还不那么一样。</p>
<p>并且他的主题系统使用极其的怪，采用 $number 的形式来定义尺寸(官方称 token)，重点是宽高和边距采用相同的 token 效果还不一样，贴个图。</p>
<p><img decoding="async" loading="lazy" src="https://img.kuizuo.me/2024/0514104918-Untitled%202.png" alt="Untitled" class="img_aT2B"></p>
<p>但他的颜色更是一言难尽了，从 color0 到 color11 的效果就如下图</p>
<p><img decoding="async" loading="lazy" src="https://img.kuizuo.me/2024/0514104918-Untitled%203.png" alt="Untitled" class="img_aT2B"></p>
<p>可能是因为我用惯了 Tailwindcss 那套颜色系统，所以很不能理解这套颜色系统，并且在我实际编写组件的过程也是异常的奇怪。</p>
<p>但最让我想吐槽的是官方还为此提供了一个主题系统配置的生成器网站，但只有 tamagui 的赞助者才能够使用，如果想要自己定义一个主题，就需要配置特别多的文件，总之就是很难用就对了。</p>
<p>顺带在贴一张 Provider 嵌套</p>
<p><img decoding="async" loading="lazy" src="https://img.kuizuo.me/2024/0514171536-0514092451-202405140924689.png" alt="provider" class="img_aT2B"></p>
<p>这里我就不得不提到我为啥一开始选用 tamagui 了(现已迁移到 gluestack-ui)，说实话我是有点后悔的，在一开始选定 UI 库的时候，我是选择 NativeWind 的，但后面无意刷到了 <a href="https://t4stack.com/" target="_blank" rel="noopener noreferrer">T4-stack</a> (算是被他坑了)，而它所用的便是 tamagui，并且一套代码跑 expo 与 next.js。于是便采用相同的项目结构以及 UI 库了。但事实上在我编写的过程中，想要一套代码就能实现跨三端(web,android,ios) 效果并不佳了，这在下一章便会说到。</p>
<h2 class="anchor anchorWithStickyNavbar_jpdk" id="gluestack-ui">gluestack-ui<a href="https://blog.wlgs.site/blog/react-native-develop-experience#gluestack-ui" class="hash-link" aria-label="gluestack-ui的直接链接" title="gluestack-ui的直接链接">​</a></h2>
<p>首先它与 tamagui 相似，也采用 token 的方式来定义尺寸样式，但该库所对标的 token 设计就是Tailwindcss。此外该 UI 提供 NativeWind 的定制方案，意味着你的项目中可以集成了 NativeWind 用 Tailwindcss 的方式编写组件(类似 shadcn/ui)，<strong>并且还在 X 上表示 gluestack-ui + NativeWind 组合就是 React Native 的 shadcn/ui</strong>。</p>
<p>因此我个人是比较看好的，不过目前该库目前还处于 Alpha 阶段，可以持续观望中。这个也是我目前最值得推荐的组件库。</p>
<h2 class="anchor anchorWithStickyNavbar_jpdk" id="react-native-和-nextjs-应用程序共享代码">React Native 和 Next.js 应用程序共享代码<a href="https://blog.wlgs.site/blog/react-native-develop-experience#react-native-%E5%92%8C-nextjs-%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E5%85%B1%E4%BA%AB%E4%BB%A3%E7%A0%81" class="hash-link" aria-label="React Native 和 Next.js 应用程序共享代码的直接链接" title="React Native 和 Next.js 应用程序共享代码的直接链接">​</a></h2>
<p>如果你想要在 React Native 和 Next.js 应用程序共享代码(UI，逻辑)，你可以考虑使用 <a href="https://solito.dev/" target="_blank" rel="noopener noreferrer">solito</a>。该库的写法上会更偏向于 next 的写法，举个例子。</p>
<p>比如说 Image 组件在 RN 写法如下</p>
<div class="language-tsx codeBlockContainer_rxDN theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_e6Y8"><pre tabindex="0" class="prism-code language-tsx codeBlock_eEse thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_Uz_K"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> </span><span class="token imports maybe-class-name">Image</span><span class="token imports"> </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'react-native'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag class-name" style="color:#00009f">Image</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">  </span><span class="token tag attr-name" style="color:#00a4db">style</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f">styles</span><span class="token tag script language-javascript punctuation" style="color:#393A34">.</span><span class="token tag script language-javascript property-access" style="color:#00009f">xxx</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">  </span><span class="token tag attr-name" style="color:#00a4db">source</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">    uri</span><span class="token tag script language-javascript operator" style="color:#393A34">:</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript string" style="color:#e3116c">'https://beatgig.com/image.png'</span><span class="token tag script language-javascript punctuation" style="color:#393A34">,</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">  </span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f"></span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><br></span></code></pre><div class="buttonGroup_Aaa5"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rNxk" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_8vl6"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_uXRx"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>next.js 的写法</p>
<div class="language-tsx codeBlockContainer_rxDN theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_e6Y8"><pre tabindex="0" class="prism-code language-tsx codeBlock_eEse thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_Uz_K"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports maybe-class-name">Image</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'next/image'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag class-name" style="color:#00009f">Image</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">src</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">https://beatgig.com/image.png</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">width</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript number" style="color:#36acaa">100</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">height</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript number" style="color:#36acaa">100</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"> </span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><br></span></code></pre><div class="buttonGroup_Aaa5"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rNxk" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_8vl6"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_uXRx"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>solito 的写法</p>
<div class="language-tsx codeBlockContainer_rxDN theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_e6Y8"><pre tabindex="0" class="prism-code language-tsx codeBlock_eEse thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_Uz_K"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> </span><span class="token imports maybe-class-name">SolitoImage</span><span class="token imports"> </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'solito/image'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag class-name" style="color:#00009f">SolitoImage</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">src</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">https://beatgig.com/image.png</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">height</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript number" style="color:#36acaa">100</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">width</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript number" style="color:#36acaa">100</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"> </span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><br></span></code></pre><div class="buttonGroup_Aaa5"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rNxk" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_8vl6"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_uXRx"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>这样 <code>SolitoImage</code> 会判断当前的仓库是 next.js 项目还是 RN 项目对不同的平台进行渲染，以做到同一个组件跨平台的开发，像 Link、useRouter 都是类似用法。</p>
<p>不过当你想要共享代码时，此时就必须得上 monorepo 了，通常目录结构如下图所示，你也可以到<a href="https://github.com/gluestack/solito-head-starter-kit" target="_blank" rel="noopener noreferrer">这个仓库</a>中查看。</p>
<div class="language-shell codeBlockContainer_rxDN theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_e6Y8"><pre tabindex="0" class="prism-code language-shell codeBlock_eEse thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_Uz_K"><span class="token-line" style="color:#393A34"><span class="token plain">├── apps</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│   ├── expo</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│   └── next</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">├── packages</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│   └── app</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│       ├── features</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│       ├── index.ts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│       ├── layouts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│       ├── package.json</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│       ├── provider</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│       └── screens</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">├── turbo.json</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">└── package.json</span><br></span></code></pre><div class="buttonGroup_Aaa5"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rNxk" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_8vl6"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_uXRx"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>packages/app 存放主要的公共业务代码，在 next 和 expo 中则直接通过 <code>@xxx/app</code> 子包来导入，具体可看代码，这里就不做过多介绍了。</p>
<h3 class="anchor anchorWithStickyNavbar_jpdk" id="处理平台差异">处理平台差异<a href="https://blog.wlgs.site/blog/react-native-develop-experience#%E5%A4%84%E7%90%86%E5%B9%B3%E5%8F%B0%E5%B7%AE%E5%BC%82" class="hash-link" aria-label="处理平台差异的直接链接" title="处理平台差异的直接链接">​</a></h3>
<p>不同平台之间必然会存在一定的开发差异，expo 也提供了相应的解决方案，可以通过给文件添加不同的后缀扩展(.web .android .ios) 以在对应平台执行对应文件，官方文档 <a href="https://docs.expo.dev/router/advanced/platform-specific-modules/#platform-specific-extensions" target="_blank" rel="noopener noreferrer">Platform specific extensions</a></p>
<h2 class="anchor anchorWithStickyNavbar_jpdk" id="一些库分享">一些库分享<a href="https://blog.wlgs.site/blog/react-native-develop-experience#%E4%B8%80%E4%BA%9B%E5%BA%93%E5%88%86%E4%BA%AB" class="hash-link" aria-label="一些库分享的直接链接" title="一些库分享的直接链接">​</a></h2>
<p>这里只会介绍这个库的用途，至于为什么选择这个而不是其他的，不想做过多的篇幅来解释。如果你用过比这更好的库，也可相互交流。</p>
<h3 class="anchor anchorWithStickyNavbar_jpdk" id="gorhombottom-sheet"><a href="https://github.com/gorhom/react-native-bottom-sheet" target="_blank" rel="noopener noreferrer">@gorhom/bottom-sheet</a><a href="https://blog.wlgs.site/blog/react-native-develop-experience#gorhombottom-sheet" class="hash-link" aria-label="gorhombottom-sheet的直接链接" title="gorhombottom-sheet的直接链接">​</a></h3>
<p>底部窗口，效果如图</p>
<p><img decoding="async" loading="lazy" src="https://raw.githubusercontent.com/gorhom/react-native-bottom-sheet/HEAD/preview.gif" alt="https://raw.githubusercontent.com/gorhom/react-native-bottom-sheet/HEAD/preview.gif" class="img_aT2B"></p>
<h3 class="anchor anchorWithStickyNavbar_jpdk" id="shopifyflash-list"><a href="https://github.com/Shopify/flash-list" target="_blank" rel="noopener noreferrer">@shopify/flash-list</a><a href="https://blog.wlgs.site/blog/react-native-develop-experience#shopifyflash-list" class="hash-link" aria-label="shopifyflash-list的直接链接" title="shopifyflash-list的直接链接">​</a></h3>
<p>一个高性能的列表，可替代 RN 的 <a href="https://reactnative.dev/docs/flatlist" target="_blank" rel="noopener noreferrer">FlatList</a>，其中它还支持如下图布局。</p>
<p><img decoding="async" loading="lazy" src="https://img.kuizuo.me/2024/0514104918-Untitled%204.png" alt="Untitled" class="img_aT2B"></p>
<p><a href="https://github.com/calintamas/react-native-toast-message" target="_blank" rel="noopener noreferrer">react-native-toast-message</a></p>
<p>toast 消息组件，轻量简单易用。</p>
<p><img decoding="async" loading="lazy" src="https://github.com/calintamas/react-native-toast-message/raw/main/docs/toast.gif" alt="https://github.com/calintamas/react-native-toast-message/raw/main/docs/toast.gif" class="img_aT2B"></p>
<p><a href="https://github.com/software-mansion/react-native-gesture-handler" target="_blank" rel="noopener noreferrer">react-native-gesture-handler</a></p>
<p>如果你觉得所编写的 RN 应用没有触摸反馈效果，那么可能需要尝试使用 这个库。例如，你可以使用 <a href="https://docs.swmansion.com/react-native-gesture-handler/docs/components/buttons/#rectbutton" target="_blank" rel="noopener noreferrer">RectButton</a> 来包装子元素来实现点击按钮波纹反馈效果。如下图所示</p>
<p><img decoding="async" loading="lazy" src="https://docs.swmansion.com/react-native-gesture-handler/gifs/samplebutton.gif" alt="https://docs.swmansion.com/react-native-gesture-handler/gifs/samplebutton.gif" class="img_aT2B"></p>
<p>此外像拖动组件、滑动删除、放大缩小图片等常见的手势操作，总之这个库都可以实现。</p>
<p><a href="https://github.com/software-mansion/react-native-reanimated" target="_blank" rel="noopener noreferrer">react-native-reanimated</a></p>
<p>RN 动画库，没啥好说的。</p>
<p>以上组件库可以说基本必装，能为 RN 应用使用体验提升一个档次。</p>
<h2 class="anchor anchorWithStickyNavbar_jpdk" id="一些案例组件分析">一些案例/组件分析<a href="https://blog.wlgs.site/blog/react-native-develop-experience#%E4%B8%80%E4%BA%9B%E6%A1%88%E4%BE%8B%E7%BB%84%E4%BB%B6%E5%88%86%E6%9E%90" class="hash-link" aria-label="一些案例/组件分析的直接链接" title="一些案例/组件分析的直接链接">​</a></h2>
<p>分享一些我在编写 RN 中的一些案例。该说不说，RN 的生态是真的可以，很多原生的解决办法几乎都有。</p>
<h2 class="anchor anchorWithStickyNavbar_jpdk" id="react-navigation"><a href="https://reactnavigation.org/" target="_blank" rel="noopener noreferrer">React Navigation</a><a href="https://blog.wlgs.site/blog/react-native-develop-experience#react-navigation" class="hash-link" aria-label="react-navigation的直接链接" title="react-navigation的直接链接">​</a></h2>
<p>在这个库你可以实现几乎所有的原生布局，如底部 tabs，左侧抽屉等，expo 是在此基础上进行包装的。</p>
<h3 class="anchor anchorWithStickyNavbar_jpdk" id="底部-tabs">底部 Tabs<a href="https://blog.wlgs.site/blog/react-native-develop-experience#%E5%BA%95%E9%83%A8-tabs" class="hash-link" aria-label="底部 Tabs的直接链接" title="底部 Tabs的直接链接">​</a></h3>
<p><img decoding="async" loading="lazy" src="https://docs.expo.dev/static/images/expo-router/tabs.png" alt="https://docs.expo.dev/static/images/expo-router/tabs.png" class="img_aT2B"></p>
<p>Expo <a href="https://docs.expo.dev/router/advanced/tabs/" target="_blank" rel="noopener noreferrer">自带案例</a>，实现效果也简单，这里不在赘述了。</p>
<h3 class="anchor anchorWithStickyNavbar_jpdk" id="左侧抽屉">左侧抽屉<a href="https://blog.wlgs.site/blog/react-native-develop-experience#%E5%B7%A6%E4%BE%A7%E6%8A%BD%E5%B1%89" class="hash-link" aria-label="左侧抽屉的直接链接" title="左侧抽屉的直接链接">​</a></h3>
<p><a href="https://reactnavigation.org/assets/navigators/drawer/drawer.mp4" target="_blank" rel="noopener noreferrer">https://reactnavigation.org/assets/navigators/drawer/drawer.mp4</a></p>
<p>expo 官方所提供的左侧抽屉是带导航的，也就是说你无法同时使用底部选项和左侧抽屉两个布局效果。因此想要同时使用这两种布局，就要使用 <a href="https://reactnavigation.org/docs/drawer-layout" target="_blank" rel="noopener noreferrer">Drawer Layout</a>，这里分享我个人的实现过程。</p>
<p>首先，编写 DrawerContainer 组件，代码如下</p>
<div class="language-tsx codeBlockContainer_rxDN theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_e6Y8"><pre tabindex="0" class="prism-code language-tsx codeBlock_eEse thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_Uz_K"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> </span><span class="token imports maybe-class-name">Drawer</span><span class="token imports"> </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'react-native-drawer-layout'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> useDrawerOpen </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'@/atoms/drawer'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports maybe-class-name">CustomDrawerContent</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'./CustomDrawerContent'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">DrawerContainer</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> children </span><span class="token punctuation" style="color:#393A34">}</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> children</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token maybe-class-name">React</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access maybe-class-name">ReactNode</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">open</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> setOpen</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">useDrawerOpen</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag class-name" style="color:#00009f">Drawer</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">      </span><span class="token tag attr-name" style="color:#00a4db">open</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f">open</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">      </span><span class="token tag attr-name" style="color:#00a4db">onOpen</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript punctuation" style="color:#393A34">(</span><span class="token tag script language-javascript punctuation" style="color:#393A34">)</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript arrow operator" style="color:#393A34">=&gt;</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript function" style="color:#d73a49">setOpen</span><span class="token tag script language-javascript punctuation" style="color:#393A34">(</span><span class="token tag script language-javascript boolean" style="color:#36acaa">true</span><span class="token tag script language-javascript punctuation" style="color:#393A34">)</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">      </span><span class="token tag attr-name" style="color:#00a4db">onClose</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript punctuation" style="color:#393A34">(</span><span class="token tag script language-javascript punctuation" style="color:#393A34">)</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript arrow operator" style="color:#393A34">=&gt;</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript function" style="color:#d73a49">setOpen</span><span class="token tag script language-javascript punctuation" style="color:#393A34">(</span><span class="token tag script language-javascript boolean" style="color:#36acaa">false</span><span class="token tag script language-javascript punctuation" style="color:#393A34">)</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">      </span><span class="token tag attr-name" style="color:#00a4db">swipeEnabled</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript boolean" style="color:#36acaa">false</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">      </span><span class="token tag attr-name" style="color:#00a4db">renderDrawerContent</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript punctuation" style="color:#393A34">(</span><span class="token tag script language-javascript punctuation" style="color:#393A34">)</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript arrow operator" style="color:#393A34">=&gt;</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript tag punctuation" style="color:#393A34">&lt;</span><span class="token tag script language-javascript tag class-name" style="color:#00009f">CustomDrawerContent</span><span class="token tag script language-javascript tag punctuation" style="color:#393A34">&gt;</span><span class="token tag script language-javascript tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag script language-javascript tag class-name" style="color:#00009f">CustomDrawerContent</span><span class="token tag script language-javascript tag punctuation" style="color:#393A34">&gt;</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">    </span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">      </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">children</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">    </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag class-name" style="color:#00009f">Drawer</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup_Aaa5"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rNxk" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_8vl6"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_uXRx"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>如果想要定制化左侧菜单就必须使用 CustomDrawerContent，这里贴相关代码</p>
<div class="language-tsx codeBlockContainer_rxDN theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_e6Y8"><pre tabindex="0" class="prism-code language-tsx codeBlock_eEse thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_Uz_K"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> </span><span class="token imports maybe-class-name">DrawerContentScrollView</span><span class="token imports punctuation" style="color:#393A34">,</span><span class="token imports"> </span><span class="token imports maybe-class-name">DrawerItem</span><span class="token imports"> </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'@react-navigation/drawer'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">default</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">CustomDrawerContent</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag class-name" style="color:#00009f">DrawerContentScrollView</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">      </span><span class="token tag attr-name" style="color:#00a4db">scrollEnabled</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript boolean" style="color:#36acaa">false</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">      </span><span class="token tag attr-name" style="color:#00a4db">contentContainerStyle</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">        flexGrow</span><span class="token tag script language-javascript operator" style="color:#393A34">:</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript number" style="color:#36acaa">1</span><span class="token tag script language-javascript punctuation" style="color:#393A34">,</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">      </span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">    </span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">      </span><span class="token punctuation" style="color:#393A34">{</span><span class="token comment" style="color:#999988;font-style:italic">/* &lt;DrawerItemList {...props} /&gt; */</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag class-name" style="color:#00009f">View</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">className</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">flex-1 mx-2</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">        </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag class-name" style="color:#00009f">DrawerItem</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">          </span><span class="token tag attr-name" style="color:#00a4db">label</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">子项 1</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">          </span><span class="token tag attr-name" style="color:#00a4db">onPress</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript punctuation" style="color:#393A34">(</span><span class="token tag script language-javascript punctuation" style="color:#393A34">)</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript arrow operator" style="color:#393A34">=&gt;</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">        </span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">        </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag class-name" style="color:#00009f">DrawerItem</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">          </span><span class="token tag attr-name" style="color:#00a4db">label</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">子项 2</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">          </span><span class="token tag attr-name" style="color:#00a4db">onPress</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript punctuation" style="color:#393A34">(</span><span class="token tag script language-javascript punctuation" style="color:#393A34">)</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript arrow operator" style="color:#393A34">=&gt;</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">        </span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">        </span><span class="token punctuation" style="color:#393A34">{</span><span class="token comment" style="color:#999988;font-style:italic">/* ... */</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag class-name" style="color:#00009f">VStack</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">    </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag class-name" style="color:#00009f">DrawerContentScrollView</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">  )</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">}</span><br></span></code></pre><div class="buttonGroup_Aaa5"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rNxk" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_8vl6"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_uXRx"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>最后在 app/_layout.tsx 中用 DrawerContainer 包装一下 Stack，如下代码。</p>
<div class="language-tsx codeBlockContainer_rxDN theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_e6Y8"><pre tabindex="0" class="prism-code language-tsx codeBlock_eEse thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_Uz_K"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> </span><span class="token imports maybe-class-name">Stack</span><span class="token imports"> </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'expo-router'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> </span><span class="token imports maybe-class-name">Provider</span><span class="token imports"> </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'@/provider'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> </span><span class="token imports maybe-class-name">DrawerContainer</span><span class="token imports"> </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'@/components/DrawerContainer'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">default</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">RootLayout</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag class-name" style="color:#00009f">Provider</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag class-name" style="color:#00009f">DrawerContainer</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">        </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag class-name" style="color:#00009f">Stack</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">          </span><span class="token tag attr-name" style="color:#00a4db">screenOptions</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">            headerShown</span><span class="token tag script language-javascript operator" style="color:#393A34">:</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript boolean" style="color:#36acaa">false</span><span class="token tag script language-javascript punctuation" style="color:#393A34">,</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">          </span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">        </span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag class-name" style="color:#00009f">Stack</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag class-name" style="color:#00009f">DrawerContainer</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">    </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag class-name" style="color:#00009f">Provider</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup_Aaa5"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rNxk" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_8vl6"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_uXRx"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>此时就可以用 useDrawerOpen（这里状态库选用 jotai）来控制左侧菜单的展开了。</p>
<h3 class="anchor anchorWithStickyNavbar_jpdk" id="tabview">TabView<a href="https://blog.wlgs.site/blog/react-native-develop-experience#tabview" class="hash-link" aria-label="TabView的直接链接" title="TabView的直接链接">​</a></h3>
<p><img decoding="async" loading="lazy" src="https://reactnavigation.org/assets/libraries/tab-view.gif" alt="https://reactnavigation.org/assets/libraries/tab-view.gif" class="img_aT2B"></p>
<p>同样的，这个效果在 <a href="https://reactnavigation.org/docs/tab-view" target="_blank" rel="noopener noreferrer">React Navigation</a> 也是有提供的。但在 expo 中有 react-native-pager-view作为平替，并且更兼容原生，但是 react-native-pager-view 是不支持 Web 端的，因此如何选择就看具体需求了。</p>
<h3 class="anchor anchorWithStickyNavbar_jpdk" id="固定-header--tab-view">固定 Header + tab view<a href="https://blog.wlgs.site/blog/react-native-develop-experience#%E5%9B%BA%E5%AE%9A-header--tab-view" class="hash-link" aria-label="固定 Header + tab view的直接链接" title="固定 Header + tab view的直接链接">​</a></h3>
<p>先看一张图，很多 app 都有这种类似的效果。</p>
<p><img decoding="async" loading="lazy" src="https://img.kuizuo.me/2024/0514171652-Untitled.mp4" alt="" class="img_aT2B"></p>
<p>这种效果可以使用监听 ScrollY 配合 <a href="https://github.com/software-mansion/react-native-reanimated" target="_blank" rel="noopener noreferrer">react-native-reanimated</a> 动画来实现，如果你不想自己实现也可以看看 <a href="https://react-native-header.codeherence.com/docs/showcase" target="_blank" rel="noopener noreferrer">@codeherence/react-native-header</a>，上图便来自此库。</p>
<p>此外我还留意到 <a href="https://netguru.github.io/sticky-parallax-header/docs/introduction/getting-started" target="_blank" rel="noopener noreferrer">TabbedHeaderPager</a> 这个库（很坑，别用），别看官方 gif 图效果很炫酷，然而实际效果并不达预期，并且十分难用，比如想要更改 tab 样式得像下方这样传递 props 编写。</p>
<div class="language-tsx codeBlockContainer_rxDN theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_e6Y8"><pre tabindex="0" class="prism-code language-tsx codeBlock_eEse thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_Uz_K"><span class="token-line" style="color:#393A34"><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag class-name" style="color:#00009f">TabbedHeaderPager</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">  </span><span class="token tag attr-name" style="color:#00a4db">tabTextStyle</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">    color</span><span class="token tag script language-javascript operator" style="color:#393A34">:</span><span class="token tag script language-javascript" style="color:#00009f"> theme</span><span class="token tag script language-javascript punctuation" style="color:#393A34">.</span><span class="token tag script language-javascript property-access" style="color:#00009f">color</span><span class="token tag script language-javascript operator" style="color:#393A34">?.</span><span class="token tag script language-javascript method function property-access" style="color:#d73a49">get</span><span class="token tag script language-javascript punctuation" style="color:#393A34">(</span><span class="token tag script language-javascript punctuation" style="color:#393A34">)</span><span class="token tag script language-javascript punctuation" style="color:#393A34">,</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">    padding</span><span class="token tag script language-javascript operator" style="color:#393A34">:</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript number" style="color:#36acaa">0</span><span class="token tag script language-javascript punctuation" style="color:#393A34">,</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">  </span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">  </span><span class="token tag attr-name" style="color:#00a4db">tabTextActiveStyle</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">    backgroundColor</span><span class="token tag script language-javascript operator" style="color:#393A34">:</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript string" style="color:#e3116c">'transparent'</span><span class="token tag script language-javascript punctuation" style="color:#393A34">,</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">  </span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">  </span><span class="token tag attr-name" style="color:#00a4db">tabTextContainerStyle</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">    padding</span><span class="token tag script language-javascript operator" style="color:#393A34">:</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript number" style="color:#36acaa">0</span><span class="token tag script language-javascript punctuation" style="color:#393A34">,</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">  </span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">  </span><span class="token tag attr-name" style="color:#00a4db">tabTextContainerActiveStyle</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">    backgroundColor</span><span class="token tag script language-javascript operator" style="color:#393A34">:</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript string" style="color:#e3116c">'transparent'</span><span class="token tag script language-javascript punctuation" style="color:#393A34">,</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">  </span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">  </span><span class="token tag attr-name" style="color:#00a4db">tabWrapperStyle</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">    paddingVertical</span><span class="token tag script language-javascript operator" style="color:#393A34">:</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript number" style="color:#36acaa">0</span><span class="token tag script language-javascript punctuation" style="color:#393A34">,</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">  </span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">  </span><span class="token tag attr-name" style="color:#00a4db">tabUnderlineColor</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f">primaryColor</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">  </span><span class="token tag attr-name" style="color:#00a4db">tabsContainerStyle</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">    backgroundColor</span><span class="token tag script language-javascript operator" style="color:#393A34">:</span><span class="token tag script language-javascript" style="color:#00009f"> bgColor</span><span class="token tag script language-javascript punctuation" style="color:#393A34">,</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">    flex</span><span class="token tag script language-javascript operator" style="color:#393A34">:</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript number" style="color:#36acaa">1</span><span class="token tag script language-javascript punctuation" style="color:#393A34">,</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">    maxWidth</span><span class="token tag script language-javascript operator" style="color:#393A34">:</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript maybe-class-name" style="color:#00009f">Platform</span><span class="token tag script language-javascript punctuation" style="color:#393A34">.</span><span class="token tag script language-javascript method function property-access" style="color:#d73a49">select</span><span class="token tag script language-javascript punctuation" style="color:#393A34">(</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">      web</span><span class="token tag script language-javascript operator" style="color:#393A34">:</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript number" style="color:#36acaa">200</span><span class="token tag script language-javascript punctuation" style="color:#393A34">,</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">    </span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag script language-javascript punctuation" style="color:#393A34">)</span><span class="token tag script language-javascript punctuation" style="color:#393A34">,</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">    margin</span><span class="token tag script language-javascript operator" style="color:#393A34">:</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript maybe-class-name" style="color:#00009f">Platform</span><span class="token tag script language-javascript punctuation" style="color:#393A34">.</span><span class="token tag script language-javascript method function property-access" style="color:#d73a49">select</span><span class="token tag script language-javascript punctuation" style="color:#393A34">(</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">      web</span><span class="token tag script language-javascript operator" style="color:#393A34">:</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript string" style="color:#e3116c">'auto'</span><span class="token tag script language-javascript punctuation" style="color:#393A34">,</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">    </span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag script language-javascript punctuation" style="color:#393A34">)</span><span class="token tag script language-javascript punctuation" style="color:#393A34">,</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">  </span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">  </span><span class="token tag attr-name" style="color:#00a4db">tabsContainerHorizontalPadding</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript maybe-class-name" style="color:#00009f">Platform</span><span class="token tag script language-javascript punctuation" style="color:#393A34">.</span><span class="token tag script language-javascript method function property-access" style="color:#d73a49">select</span><span class="token tag script language-javascript punctuation" style="color:#393A34">(</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">    </span><span class="token tag script language-javascript keyword" style="color:#00009f">default</span><span class="token tag script language-javascript operator" style="color:#393A34">:</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript number" style="color:#36acaa">120</span><span class="token tag script language-javascript punctuation" style="color:#393A34">,</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">    web</span><span class="token tag script language-javascript operator" style="color:#393A34">:</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript number" style="color:#36acaa">0</span><span class="token tag script language-javascript punctuation" style="color:#393A34">,</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">  </span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag script language-javascript punctuation" style="color:#393A34">)</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">  </span><span class="token tag attr-name" style="color:#00a4db">contentContainerStyle</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">    flex</span><span class="token tag script language-javascript operator" style="color:#393A34">:</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript number" style="color:#36acaa">1</span><span class="token tag script language-javascript punctuation" style="color:#393A34">,</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">  </span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f"></span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><br></span></code></pre><div class="buttonGroup_Aaa5"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rNxk" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_8vl6"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_uXRx"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_jpdk" id="rn-原生开发的感悟">RN 原生开发的感悟<a href="https://blog.wlgs.site/blog/react-native-develop-experience#rn-%E5%8E%9F%E7%94%9F%E5%BC%80%E5%8F%91%E7%9A%84%E6%84%9F%E6%82%9F" class="hash-link" aria-label="RN 原生开发的感悟的直接链接" title="RN 原生开发的感悟的直接链接">​</a></h2>
<p>在这段的 RN 开发经历，我还有很多 API 还未尝试，有很多开发上的细节没编写到。篇幅有限，未来如果还有机会编写 RN 项目，再做一些分享(我觉得应该不会有了)。</p>
<p>我曾与安卓开发打过两次交道:</p>
<p>一段是在学习安卓逆向的时候，免不了学习一些基础的原生安卓开发的知识。</p>
<p>另一段是在接触自动化开发的时候，看到了 <a href="https://www.wuyunai.com/docs/" target="_blank" rel="noopener noreferrer">Auto.js</a> 这个库， 可以使用 JavaScript 和 Node.js 实现小型的安卓应用（不支持 IOS），更多是使用这个库来编写一些脚本类相关的应用。现在回看该库的文档，不由得开始莫名的感叹。</p>
<blockquote>
<p>Auto.js Pro 移除了自动化测试、图片处理、消息通知等模块，如果你需要实现的是自动化、工作流工具，则不适合 Auto.js Pro。</p>
</blockquote>
<p>在如今内卷的环境下，技术框架变化飞快，文档示例不断完善，服务商们也提供快速搭建应用的模版，又赶上了 AI 热潮，学习一件新东西对于初学者过于容易。随之而来的是开发人员变多，市场需求不足难以满足如此庞大的开发人员，貌似技术对开发人员本身也不是那么的重要？</p>
<p>对于技术人员要如何破局，或许是每位程序员的最值得思考的问题。</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[有了 Prisma 就别用 TypeORM 了]]></title>
            <link>https://blog.wlgs.site/blog/with-prisma-dont-use-typeorm</link>
            <guid>https://blog.wlgs.site/blog/with-prisma-dont-use-typeorm</guid>
            <pubDate>Sat, 13 Jan 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[要说 2024 年 Node.js 的 ORM 框架应该选择哪个？毫无疑问选 Prisma。至于为何，请听我细细道来。]]></description>
            <content:encoded><![CDATA[<p>要说 2024 年 Node.js 的 ORM 框架应该选择哪个？毫无疑问选 Prisma。至于为何，请听我细细道来。</p>
<p>本文面向的对象是饱受 TypeORM 折磨的资深用户(说的便是我自己)。只对这两个 ORM 框架从开发体验上进行对比，你也可以到 <a href="https://www.prisma.io/docs/orm/more/comparisons/prisma-and-typeorm" target="_blank" rel="noopener noreferrer">这里</a> 查看 Prisma 官方对这两个 ORM 框架的对比。</p>
<h2 class="anchor anchorWithStickyNavbar_jpdk" id="整体对比">整体对比<a href="https://blog.wlgs.site/blog/with-prisma-dont-use-typeorm#%E6%95%B4%E4%BD%93%E5%AF%B9%E6%AF%94" class="hash-link" aria-label="整体对比的直接链接" title="整体对比的直接链接">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_jpdk" id="更新频率--下载量">更新频率 &amp; 下载量<a href="https://blog.wlgs.site/blog/with-prisma-dont-use-typeorm#%E6%9B%B4%E6%96%B0%E9%A2%91%E7%8E%87--%E4%B8%8B%E8%BD%BD%E9%87%8F" class="hash-link" aria-label="更新频率 &amp; 下载量的直接链接" title="更新频率 &amp; 下载量的直接链接">​</a></h3>
<p>TypeORM 距离上次更新已经过去半年之久了（下图截取自 24 年 1 月 1 日，没想到年初竟然还复活了）</p>
<p><img decoding="async" loading="lazy" src="https://img.kuizuo.me/2024/0113165614-Untitled.png" alt="Untitled" class="img_aT2B"></p>
<p>从下载量以及 star 数来看，如今 Prisma 已经超过 TypeORM，这很大一部分的功劳归功于像 Next.js、Nuxt.js 这样的全栈框架。</p>
<p><img decoding="async" loading="lazy" src="https://img.kuizuo.me/2024/0113165632-Untitled%201.png" alt="Untitled" class="img_aT2B"></p>
<p>上图来源 <a href="https://npmtrends.com/prisma-vs-typeorm" target="_blank" rel="noopener noreferrer">https://npmtrends.com/prisma-vs-typeorm</a></p>
<p>而在 Nest.js 的 <a href="https://discord.com/channels/520622812742811698/1156124199874732033" target="_blank" rel="noopener noreferrer">Discord 社区</a> 讨论之中，Prisma 也成为诸多 Nest.js 开发者首选的 ORM 框架，因为它有着更好的开发体验。</p>
<p>在大势所趋之下相信你内心已经有一份属于自己的答案。</p>
<h3 class="anchor anchorWithStickyNavbar_jpdk" id="文档--生态">文档 &amp; 生态<a href="https://blog.wlgs.site/blog/with-prisma-dont-use-typeorm#%E6%96%87%E6%A1%A3--%E7%94%9F%E6%80%81" class="hash-link" aria-label="文档 &amp; 生态的直接链接" title="文档 &amp; 生态的直接链接">​</a></h3>
<p>从文档的细致程度上 Prisma 比 TypeORM 要清晰详尽。在 <a href="https://www.prisma.io/docs/getting-started" target="_blank" rel="noopener noreferrer">Get started</a> 花个数十分钟了解 Prisma 基本使用，到 <a href="https://playground.prisma.io/" target="_blank" rel="noopener noreferrer">playground.prisma.io</a> 中在线尝试，到 <a href="https://www.prisma.io/learn" target="_blank" rel="noopener noreferrer">learn</a> 查看官方所提供的免费教程。</p>
<p>此外 Prisma 不仅支持 js/ts 生态，还支持其他语言。丰富的<a href="https://www.prisma.io/ecosystem" target="_blank" rel="noopener noreferrer">生态</a>下，加之 Prisma 开发团队的背后是由商业公司维护，无需担心需求得不到解决。</p>
<p><img decoding="async" loading="lazy" src="https://img.kuizuo.me/2024/0113165658-Untitled%202.png" alt="Untitled" class="img_aT2B"></p>
<h2 class="anchor anchorWithStickyNavbar_jpdk" id="开发体验对比">开发体验对比<a href="https://blog.wlgs.site/blog/with-prisma-dont-use-typeorm#%E5%BC%80%E5%8F%91%E4%BD%93%E9%AA%8C%E5%AF%B9%E6%AF%94" class="hash-link" aria-label="开发体验对比的直接链接" title="开发体验对比的直接链接">​</a></h2>
<p>在从开发体验上对比之前，我想先说说 TypeORM 都有哪些坑(不足)。</p>
<h3 class="anchor anchorWithStickyNavbar_jpdk" id="findoneundefined-所查询到的却是第一条记录">findOne(undefined) 所查询到的却是第一条记录<a href="https://blog.wlgs.site/blog/with-prisma-dont-use-typeorm#findoneundefined-%E6%89%80%E6%9F%A5%E8%AF%A2%E5%88%B0%E7%9A%84%E5%8D%B4%E6%98%AF%E7%AC%AC%E4%B8%80%E6%9D%A1%E8%AE%B0%E5%BD%95" class="hash-link" aria-label="findOne(undefined) 所查询到的却是第一条记录的直接链接" title="findOne(undefined) 所查询到的却是第一条记录的直接链接">​</a></h3>
<p>首先 TypeORM 有个天坑，你可以在 这个 <a href="https://github.com/typeorm/typeorm/issues/2500" target="_blank" rel="noopener noreferrer">Issue</a> 中查看详情或查看 <a href="https://pietrzakadrian.com/blog/how-to-hack-your-nodejs-application-which-uses-typeorsm" target="_blank" rel="noopener noreferrer">这篇文章</a> 是如何破解使用 TypeORM 的 Node.js 应用。</p>
<p>当你使用 <code>userRepository.findOne({ where: { id: null } })</code> 时，从开发者的预期来看所返回的结果应该为 null 才对，但结果却是大跌眼镜，结果所返回的是 user 表中的第一个数据记录！</p>
<p>你可能会说，这不是 bug 吗？为何官方还不修。事实上确实是 bug，而事实上官方到目前也还没修复该 bug。再结合上文提到的更新频率，哦，那没事了。</p>
<p>目前解决方法则是用 <code>createQueryBuilder().where({ id }).getOne()</code> 平替上一条语句或者确保查询参数不为 undefined。从这也可以看的出，TypeORM 在现今或许并不是一个很好的选择。</p>
<h3 class="anchor anchorWithStickyNavbar_jpdk" id="synchronize-true-导致数据丢失">synchronize: true 导致数据丢失<a href="https://blog.wlgs.site/blog/with-prisma-dont-use-typeorm#synchronize-true-%E5%AF%BC%E8%87%B4%E6%95%B0%E6%8D%AE%E4%B8%A2%E5%A4%B1" class="hash-link" aria-label="synchronize: true 导致数据丢失的直接链接" title="synchronize: true 导致数据丢失的直接链接">​</a></h3>
<p><code>synchronize</code> 表示数据库的结构是否和代码保持同步，官方提及到请不要在生产环境中使用，但在开发阶段这也并不是一个很好的做法。举个例子，有这么一个实体</p>
<div class="language-ts codeBlockContainer_rxDN theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_i2h9">user.entity.ts</div><div class="codeBlockContent_e6Y8"><pre tabindex="0" class="prism-code language-ts codeBlock_eEse thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_Uz_K"><span class="token-line" style="color:#393A34"><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">Entity</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">User</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">PrimaryGeneratedColumn</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  id</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">number</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">Column</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  name</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup_Aaa5"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rNxk" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_8vl6"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_uXRx"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>当开启了 <code>synchronize: true</code>，并且将 <code>name</code> 更改为 <code>title</code> 时，一旦运行 nest 服务后就会发现原有 <code>name</code> 下的数据全都丢失了！如图所示</p>
<p><img decoding="async" loading="lazy" src="https://img.kuizuo.me/2024/0113165658-Untitled%203.png" alt="Untitled" class="img_aT2B"></p>
<p>因为 TypeORM 针对上述操作的 sql 语句是这样的</p>
<div class="language-sql codeBlockContainer_rxDN theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_e6Y8"><pre tabindex="0" class="prism-code language-sql codeBlock_eEse thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_Uz_K"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">ALTER</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">TABLE</span><span class="token plain"> </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">user</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token plain"> CHANGE </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">name</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token plain"> </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">title</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">varchar</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">255</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">NOT</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">NULL</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">ALTER</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">TABLE</span><span class="token plain"> </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">user</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">DROP</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">COLUMN</span><span class="token plain"> </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">title</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">ALTER</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">TABLE</span><span class="token plain"> </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">user</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">ADD</span><span class="token plain"> </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">title</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">varchar</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">255</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">NOT</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">NULL</span><br></span></code></pre><div class="buttonGroup_Aaa5"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rNxk" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_8vl6"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_uXRx"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>也就是说，当你在开发环境中，修改某个字段（包括名字，属性）时，该字段原有的数据便会清空。</p>
<p>因此针对数据库更新的操作最正确的做法是使用迁移(migrate)。</p>
<h3 class="anchor anchorWithStickyNavbar_jpdk" id="接入成本">接入成本<a href="https://blog.wlgs.site/blog/with-prisma-dont-use-typeorm#%E6%8E%A5%E5%85%A5%E6%88%90%E6%9C%AC" class="hash-link" aria-label="接入成本的直接链接" title="接入成本的直接链接">​</a></h3>
<p>在 Nest 项目中，Prisma 的接入成本远比 TypeORM 来的容易许多。</p>
<p>相信你一定有在 <code>xxx.module.ts</code> 中在 imports 中导入 <code>TypeOrmModule.forFeature([xxxEntity])</code> 的经历。就像下面代码这样：</p>
<div class="language-ts codeBlockContainer_rxDN theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_i2h9">xxx.module.ts</div><div class="codeBlockContent_e6Y8"><pre tabindex="0" class="prism-code language-ts codeBlock_eEse thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_Uz_K"><span class="token-line" style="color:#393A34"><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">Module</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  imports</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">TypeOrmModule</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">forFeature</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">UserEntity</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  controllers</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">UserController</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  providers</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">UserService</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  exports</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">TypeOrmModule</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> UserService</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">UserModule</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup_Aaa5"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rNxk" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_8vl6"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_uXRx"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>对于初学者而言，很大程度上会忘记导入 <code>xxxEntity</code>，就会出现这样的报错</p>
<div class="language-bash codeBlockContainer_rxDN theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_e6Y8"><pre tabindex="0" class="prism-code language-bash codeBlock_eEse thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_Uz_K"><span class="token-line" style="color:#393A34"><span class="token plain">Potential solutions:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> - Is UserModule a valid NestJS module?</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> - If "UserEntityRepository" is a provider, is it part of the current UserModule?</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> - If "UserEntityRepository" is exported from a separate @Module, is that module imported within UserModule?</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   @Module({</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     imports: [ /* the Module containing "UserEntityRepository" */ ]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   })</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Error: Nest can't resolve dependencies of the userService (?). Please make sure that the argument "UserEntityRepository" at index [0] is available in the UserModule context.</span><br></span></code></pre><div class="buttonGroup_Aaa5"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rNxk" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_8vl6"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_uXRx"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>此外这还不是最繁琐的，你还需要再各个 service 中，通过下面的代码来注入 userRepository。</p>
<div class="language-ts codeBlockContainer_rxDN theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_i2h9">user.service.ts</div><div class="codeBlockContent_e6Y8"><pre tabindex="0" class="prism-code language-ts codeBlock_eEse thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_Uz_K"><span class="token-line" style="color:#393A34"><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">InjectRepository</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">UserEntity</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">private</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">readonly</span><span class="token plain"> userRepository</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Repository</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">UserEntity</span><span class="token operator" style="color:#393A34">&gt;</span><br></span></code></pre><div class="buttonGroup_Aaa5"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rNxk" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_8vl6"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_uXRx"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>一旦实体一多，要注入的 Repository 也就更多，无疑不是对开发者心智负担的加深。</p>
<p>再来看看 Prisma 是怎么导入的，你可以使用 <a href="https://nestjs-prisma.dev/docs/basic-usage/" target="_blank" rel="noopener noreferrer">nestjs-prisma</a> 或者按照官方文档中<a href="https://docs.nestjs.com/recipes/prisma#use-prisma-client-in-your-nestjs-services" target="_blank" rel="noopener noreferrer">创建 PrismaService</a>。</p>
<p>然后在 service 上，注入 PrismaService 后，就可以通过 <code>this.prisma[model]</code> 来调用模型(实体) ，就像这样</p>
<div class="language-ts codeBlockContainer_rxDN theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_i2h9">app.service.ts</div><div class="codeBlockContent_e6Y8"><pre tabindex="0" class="prism-code language-ts codeBlock_eEse thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_Uz_K"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> Injectable </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'@nestjs/common'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> PrismaService </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'nestjs-prisma'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">Injectable</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">AppService</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">constructor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">private</span><span class="token plain"> prisma</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> PrismaService</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">users</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">prisma</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">user</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">findMany</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">user</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">userId</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">prisma</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">user</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">findUnique</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      where</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> id</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> userId </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup_Aaa5"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rNxk" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_8vl6"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_uXRx"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>哪怕创建其他新的实体，只需要重新生成 PrismaClient，都无需再导入额外服务，this.prisma 便能操作所有与数据库相关的 api。</p>
<h3 class="anchor anchorWithStickyNavbar_jpdk" id="更好的类型安全">更好的类型安全<a href="https://blog.wlgs.site/blog/with-prisma-dont-use-typeorm#%E6%9B%B4%E5%A5%BD%E7%9A%84%E7%B1%BB%E5%9E%8B%E5%AE%89%E5%85%A8" class="hash-link" aria-label="更好的类型安全的直接链接" title="更好的类型安全的直接链接">​</a></h3>
<p>Prisma 的贡献者中有 <a href="https://github.com/millsp/ts-toolbelt" target="_blank" rel="noopener noreferrer">ts-toolbelt</a> 的作者，正因此 Prisma 的类型推导十分强大，能够自动生成几乎所有的类型。</p>
<p>而反观 TypeORM 虽说使用 Typescript 所编写，但它的类型推导真是一言难尽。我举几个例子：</p>
<p>在 TypeORM 中，你需要 select 选择某个实体的几个字段，你可以这么写</p>
<p><img decoding="async" loading="lazy" src="https://img.kuizuo.me/2024/0113165658-Untitled%204.png" alt="Untitled" class="img_aT2B"></p>
<p>你会发现 post 对象的类型提示依旧还是 postEntity，没有任何变化。但从开发者的体验角度而言，<strong>既然我选择查询 id 和 title 两个字段，那么你所返回的 post 类型应该也只有 id 与 title 才更符合预期</strong>而后续代码中由于允许 post 有 body 属性提示，那么 post.body 为 null 这样不必要的结果。</p>
<p>再来看看 Prisma，你就会发现 post 对象的类型提示信息才符合开发者的预期。像这样的细节在 Prisma 有非常多。</p>
<p><img decoding="async" loading="lazy" src="https://img.kuizuo.me/2024/0113165658-Untitled%205.png" alt="Untitled" class="img_aT2B"></p>
<p>这还不是最关键的，TypeORM 通常需要使用 <code>createQueryBuilder</code> 方法来构造 sql 语句来满足开发者所要查询的预期。而当你使用了该方法，你就会发现你所编写的代码与 js 无疑，我贴几张图给大伙看看。</p>
<p><img decoding="async" loading="lazy" src="https://img.kuizuo.me/2024/0113165658-Untitled%206.png" alt="Untitled" class="img_aT2B"></p>
<p><img decoding="async" loading="lazy" src="https://img.kuizuo.me/2024/0113165658-Untitled%207.png" alt="Untitled" class="img_aT2B"></p>
<p><img decoding="async" loading="lazy" src="https://img.kuizuo.me/2024/0113165658-Untitled%208.png" alt="Untitled" class="img_aT2B"></p>
<p>这无疑会诱发一些潜在 bug，我就多次因为要 select 某表中的某个字段，却因拼写错误导致查询失败。</p>
<h3 class="anchor anchorWithStickyNavbar_jpdk" id="创建实体">创建实体<a href="https://blog.wlgs.site/blog/with-prisma-dont-use-typeorm#%E5%88%9B%E5%BB%BA%E5%AE%9E%E4%BD%93" class="hash-link" aria-label="创建实体的直接链接" title="创建实体的直接链接">​</a></h3>
<p>在 TypeORM 中，假设你要新增一条 User 记录，你通常需要这么做</p>
<div class="language-ts codeBlockContainer_rxDN theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_e6Y8"><pre tabindex="0" class="prism-code language-ts codeBlock_eEse thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_Uz_K"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> newUser </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">User</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">newUser</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">name </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'kuizuo'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">newUser</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">email </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'hi@kuizuo.me'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> user </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> userRepository</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">save</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">newUser</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup_Aaa5"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rNxk" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_8vl6"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_uXRx"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>当然你可以对 User 实体中做点手脚，像下面这样加一个构造函数</p>
<div class="language-ts codeBlockContainer_rxDN theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_i2h9">user.entity.ts</div><div class="codeBlockContent_e6Y8"><pre tabindex="0" class="prism-code language-ts codeBlock_eEse thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_Uz_K"><span class="token-line" style="color:#393A34"><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">Entity</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">User</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">PrimaryGeneratedColumn</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  id</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">number</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">Column</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> unique</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  username</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token decorator at operator" style="color:#393A34">@</span><span class="token decorator function" style="color:#d73a49">Column</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  email</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">constructor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">partial</span><span class="token operator" style="color:#393A34">?</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Partial</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">UserEntity</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Object</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">assign</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> partial</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup_Aaa5"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rNxk" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_8vl6"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_uXRx"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<div class="language-ts codeBlockContainer_rxDN theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_e6Y8"><pre tabindex="0" class="prism-code language-ts codeBlock_eEse thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_Uz_K"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> newUser </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">User</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  name</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'kuizuo'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  email</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'hi@kuizuo.me'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> user </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> userRepository</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">save</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">newUser</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup_Aaa5"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rNxk" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_8vl6"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_uXRx"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>于是你就可以传递一个 js 对象到 User 实体，而不是 newUser.xxx = xxx 像 Java 版的写法。</p>
<p>而要是涉及到多个关联的数据，往往需要先查询到关联数据，然后再像上面这样赋值+保存。这里就不展开了，使用过 TypeORM 的应该深有体会。</p>
<p>而在 Prisma 中，绝大多数的操作你都只需要一条代码语句外加一个对象结构，像上述 TypeORM 的操作对应 Prisma 的代码语句如下</p>
<div class="language-ts codeBlockContainer_rxDN theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_e6Y8"><pre tabindex="0" class="prism-code language-ts codeBlock_eEse thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_Uz_K"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> user </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> prisma</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">user</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">create</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  data</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    name</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'kuizuo'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    email</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'hi@kuizuo.me'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup_Aaa5"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rNxk" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_8vl6"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_uXRx"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_jpdk" id="根据条件来创建还是更新">根据条件来创建还是更新<a href="https://blog.wlgs.site/blog/with-prisma-dont-use-typeorm#%E6%A0%B9%E6%8D%AE%E6%9D%A1%E4%BB%B6%E6%9D%A5%E5%88%9B%E5%BB%BA%E8%BF%98%E6%98%AF%E6%9B%B4%E6%96%B0" class="hash-link" aria-label="根据条件来创建还是更新的直接链接" title="根据条件来创建还是更新的直接链接">​</a></h3>
<p>在数据库中操作经常需要判断数据库中是否有某条记录，以此来决定是更改该记录还是创建新的一条记录，而在 Prisma 中，完全可以使用 upsert，就像下面这样</p>
<div class="language-ts codeBlockContainer_rxDN theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_e6Y8"><pre tabindex="0" class="prism-code language-ts codeBlock_eEse thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_Uz_K"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> user </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> prisma</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">user</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">upsert</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  where</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> id</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  update</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> email</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'example@prisma.io'</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  create</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> email</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'example@prisma.io'</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup_Aaa5"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rNxk" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_8vl6"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_uXRx"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_jpdk" id="聚合函数">聚合函数<a href="https://blog.wlgs.site/blog/with-prisma-dont-use-typeorm#%E8%81%9A%E5%90%88%E5%87%BD%E6%95%B0" class="hash-link" aria-label="聚合函数的直接链接" title="聚合函数的直接链接">​</a></h3>
<p>在 TypeORM 中，假设你需要使用聚合函数来查询的话，通常会这么写</p>
<div class="language-ts codeBlockContainer_rxDN theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_e6Y8"><pre tabindex="0" class="prism-code language-ts codeBlock_eEse thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_Uz_K"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> raw </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">userRepository</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">createQueryBuilder</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'user'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">select</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'SUM(user.id)'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'sum'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getRawOne</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> sum </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> raw</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">sum</span><br></span></code></pre><div class="buttonGroup_Aaa5"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rNxk" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_8vl6"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_uXRx"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>如果只是像上面这样，单纯查询 sum，那么 raw 的值是 <code>{ sum: 1 }</code> , 但最要命的就是 <code>select</code> 配合 <code>getRawOne</code> 还要额外查询 user 实体的属性，所得到的结果就像这样</p>
<div class="language-ts codeBlockContainer_rxDN theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_e6Y8"><pre tabindex="0" class="prism-code language-ts codeBlock_eEse thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_Uz_K"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> raw </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">userRepository</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">createQueryBuilder</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'user'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">select</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'SUM(user.id)'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'sum'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">addSelect</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'user'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">where</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'user.id = :id'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> id</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getRawOne</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup_Aaa5"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rNxk" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_8vl6"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_uXRx"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<div class="language-ts codeBlockContainer_rxDN theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_e6Y8"><pre tabindex="0" class="prism-code language-ts codeBlock_eEse thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_Uz_K"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	user_id</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	user_name</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'kuizuo'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	user_email： </span><span class="token string" style="color:#e3116c">'hi@kuizuo.me'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	sum</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'1'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup_Aaa5"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rNxk" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_8vl6"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_uXRx"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>所有 user 的属性都会带有 <code>user_</code> 前缀，这看上去有点不是那么合理，但如果考虑要联表查询的情况下，就会存在相同名称的字段，通过添加表名(别名)前缀就可以避免这种情况，这样来看貌似又有点合理了。</p>
<p>但还是回到熟悉的类型安全，这里的所返回的 raw 对象是个 any 类型，一样不会有任何提示。</p>
<p>而在 Prisma 中，提供了 专门用于聚合的方法 <a href="https://www.prisma.io/docs/orm/reference/prisma-client-reference#aggregate" target="_blank" rel="noopener noreferrer">aggregate</a>，可以特别轻松的实现聚合函数查询。</p>
<div class="language-ts codeBlockContainer_rxDN theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_e6Y8"><pre tabindex="0" class="prism-code language-ts codeBlock_eEse thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_Uz_K"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> minMaxAge </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> prisma</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">user</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">aggregate</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  _count</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    _all</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  _max</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    profileViews</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  _min</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    profileViews</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup_Aaa5"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rNxk" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_8vl6"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_uXRx"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<div class="language-ts codeBlockContainer_rxDN theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_e6Y8"><pre tabindex="0" class="prism-code language-ts codeBlock_eEse thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_Uz_K"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  _count</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> _all</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">29</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  _max</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> profileViews</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">90</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  _min</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> profileViews</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup_Aaa5"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rNxk" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_8vl6"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_uXRx"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<hr>
<p>看到这里，你若是长期使用 TypeORM 的用户必定会感同身受如此糟糕的体验。那种开发体验真的是无法用言语来形容的。</p>
<h2 class="anchor anchorWithStickyNavbar_jpdk" id="prisma-生态">Prisma 生态<a href="https://blog.wlgs.site/blog/with-prisma-dont-use-typeorm#prisma-%E7%94%9F%E6%80%81" class="hash-link" aria-label="Prisma 生态的直接链接" title="Prisma 生态的直接链接">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_jpdk" id="分页">分页<a href="https://blog.wlgs.site/blog/with-prisma-dont-use-typeorm#%E5%88%86%E9%A1%B5" class="hash-link" aria-label="分页的直接链接" title="分页的直接链接">​</a></h3>
<p>在 Prisma 你要实现分页，只需要在 prismaClient 继承 <a href="https://github.com/deptyped/prisma-extension-pagination" target="_blank" rel="noopener noreferrer">prisma-extension-pagination</a> 这个库。就可像下面这样，便可在 model 中使用paginate方法来实现分页，如下代码。</p>
<div class="language-ts codeBlockContainer_rxDN theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_e6Y8"><pre tabindex="0" class="prism-code language-ts codeBlock_eEse thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_Uz_K"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> PrismaClient </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'@prisma/client'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> pagination </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'prisma-extension-pagination'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> prisma </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">PrismaClient</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">$</span><span class="token keyword" style="color:#00009f">extends</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">pagination</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup_Aaa5"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rNxk" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_8vl6"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_uXRx"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<div class="language-ts codeBlockContainer_rxDN theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_e6Y8"><pre tabindex="0" class="prism-code language-ts codeBlock_eEse thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_Uz_K"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">users</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> meta</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> prisma</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">user</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">paginate</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">withPages</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    limit</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">10</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    page</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    includePageCount</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// meta contains the following</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  currentPage</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  isFirstPage</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">false</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  isLastPage</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">false</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  previousPage</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  nextPage</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">3</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  pageCount</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">10</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// the number of pages is calculated</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  totalCount</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">100</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// the total number of results is calculated</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup_Aaa5"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rNxk" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_8vl6"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_uXRx"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>支持页数(page)或光标(cursor)。</p>
<div class="theme-admonition theme-admonition-tip admonition_U9xL alert alert--success"><div class="admonitionHeading_EMc0"><span class="admonitionIcon_owc3"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>两种分页的使用场景</div><div class="admonitionContent_bAfi"><p>按页查询: 用于传统分页，例如翻页</p><p>光标查询: 根据游标进行查询，例如无限滚动</p></div></div>
<p>而在 TypeORM 你通常需要自己封装一个 paginate方法，就如下面代码所示（以下写法借用 <a href="https://www.npmjs.com/package/nestjs-typeorm-paginate" target="_blank" rel="noopener noreferrer">nestjs-typeorm-paginate</a>）</p>
<div class="language-ts codeBlockContainer_rxDN theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_e6Y8"><pre tabindex="0" class="prism-code language-ts codeBlock_eEse thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_Uz_K"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token generic-function function" style="color:#d73a49">paginate</span><span class="token generic-function generic class-name operator" style="color:#393A34">&lt;</span><span class="token generic-function generic class-name constant" style="color:#36acaa">T</span><span class="token generic-function generic class-name operator" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  queryBuilder</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> SelectQueryBuilder</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token constant" style="color:#36acaa">T</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  options</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> IPaginationOptions</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">Promise</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">Pagination</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token constant" style="color:#36acaa">T</span><span class="token operator" style="color:#393A34">&gt;&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> page</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> limit </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> options</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  queryBuilder</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">take</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">limit</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">skip</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">page </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> limit</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">items</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> total</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> queryBuilder</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getManyAndCount</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token generic-function function" style="color:#d73a49">createPaginationObject</span><span class="token generic-function generic class-name operator" style="color:#393A34">&lt;</span><span class="token generic-function generic class-name constant" style="color:#36acaa">T</span><span class="token generic-function generic class-name operator" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    items</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    totalItems</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> total</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    currentPage</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> page</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    limit</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// example</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> queryBuilder </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> userRepository</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">createQueryBuilder</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'user'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> items</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> meta </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">paginate</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">queryBuilder</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> page</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> limit </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup_Aaa5"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rNxk" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_8vl6"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_uXRx"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>当然也可以自定义userRepository，为其添加 paginate 方法，支持链式调用。但这无疑增添了开发成本。</p>
<h3 class="anchor anchorWithStickyNavbar_jpdk" id="根据-schema-自动生成数据验证">根据 Schema 自动生成数据验证<a href="https://blog.wlgs.site/blog/with-prisma-dont-use-typeorm#%E6%A0%B9%E6%8D%AE-schema-%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90%E6%95%B0%E6%8D%AE%E9%AA%8C%E8%AF%81" class="hash-link" aria-label="根据 Schema 自动生成数据验证的直接链接" title="根据 Schema 自动生成数据验证的直接链接">​</a></h3>
<p>得益于 Prisma 强大的数据建模 dsl，通过 <a href="https://www.prisma.io/docs/orm/prisma-schema/overview/generators" target="_blank" rel="noopener noreferrer">generators</a> 生成我们所需要的内容（文档，类型），比如可以使用 <a href="https://github.com/chrishoermann/zod-prisma-types" target="_blank" rel="noopener noreferrer">zod-prisma-types</a> 根据 Schema 生成 <a href="https://github.com/colinhacks/zod" target="_blank" rel="noopener noreferrer">zod</a> 验证器**。**</p>
<p>举个例子，可以为 schema.prisma 添加一条 generator，长下面这样</p>
<div class="language-prisma codeBlockContainer_rxDN theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_i2h9">prisma.schema</div><div class="codeBlockContent_e6Y8"><pre tabindex="0" class="prism-code language-prisma codeBlock_eEse thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_Uz_K"><span class="token-line" style="color:#393A34"><span class="token plain">generator client {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  provider = "prisma-client-js"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  output   = "./client"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">generator zod {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  provider                         = "zod-prisma-types"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  output                           = "./zod"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  createModelTypes                 = true</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	// ...rest of config</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">datasource db {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  provider = "postgresql"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  url      = env("DATABASE_URL")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">model User {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  id         String      @id @default(uuid())</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  email      String      @unique</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  name       String?</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup_Aaa5"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rNxk" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_8vl6"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_uXRx"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>执行构建命令后，这将会自动生成 zod/index.ts 文件，将包含 UserSchema 信息，其中片段代码如下</p>
<div class="language-ts codeBlockContainer_rxDN theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_i2h9">zod/index.ts</div><div class="codeBlockContent_e6Y8"><pre tabindex="0" class="prism-code language-ts codeBlock_eEse thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_Uz_K"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> UserSchema </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> z</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">object</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  id</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> z</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">string</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">uuid</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  email</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> z</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">string</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  name</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> z</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">string</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">nullable</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">type</span><span class="token plain"> </span><span class="token class-name">User</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> z</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">infer</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token keyword" style="color:#00009f">typeof</span><span class="token plain"> UserSchema</span><span class="token operator" style="color:#393A34">&gt;</span><br></span></code></pre><div class="buttonGroup_Aaa5"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rNxk" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_8vl6"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_uXRx"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>再通过 createZodDto，将 zod 验证器转化为 dto 类，就像下面这样</p>
<p><img decoding="async" loading="lazy" src="https://img.kuizuo.me/2024/0113165658-Untitled%209.png" alt="Untitled" class="img_aT2B"></p>
<p>当然你可能并不想在 nestjs 项目中使用 zod，而是希望使用传统的 <a href="https://www.npmjs.com/package/class-validator" target="_blank" rel="noopener noreferrer">class-validator</a> 来编写 dto。可以使用社区提供的 <a href="https://github.com/kimjbstar/prisma-class-generator" target="_blank" rel="noopener noreferrer">prisma-class-generator</a> 根据已有 model 生成 dto。</p>
<hr>
<p>合理来说，Prisma 并不是一个传统的 ORM，它的工作原理并不是将表映射到编程语言中的模型类，为处理关系数据库提供了一种面向对象的方式。而是在 Prisma Schema 中定义模型。在应用程序代码中，您可以使用 Prisma Client 以类型安全的方式读取和写入数据库中的数据，而无需管理复杂模型实例的开销。</p>
<p><img decoding="async" loading="lazy" src="https://img.kuizuo.me/2024/0113171541-202401131715135.png" alt="" class="img_aT2B"></p>
<p>总而言之，你若想要<a href="https://www.prisma.io/docs/orm/prisma-client/type-safety" target="_blank" rel="noopener noreferrer">更好的类型</a>，简洁的<a href="https://www.prisma.io/docs/orm/prisma-schema/data-model/database-mapping#prismas-default-naming-conventions-for-indexes-and-constraints" target="_blank" rel="noopener noreferrer">实体声明语法</a>，况且带有<a href="https://www.prisma.io/studio" target="_blank" rel="noopener noreferrer">可视化桌面端应用</a>，以及更好的<a href="https://www.prisma.io/ecosystem" target="_blank" rel="noopener noreferrer">生态完备</a>，那么你就应该选 Prisma。</p>
<h2 class="anchor anchorWithStickyNavbar_jpdk" id="总结">总结<a href="https://blog.wlgs.site/blog/with-prisma-dont-use-typeorm#%E6%80%BB%E7%BB%93" class="hash-link" aria-label="总结的直接链接" title="总结的直接链接">​</a></h2>
<p>在写这篇文章时，我也是彻底的将 Nestjs 项目中由 TypeORM 迁移到 Prisma ，这期间给我最大的变化就是在极少的代码量却又能实现强大的功能。许多涉及多表的 CRUD操作可以通过一条简洁的表达式来完成，而在使用 TypeORM 时，常常需要编写繁琐臃肿的 queryBuilder。</p>
<p>TypeORM 有种被 nestjs 深度绑定的模样，一提到 TypeORM，想必第一印象就是 Nestjs 中所用到的 ORM 框架。然而，Prisma 却不同，是一个全能通用的选择，可以在任何的 js/ts 框架中使用。</p>
<p>从开发体验的角度不接受任何选择 TypeORM 的反驳，有了更优优秀的选择，便不愿意也不可能在回去了。如果你还未尝试过 Prisma，我强烈建议你亲身体验一番。</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[一位未曾涉足算法的初学者收获]]></title>
            <link>https://blog.wlgs.site/blog/discoveries-of-an-algorithm-neophyte</link>
            <guid>https://blog.wlgs.site/blog/discoveries-of-an-algorithm-neophyte</guid>
            <pubDate>Sat, 16 Sep 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[正如标题所言，在我四年的编程经历中就没刷过一道算法题，这可能与我所编写的应用有关，算法对我而言提升不是特别大。加上我几乎都是在需求中学习，而非系统性的学习。所以像算法这种基础知识我自然就不是很熟悉。]]></description>
            <content:encoded><![CDATA[<p>正如标题所言，在我四年的编程经历中就没刷过一道算法题，这可能与我所编写的应用有关，算法对我而言提升不是特别大。加上我几乎都是<strong>在需求中学习，而非系统性的学习</strong>。所以像算法这种基础知识我自然就不是很熟悉。</p>
<h2 class="anchor anchorWithStickyNavbar_jpdk" id="那我为何会接触算法呢">那我为何会接触算法呢？<a href="https://blog.wlgs.site/blog/discoveries-of-an-algorithm-neophyte#%E9%82%A3%E6%88%91%E4%B8%BA%E4%BD%95%E4%BC%9A%E6%8E%A5%E8%A7%A6%E7%AE%97%E6%B3%95%E5%91%A2" class="hash-link" aria-label="那我为何会接触算法呢？的直接链接" title="那我为何会接触算法呢？的直接链接">​</a></h2>
<p>我在今年暑假期间有一个面试，当时面试官想考察下我的算法能力，而我直接明摆了说我不行（指算法上的不行），但面试官还是想继续考察，于是就出了道斐波那契数列作为考题。</p>
<p>但我毕竟也接触了 4 年的代码，虽说不刷算法，但起码也看过许多文章和代码，斐波那契数列使用递归实现的代码也有印象，于是很快我就写出了下面的代码作为我的答案。</p>
<div class="language-typescript codeBlockContainer_rxDN theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_e6Y8"><pre tabindex="0" class="prism-code language-typescript codeBlock_eEse thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_Uz_K"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">fib</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">n</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">n </span><span class="token operator" style="color:#393A34">&lt;=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> n</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">fib</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">n </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">fib</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">n </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup_Aaa5"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rNxk" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_8vl6"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_uXRx"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>面试官问我还有没有更好的答案，我便摇了摇头表示这 5 行不到的代码难道不是最优解？</p>
<blockquote>
<p>事实上这份代码看起来很简洁，实际却是耗时最慢的解法</p>
</blockquote>
<p>毫无疑问，在算法这关我肯定是挂了的，不过好在项目经验及后续的项目实践考核较为顺利，不然结局就是回去等通知了。最后面试接近尾声时，面试官友情提醒我加强基础知识（算法），强调各种应用框架不断更新迭代，但计算机的底层基础知识是不变的。于是在面试官的建议下，便有了本文。</p>
<p>好吧，我承认我是为了面试才去学算法的。</p>
<h3 class="anchor anchorWithStickyNavbar_jpdk" id="对上述代码进行优化">对上述代码进行优化<a href="https://blog.wlgs.site/blog/discoveries-of-an-algorithm-neophyte#%E5%AF%B9%E4%B8%8A%E8%BF%B0%E4%BB%A3%E7%A0%81%E8%BF%9B%E8%A1%8C%E4%BC%98%E5%8C%96" class="hash-link" aria-label="对上述代码进行优化的直接链接" title="对上述代码进行优化的直接链接">​</a></h3>
<p>在介绍我是从何处学习算法以及从中学到了什么，不妨先来看看上题的最优答案是什么。</p>
<p>对于有接触过算法的同学而言，不难看出时间复杂度为 O(n²)，而指数阶属于爆炸式增长，当 n 非常大时执行效果缓慢，且可能会出现函数调用堆栈溢出。</p>
<p>如果仔细观察一下，会发现这其中进行了非常多的重复计算，我们不妨将设置一个 res 变量来输出一下结果</p>
<div class="language-tsx codeBlockContainer_rxDN theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_e6Y8"><pre tabindex="0" class="prism-code language-tsx codeBlock_eEse thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_Uz_K"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">fib</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">n</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">n </span><span class="token operator" style="color:#393A34">&lt;=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> n</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> res </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">fib</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">n </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">fib</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">n </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token console class-name">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">res</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> res</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup_Aaa5"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rNxk" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_8vl6"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_uXRx"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>当 n=7 时，所输出的结果如下</p>
<p><img decoding="async" loading="lazy" src="https://img.kuizuo.me/202309162220346.png" alt="Untitled" class="img_aT2B"></p>
<p>这还只是在 n=7 的情况下，便有这么多输出结果。而在算法中要避免的就是重复计算，这能够高效的节省执行时间，因此不妨定义一个缓存变量，在递归时将缓存变量也传递进去，如果缓存变量中存在则说明已计算过，直接返回计算结果即可。</p>
<div class="language-typescript codeBlockContainer_rxDN theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_e6Y8"><pre tabindex="0" class="prism-code language-typescript codeBlock_eEse thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_Uz_K"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">fib</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">n</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> mem </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">n </span><span class="token operator" style="color:#393A34">&lt;=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> n</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">mem</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">n</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> mem</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">n</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> res </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">fib</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">n </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> mem</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">fib</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">n </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> mem</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token builtin">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">res</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  mem</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">n</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> res</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> res</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup_Aaa5"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rNxk" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_8vl6"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_uXRx"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>此时所输出的结果可以很明显的发现没有过多的重复计算，执行时间也有显著降低。</p>
<p><img decoding="async" loading="lazy" src="https://img.kuizuo.me/202309162220348.png" alt="Untitled" class="img_aT2B"></p>
<p>这便是<strong>记忆化搜索</strong>，时间复杂度被优化至 O(n)。</p>
<p>可这还是免不了递归调用出现堆栈溢出的情况（如 n=10000 时）。</p>
<p><img decoding="async" loading="lazy" src="https://img.kuizuo.me/202309162220349.png" alt="Untitled" class="img_aT2B"></p>
<p>从上面的解法来看，都是从”<strong>从顶至底</strong>”，比方说 n=7，会先求得 n=6 的结果, 而 n=6 又要求得 n=5 的结果，依次类推直至得到底层 n=1 的结果。</p>
<p>事实上我们可以换一种思路，先求得 n=1，n=2 的结果，然后依次类推上去，最终得到 n=6，n=7 的结果，也就是“<strong>从底至顶”</strong>，而这就是<strong>动态规划</strong>的方法。</p>
<p>从代码上来分析，因此我们可以初始化一个 dp 数组，用于存放数据状态。</p>
<div class="language-tsx codeBlockContainer_rxDN theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_e6Y8"><pre tabindex="0" class="prism-code language-tsx codeBlock_eEse thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_Uz_K"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">fib</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">n</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> dp </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">&lt;=</span><span class="token plain"> n</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i</span><span class="token operator" style="color:#393A34">++</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    dp</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> dp</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> dp</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> dp</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">n</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup_Aaa5"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rNxk" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_8vl6"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_uXRx"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>最终 dp 数组的最后一个成员便是原问题的解。此时输出 dp 数组结果。</p>
<p><img decoding="async" loading="lazy" src="https://img.kuizuo.me/202309162220350.png" alt="Untitled" class="img_aT2B"></p>
<p>且由于不存在递归调用，因此你当 n=10000 时也不在会出现堆栈溢出的情况（只不过最终的结果必定超出了 JS 数值可表示范围，所以只会输出 Infinity）</p>
<p>对于上述代码而言，在空间复杂度上能够从 O(n) 优化到 O(1)，至于实现可以参考 <a href="https://www.hello-algo.com/chapter_dynamic_programming/intro_to_dynamic_programming#1414" target="_blank" rel="noopener noreferrer">空间优化</a>，这里便不再赘述。</p>
<p>我想至少从这里你就能看出算法的魅力所在，<strong>这里我强烈推荐 <a href="https://www.hello-algo.com/" target="_blank" rel="noopener noreferrer">hello-algo</a> 这本数据结构与算法入门书</strong>，我的算法之旅的起点便是从这本书开始，同时激发起我对算法的兴趣。</p>
<h2 class="anchor anchorWithStickyNavbar_jpdk" id="两数之和">两数之和<a href="https://blog.wlgs.site/blog/discoveries-of-an-algorithm-neophyte#%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C" class="hash-link" aria-label="两数之和的直接链接" title="两数之和的直接链接">​</a></h2>
<p>于是在看完了这本算法书后，我便打开了大名鼎鼎的刷题网站 <a href="https://leetcode.cn/" target="_blank" rel="noopener noreferrer">LeetCode</a>，同时打开了究极经典题目的<a href="https://leetcode.cn/problems/two-sum" target="_blank" rel="noopener noreferrer">两数之和</a>。</p>
<blockquote>
<p>有人相爱，有人夜里开车看海，有人 leetcode 第一题都做不出来。</p>
</blockquote>
<p>题干：</p>
<blockquote>
<p>给定一个整数数组 <code>nums</code>&nbsp; 和一个整数目标值 <code>target</code>，请你在该数组中找出和为目标值 <code>target</code> 的那 <strong>两个</strong> 整数，并返回它们的数组下标。</p>
<p>你可以假设每种输入只会对应一个答案。但是，数组中同一个元素在答案里不能重复出现。</p>
<p>你可以按任意顺序返回答案。</p>
</blockquote>
<p>以下代码将会采用 JavaScript 代码作为演示。</p>
<h3 class="anchor anchorWithStickyNavbar_jpdk" id="暴力枚举">暴力枚举<a href="https://blog.wlgs.site/blog/discoveries-of-an-algorithm-neophyte#%E6%9A%B4%E5%8A%9B%E6%9E%9A%E4%B8%BE" class="hash-link" aria-label="暴力枚举的直接链接" title="暴力枚举的直接链接">​</a></h3>
<p>我初次接触该题也只会暴力解法，遇事不决，暴力解决。也很验证了那句话：不论多久过去，我首先还是想到两个 for。</p>
<div class="language-tsx codeBlockContainer_rxDN theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_e6Y8"><pre tabindex="0" class="prism-code language-tsx codeBlock_eEse thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_Uz_K"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> </span><span class="token function-variable function" style="color:#d73a49">twoSum</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">nums</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> target</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> n </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> nums</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">length</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> n</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i</span><span class="token operator" style="color:#393A34">++</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> j </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> j </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> n</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> j</span><span class="token operator" style="color:#393A34">++</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">nums</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> nums</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">j</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> target </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">!==</span><span class="token plain"> j</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> j</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup_Aaa5"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rNxk" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_8vl6"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_uXRx"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>当然针对上述 for 循环优化部分，比如说让 <code>j = i + 1</code> ，这样就可以有效避免重复数字的循环以及 <code>i ≠ j</code> 的判断。由于用到了两次循环，很显然时间复杂度为 O(n²)，并不高效。</p>
<h3 class="anchor anchorWithStickyNavbar_jpdk" id="哈希表">哈希表<a href="https://blog.wlgs.site/blog/discoveries-of-an-algorithm-neophyte#%E5%93%88%E5%B8%8C%E8%A1%A8" class="hash-link" aria-label="哈希表的直接链接" title="哈希表的直接链接">​</a></h3>
<p>我们不妨将每个数字通过 hash 表缓存起来，将值 <code>nums[i]</code> 作为 key，将 <code>i</code> 作为 value。由于题目的条件则是 <code>x + y = target</code>，也就是 <code>target - x = y</code>，这样判断的条件就可以由 <code>nums[i]+ nums[j] === target</code> 变为 <code>map.has(target - nums[i])</code> 。如果 map 表中有 y 索引，那么显然 <code>target - nums[i] = y</code>，取出 y 的索引以及当前 i 索引就能够得到答案。代码如下</p>
<div class="language-tsx codeBlockContainer_rxDN theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_e6Y8"><pre tabindex="0" class="prism-code language-tsx codeBlock_eEse thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_Uz_K"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> </span><span class="token function-variable function" style="color:#d73a49">twoSum</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">nums</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> target</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> map </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">Map</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> nums</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">length</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i</span><span class="token operator" style="color:#393A34">++</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">map</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">has</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">target </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> nums</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">map</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">target </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> nums</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> i</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    map</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">set</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">nums</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> i</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup_Aaa5"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rNxk" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_8vl6"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_uXRx"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>而这样由于只有一次循环，时间复杂度为 O(N)。</p>
<h3 class="anchor anchorWithStickyNavbar_jpdk" id="双指针算法特殊情况">双指针算法(特殊情况)<a href="https://blog.wlgs.site/blog/discoveries-of-an-algorithm-neophyte#%E5%8F%8C%E6%8C%87%E9%92%88%E7%AE%97%E6%B3%95%E7%89%B9%E6%AE%8A%E6%83%85%E5%86%B5" class="hash-link" aria-label="双指针算法(特殊情况)的直接链接" title="双指针算法(特殊情况)的直接链接">​</a></h3>
<p>假如理想情况下，题目所给定的 nums 是<strong>有序的情况</strong>，那么就可以考虑使用双指针解法。先说原理，假设给定的 nums 为 <code>[2,3,5,6,8]</code>，而目标的解为 9。在上面的做法中都是从索引 0 开始枚举，也就是 2,3,5…依次类推，如果没找到与 2 相加的元素则从 3 开始 3,5,6…依次类推。</p>
<p>此时我们不妨从<strong>最小的数</strong>和<strong>最大的数</strong>开始，在这个例子中也就是 2 和 8，很显然 <code>2 + 8 &gt; 9</code>，说明什么？说明 8 和中间所有数都大于 9 即 3+8 ，5+8 肯定都大于 9，所以 8 的下标必然不是最终结果，那么我们就可以把 8 排除，从 <code>[2,3,5,6]</code> 中找出结果，同样的从最小和最大的数开始，<code>2 + 6 &lt; 9</code> ，这又说明什么？说明 2 和中间这些数相加肯定都下雨 9 即 2+3，2+5 肯定都小于 9，因此 2 也应该排除，然后从 <code>[3,5,6]</code> 中找出结果。就这样依次类推，直到找到最终两个数 <code>3 + 6 = 9</code>，返回 3 与 6 的下标即可。</p>
<p>由于此解法相当于有两个坐标(指针)不断地向中间移动，因此这种解法也叫<strong>双指针算法</strong>。当然，要使用该方式的前提是输入的<strong>数组有序</strong>，否则无法使用。</p>
<p>用代码的方式来实现：</p>
<ol>
<li>定义两个坐标(指针)分别指向数组成员最左边与最右边，命名为 left 与 right。</li>
<li>使用 while 循环，循环条件为 left &lt; right。</li>
<li>判断 <code>nums[left] + nums[right]</code> 与 <code>target</code> 的大小关系，如果相等则说明找到目标(答案)，如果大于则 右指针减 1 <code>right—-</code>，小于则左指针加 1 <code>left++</code>。</li>
</ol>
<div class="language-tsx codeBlockContainer_rxDN theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_e6Y8"><pre tabindex="0" class="prism-code language-tsx codeBlock_eEse thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_Uz_K"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">twoSum</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">nums</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> target</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> left </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> right </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> nums</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">length</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">while</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">left </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> right</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> sum </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> nums</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">left</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> nums</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">right</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">sum </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> target</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">left</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> right</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">sum </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> target</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      right</span><span class="token operator" style="color:#393A34">--</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">sum </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> target</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      left</span><span class="token operator" style="color:#393A34">++</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup_Aaa5"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rNxk" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_8vl6"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_uXRx"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<hr>
<p>针对上述两道算法题浅浅的做个分享，毕竟我还只是一名初入算法的小白。对我而言，我的算法刷题之旅还有很长的一段时间。且看样子这条路可能不会太平坦。</p>
<h2 class="anchor anchorWithStickyNavbar_jpdk" id="算法对我有用吗">算法对我有用吗？<a href="https://blog.wlgs.site/blog/discoveries-of-an-algorithm-neophyte#%E7%AE%97%E6%B3%95%E5%AF%B9%E6%88%91%E6%9C%89%E7%94%A8%E5%90%97" class="hash-link" aria-label="算法对我有用吗？的直接链接" title="算法对我有用吗？的直接链接">​</a></h2>
<p>在我刷算法之前，我在网上看到鼓吹算法无用论的人，也能看到学算法却不知如何应用的人。</p>
<p>这也不禁让我思考 🤔，算法对我所开发的应用是否真的有用呢？</p>
<p>在我的开发过程中，往往面临着各种功能需求，而通常情况下我会以尽可能快的速度去实现该功能，至于说这个功能耗时 1ms，还是 100 ms，并不在乎。因为对我来说，这种微小的速度变化并不会被感知到，或者说绝大多数情况下，处理的数据规模都处在 n = 1 的情况下，此时我们还会在意 n² 大还是 2ⁿ 大吗？</p>
<p>但如果说到了用户感知到卡顿的情况下，那么此时才会关注性能优化，否则，过度的优化可能会成为一种徒劳的努力。</p>
<p>或许正是因为我都没有用到算法解决实际问题的经历，所以很难说服自己算法对我的工作有多大帮助。但不可否认的是，算法对我当前而言是一种思维上的拓宽。让我意识到一道（实际）问题的解法通常不只有一种，如何规划设计出一个高效的解决方案才是值得我们思考的地方。</p>
<h2 class="anchor anchorWithStickyNavbar_jpdk" id="结语">结语<a href="https://blog.wlgs.site/blog/discoveries-of-an-algorithm-neophyte#%E7%BB%93%E8%AF%AD" class="hash-link" aria-label="结语的直接链接" title="结语的直接链接">​</a></h2>
<p>借 MIT 教授 Erik Demaine 的一句话</p>
<blockquote>
<p>If you want to become a good programmer, you can spend 10 years programming, or spend 2 years programming and learning algorithms.</p>
</blockquote>
<p>如果你想成为一名优秀的程序员，你可以花 10 年时间编程，或者花 2 年时间编程和学习算法。</p>
<p>这或许就是学习算法的真正意义。</p>
<h2 class="anchor anchorWithStickyNavbar_jpdk" id="参考文章">参考文章<a href="https://blog.wlgs.site/blog/discoveries-of-an-algorithm-neophyte#%E5%8F%82%E8%80%83%E6%96%87%E7%AB%A0" class="hash-link" aria-label="参考文章的直接链接" title="参考文章的直接链接">​</a></h2>
<p><a href="https://www.hello-algo.com/chapter_dynamic_programming/intro_to_dynamic_programming" target="_blank" rel="noopener noreferrer">初探动态规划</a></p>
<p><a href="https://www.zhihu.com/question/335097718" target="_blank" rel="noopener noreferrer">学习算法重要吗?</a></p>]]></content:encoded>
        </item>
    </channel>
</rss>